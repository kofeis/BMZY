{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/ZhiShangGouBuDao/assets/Script/Tool/Tool_RigidBody.ts"],"names":["_decorator","Component","RigidBody2D","v2","Tool_Other","Tool_Event","ccclass","property","Tool_RigidBody","Set_Linear_Velocity","Node_Set","X","Y","Component_RigidBody","getComponent","instance","Get_Type_Is_Abnormal","linearVelocity","Set_Linear_Velocity_X","y","Set_Linear_Velocity_Y","x","Collider_Destroy","Off_Collider","scheduleOnce","destroy","Collider_Hide","active","Collider_Show","enabled","setRigidBodyActive","node","isActive","isValid","console","error","rigidBody","log","name","Collider_Stop","gravityScale","Collider_Recover","Gravity_Scale","Collider_ApplyForce","Force","applyForce","Collider_Sleep","sleep"],"mappings":"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","sourcesContent":["import { _decorator, BoxCollider2D, Component, Node, RigidBody, RigidBody2D, v2, Vec2 } from 'cc';\nimport { Tool_Other } from './Tool_Other';\nimport { Tool_Event } from './Tool_Event';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Tool_RigidBody')\nexport class Tool_RigidBody extends Component {\n\n    public static readonly instance = new Tool_RigidBody();\n\n    /**设置线性速度 */\n    Set_Linear_Velocity(Node_Set: Node, X: number = 0, Y: number = 0) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.linearVelocity = v2(X, Y);\n    }\n    /**设置线性速度 */\n    Set_Linear_Velocity_X(Node_Set: Node, X: number = 0,) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.linearVelocity = v2(X, Component_RigidBody.linearVelocity.y);\n    }\n    /**设置线性速度 */\n    Set_Linear_Velocity_Y(Node_Set: Node, Y: number = 0) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.linearVelocity = v2(Component_RigidBody.linearVelocity.x, Y);\n    }\n\n    /**销毁刚体(动态) */\n    Collider_Destroy(Node_Set: Node) {\n        Tool_Event.instance.Off_Collider(Node_Set);\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.linearVelocity = v2(0, 0);\n        this.scheduleOnce(() => {\n            Node_Set.destroy();\n        })\n    }\n\n    /**刚体隐藏 */\n    Collider_Hide(Node_Set: Node) {\n        // Tool_Event.instance.Off_Collider(Node_Set);\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.linearVelocity = v2(0, 0);\n        this.scheduleOnce(() => {\n            Node_Set.active = false;\n        })\n    }\n\n    /**刚体显示 */\n    Collider_Show(Node_Set: Node) {\n        Tool_Event.instance.Off_Collider(Node_Set);\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.enabled = false\n        Component_RigidBody.linearVelocity = v2(0, 0);\n        Node_Set.active = true;\n        this.scheduleOnce(() => {\n            Component_RigidBody.enabled = true\n        })\n    }\n\n    /**\n * 安全地改变刚体的 active 状态\n * @param {cc.Node} node - 需要改变 active 状态的节点\n * @param {boolean} isActive - 要设置的 active 状态\n */\n    setRigidBodyActive(node, isActive) {\n        // 检查节点是否存在\n        if (!node || !node.isValid) {\n            console.error(\"节点不存在或无效:\", node);\n            return;\n        }\n\n        // 检查节点是否有刚体组件\n        const rigidBody = node.getComponent(RigidBody2D);\n        if (!rigidBody) {\n            console.error(\"节点没有刚体组件:\", node);\n            return;\n        }\n\n        // 设置节点的 active 状态\n        try {\n            node.active = isActive;\n            console.log(`节点 ${node.name} 的 active 状态已设置为 ${isActive}`);\n        } catch (error) {\n            console.error(\"设置 active 状态时发生错误：\", error);\n        }\n    }\n\n\n\n    /**刚体停止 */\n    Collider_Stop(Node_Set: Node) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.gravityScale = 0;\n        Component_RigidBody.linearVelocity = v2(0, 0);\n    }\n\n    /**刚体恢复 */\n    Collider_Recover(Node_Set: Node, Gravity_Scale: number = 1) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.gravityScale = Gravity_Scale;\n    }\n\n    /**施加力 */\n    Collider_ApplyForce(Node_Set: Node, Force: Vec2) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.applyForce(Force, v2(0, 0), true);\n    }\n    Collider_Sleep(Node_Set: Node) {\n        let Component_RigidBody = Node_Set.getComponent(RigidBody2D);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Component_RigidBody)) {\n            return;\n        }\n        Component_RigidBody.sleep()\n    }\n\n\n}\n\n\n"]}