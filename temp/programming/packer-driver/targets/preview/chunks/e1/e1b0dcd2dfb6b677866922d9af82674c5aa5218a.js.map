{"version":3,"sources":["file:///D:/Tool/Project/MathMatchs/assets/Script/Game/GameMode/PanelMathMatch-001.ts"],"names":["_decorator","color","find","Label","tween","v3","Animation","Sprite","RichText","sys","PanelTemplate","Tool_Event","Tool_Animation","Tool_UI","Tool_Other","Tool_Console","PlatformApi","ccclass","property","PanelMathMatch","Interactable","GameTimeAll","GameTimeIng","GameTime","BtnBreak","PanelFH","GameData","KeyTarget","KeyExitState","KeyExitValue","KeyShadowIndex","LastKeyIndex","ValueTarget","ValuePos","ValueTargetC","KeyShadow","OnDistance","AnimCorrectNode","AnimWrongNode","TouchNode","TipLabel","TipNode","Obj_Start","num","Time","Time_Max","Obj_StartP","TimeP","Time_MaxP","onLoad","onEnable","IsInit","LoadPanel","GameStart","start","Timing","instance","Async_Function_Target","console","log","Anim_Frame_Play_Plus","BtnTip","getChildByName","getComponent","TimStop","Tween_Stop_Target","TimingP","TimStopP","Promise","resolve","reject","BtnSetting","node","PanelTip","BtnTipClose","BtnTipGet","PanelVictory","PanelFail","BtnNext","BtnExit","OnBtn","Game_Script","AnimSwitch","Resoure_Data","Load_Prefab","BtnSettingCall","Sound_Play","Vibration_Switch_Get","vibrateShort","UpdatePanelSetting","BtnBreakCall","active","BtnReStartCall","shareAppMessage","MathMatchLevel","MathMatchScore","Score","DataSet","BtnNextCall","BtnTipCall","length","PropNum","TipCall","BtnTipCloseCall","BtnTipGetCall","showVideoAd","UpdateProp","ValueNumber","i","push","Number","string","undefined","NullGIndex","Get_Random_Int","j","Result","Obj","Get_Min_Distance_Node","worldPosition","Distance","Num","Index","warn","error","TipStart","indexOf","IsExit","Arr_Check_Index","Key","Value","Temp","ColorOff","ColorOn","scale","angle","Set_SpriteFrame","Load_SpriteFrame","Set_Color_Label","Node_Index_Set","OriginalNode","OriginalLastKeyIndex","CurrentLastKeyIndex","Arr_Increase","KeyNodeIndexT","children","KeyNodeValueT","Set_Color_Sprite","UpdateUIValue","On_Event_TOUCH_END","ComponentLabel","Timer","TimerStop","GameFailed","Set_Btn_Event_Anim","position","clone","InitData","UpdateScore","F","Json","Load_Json","JsonData","OnMessage","Copy_Deep","IsHint","IsContinue","InitInterface","play","destroyAllChildren","Str","Shadow","ComponentLabel1","Off_Event_TOUCH_All","Check_Shadow","Set_Prefab_Node","On_Event_TOUCH_Drag","Event","Pos_Touch_Start","Animation_Node_Move_Time","add","to","easing","Pos_Touch_End","OriginalNodePos","Get_Target_Node_Local_Pos","LastKeyIndexTemp","KeyNodeIndexL","KeyNodeValueL","FindAllEquationIndices_","Async_Wait","Arr_Delete","Pos","sort","a","b","valueA","parseFloat","valueB","platform","Platform","WECHAT_GAME","WECHAT_MINI_PROGRAM","window","ge","onLevelStart","TipReset","grayscale","GameVictory","onLevelSuccess","T","Stars","I","onLevelFail","GameResult","BreakNode","SetNode","scheduleOnce","parent","Rows","Cols","Count","CorrectIndex","WrongIndex","ResultAll","CheckResult","GetResult","expression","processed","op","left","right","result","Error","splice","toString","ErrorChar","ValueResult","isNaN","Indexs","Chars","Sort_Reverse","KeyResult","IsEqual","Math","floor","KeyP","ValueP","AnimReset","AnimV","AnimF","ICall","IsPlay","name","Speed","Console_Style","Font_Color","Font_Size","Font_Weight","Font_Style","Font_Family","Text_Decoration","Text_Shadow","Background_Color","Padding","Margin","Border","Border_Radius"],"mappings":"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","sourcesContent":["import { _decorator, color, Component, find, Label, Layout, log, math, Node, Prefab, Tween, tween, v3, Vec3, Animation, Sprite, RichText, sys } from 'cc';\r\nimport { PanelTemplate } from './PanelTemplate';\r\nimport { Tool_Event } from '../../Tool/Tool_Event';\r\nimport { Tool_Animation } from '../../Tool/Tool_Animation';\r\nimport { Tool_UI } from '../../Tool/Tool_UI';\r\nimport { Tool_Other } from '../../Tool/Tool_Other';\r\nimport { Tool_Console } from '../../Tool/Tool_Console';\r\nimport { PlatformApi } from '../../Other/SDK/PlatformApi';\r\nimport { GravityPlatform } from '../../Other/GeSdk/GravityPlatform';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n/**数据接口 */\r\nexport interface DataMathMatch {\r\n    Level: number, Key: string[], Value: number[], Result: number[], Count: number;\r\n}\r\n\r\n@ccclass('PanelMathMatch')\r\nexport class PanelMathMatch extends PanelTemplate {\r\n\r\n    Interactable: boolean = true;\r\n\r\n    GameTimeAll: number = 180;\r\n    GameTimeIng: number = 0\r\n    GameTime: number = 0;\r\n\r\n    /**返回按钮 */\r\n    BtnBreak: Node = null;\r\n    PanelFH: Node = null;\r\n    GameData: DataMathMatch = null;\r\n\r\n    /**有效目标 */\r\n    KeyTarget: Node[] = [];\r\n    /**存在状态 */\r\n    KeyExitState: boolean[] = [];\r\n\r\n    /**存在节点 */\r\n    KeyExitValue: Node[] = [];\r\n\r\n\r\n    /**阴影索引 */\r\n    KeyShadowIndex: number = -1;\r\n\r\n\r\n    //Value节点上一次在Key节点的位置\r\n    LastKeyIndex: number[] = [];\r\n    /**有效目标 */\r\n    ValueTarget: Node[] = [];\r\n    ValuePos: Vec3[] = [];\r\n    /**Value有效目标副本 */\r\n    ValueTargetC: Node[] = [];\r\n\r\n    KeyShadow: Prefab = null;\r\n    /**有效距离 */\r\n    OnDistance: number = 50;\r\n\r\n\r\n    /**正确动画节点 */\r\n    AnimCorrectNode: Node[] = [];\r\n    /**错误动画节点 */\r\n    AnimWrongNode: Node[] = [];\r\n    TouchNode: Node = null;\r\n\r\n    TipLabel: Node = null;\r\n    TipNode: Node = null;\r\n\r\n\r\n    Obj_Start = { num: 0 }\r\n    Time: number = 0;\r\n    Time_Max: number = 15;//15\r\n\r\n    Obj_StartP = { num: 0 }\r\n    TimeP: number = 0;\r\n    Time_MaxP: number = 45;//45\r\n\r\n    async onLoad() {\r\n        super.onLoad();\r\n    }\r\n\r\n    async onEnable() {\r\n        if (!this.IsInit) {\r\n            await this.LoadPanel();\r\n        }\r\n        this.GameStart();\r\n        //    this.Resoure_Data.Music_Play(\"Audio/BgmGame\");\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    Timing() {\r\n        this.Obj_Start = { num: 0 };\r\n        Tool_Animation.instance.Async_Function_Target(this.Time_Max, this.Obj_Start, () => {\r\n            console.log(\"无操作播放\");\r\n            Tool_Animation.instance.Anim_Frame_Play_Plus(this.BtnTip.getChildByName(\"Icon\").getComponent(Animation), null, null, null, null, null, 5, 0, () => {\r\n                this.Timing();\r\n            });\r\n        })\r\n    }\r\n    TimStop() {\r\n        console.log(\"重置无操作播放计时\");\r\n        Tool_Animation.instance.Tween_Stop_Target(this.Obj_Start);\r\n        this.Timing();\r\n    }\r\n\r\n    TimingP() {\r\n        this.Obj_StartP = { num: 0 };\r\n        Tool_Animation.instance.Async_Function_Target(this.Time_MaxP, this.Obj_StartP, () => {\r\n            console.log(\"误操作播放\");\r\n            Tool_Animation.instance.Anim_Frame_Play_Plus(this.BtnTip.getChildByName(\"Icon\").getComponent(Animation), null, null, null, null, null, 5, 0, () => {\r\n                this.TimingP();\r\n            });\r\n        })\r\n    }\r\n    TimStopP() {\r\n        console.log(\"重置误操作播放计时\");\r\n        Tool_Animation.instance.Tween_Stop_Target(this.Obj_StartP);\r\n        this.TimingP();\r\n    }\r\n\r\n\r\n    /**加载面板 */\r\n    async LoadPanel(): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            /**绑定关键节点 */\r\n            this.BtnSetting = find(\"BtnSetting\", this.node);\r\n\r\n            this.PanelTip = find(\"PanelTip\", this.node);\r\n            this.BtnTip = find(\"BtnTip\", this.node);\r\n            this.BtnTipClose = find(\"BtnTipClose\", this.PanelTip);\r\n            this.BtnTipGet = find(\"BtnTipGet\", this.PanelTip);\r\n\r\n            this.PanelFH = find(\"PanelFH\", this.node);\r\n\r\n\r\n            this.PanelVictory = find(\"PanelVictory\", this.node);\r\n            this.PanelFail = find(\"PanelFail\", this.node);\r\n            this.BtnNext = find(\"BtnNext\", this.PanelVictory);\r\n\r\n            // this.BtnGet = find(\"BtnGet\", this.PanelTip);\r\n            this.BtnExit = find(\"BtnExit\", this.node);\r\n            /**注册按钮事件 */\r\n            await this.OnBtn(this.Game_Script.AnimSwitch);\r\n            this.IsInit = true;\r\n            resolve();\r\n            this.KeyShadow = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelMathMatch/KeyShadow\");\r\n        });\r\n    }\r\n\r\n    /**注册按钮 */\r\n    async OnBtn(AnimSwitch: boolean = false) {\r\n\r\n        /**设置按钮 */\r\n        const BtnSettingCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            this.Game_Script.UpdatePanelSetting(true);\r\n        }\r\n\r\n        /**关闭按钮 */\r\n        const BtnBreakCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            this.node.active = false;\r\n        }\r\n\r\n        /**重新游戏 */\r\n        const BtnReStartCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            PlatformApi.instance.shareAppMessage(() => { });\r\n            this.Game_Script.MathMatchLevel--;\r\n            this.Game_Script.MathMatchScore -= this.Score;\r\n            this.Game_Script.DataSet();\r\n            this.GameStart();\r\n        }\r\n        /**下一关按钮 */\r\n        const BtnNextCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            this.GameStart();\r\n        }\r\n\r\n        const BtnTipCall = async () => {\r\n            if (this.ValueTarget.length == 0) {\r\n                return;\r\n            }\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            if (this.Game_Script.PropNum > 0) {\r\n                TipCall();\r\n            } else {\r\n                this.PanelTip.active = true;\r\n            }\r\n\r\n        }\r\n        const BtnTipCloseCall = async () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            this.PanelTip.active = false;\r\n        }\r\n        const BtnTipGetCall = async () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            PlatformApi.instance.showVideoAd(() => {\r\n                this.Game_Script.PropNum += 200;\r\n                this.Game_Script.DataSet();\r\n                this.UpdateProp();\r\n                this.PanelTip.active = false;\r\n            }, () => {\r\n\r\n            })\r\n        }\r\n\r\n\r\n        /**提示 */\r\n        const TipCall = async () => {\r\n\r\n            // this.Game_Script.OnMessage(\"没有更多关卡了\");\r\n            if (!this.Interactable) {\r\n                return\r\n            }\r\n\r\n            // if (this.TipLabel != null || this.TipNode != null) {\r\n            //     return;\r\n            // }\r\n\r\n            //剩下的数字\r\n            let ValueNumber: number[] = [];\r\n            for (let i = 0; i < this.ValueTarget.length; i++) {\r\n                ValueNumber.push(Number(this.ValueTarget[i].getChildByName(\"Label\").getComponent(Label).string));\r\n            }\r\n            if (ValueNumber == undefined) {\r\n                this.TipLabel = null;\r\n                this.TipNode = null;\r\n                return;\r\n            }\r\n\r\n            this.Game_Script.PropNum--;\r\n            this.Game_Script.DataSet();\r\n            this.UpdateProp();\r\n\r\n            console.log(\"剩下的数字\", ValueNumber);\r\n\r\n            let NullGIndex = Tool_Other.instance.Get_Random_Int(0, ValueNumber.length - 1);\r\n\r\n            //索引\r\n            console.log(\"V索引\", NullGIndex);\r\n            //答案\r\n            console.log(\"答案\", ValueNumber[NullGIndex]);\r\n\r\n            for (let j = 0; j < this.GameData.Result.length; j++) {\r\n                //如何是正确答案\r\n                if (this.GameData.Result[j] == ValueNumber[NullGIndex]) {\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.KeyTarget[j].worldPosition, this.ValueTargetC);\r\n                    if (Obj.Distance < this.OnDistance) {\r\n                        let Num = Number(this.ValueTargetC[Obj.Index].getChildByName(\"Label\").getComponent(Label).string);\r\n                        console.warn(\"当前答案\", Num);\r\n                        if (Num == ValueNumber[NullGIndex]) {\r\n                            continue;\r\n                        } else {\r\n                            console.error(\"K索引\", j);\r\n                            console.error(Obj);\r\n                            let TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\r\n                            // this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\r\n                            // Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\r\n                            let TipNode = this.ValueTarget[NullGIndex];\r\n                            this.TipStart(TipNode, TipLabel);\r\n                            let TouchNode = this.ValueTargetC[Obj.Index];\r\n                            Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                            let i = this.ValueTarget.indexOf(TouchNode);\r\n                            let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                            let Key = find(\"Key\", this.node);\r\n                            let Value = find(\"Value\", this.node);\r\n                            let Temp = find(\"Temp\", this.node);\r\n                            let ColorOff: math.Color = color(255, 255, 155, 255);\r\n                            let ColorOn: math.Color = color(155, 255, 155, 255);\r\n                            Tool_Animation.instance.Tween_Stop_Target(TouchNode);\r\n                            TouchNode.scale = v3(1, 1, 1);\r\n                            TouchNode.angle = 0;\r\n                            Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                            Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n                            Tool_UI.instance.Node_Index_Set(TouchNode, -1);\r\n\r\n                            // 1. 获取原节点（当前占用目标位置的节点）\r\n                            const OriginalNode = this.KeyExitValue[Obj.Index];\r\n                            // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\r\n                            //原上次索引\r\n                            let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\r\n                            //现上次索引\r\n                            let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\r\n                            // console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\r\n                            // console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                            // this.TipStart();\r\n                            // console.log(\"是否存在\", IsExit);\r\n                            if (!IsExit) {\r\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\r\n                                //题目节点的索引\r\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                                let KeyNodeValueT: string = \"N\";\r\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                                // console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                                // console.log(this.GameData);\r\n                                if (this.LastKeyIndex[i] != null) {\r\n                                    this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                                    this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                                }\r\n                                // 重置当前目标位置的状态（如果之前已被占用）\r\n                                if (this.KeyExitState[Obj.Index]) {\r\n                                    this.KeyExitState[Obj.Index] = false;\r\n                                    this.KeyExitValue[Obj.Index] = null;\r\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                                }\r\n                                this.LastKeyIndex[i] = null;\r\n                            }\r\n                            this.UpdateUIValue();\r\n                            return;\r\n                        }\r\n\r\n                    } else {\r\n                        let TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\r\n                        // this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\r\n                        // Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\r\n                        // console.error(\"K索引\", j);\r\n                        // console.error(Obj);\r\n                        let TipNode = this.ValueTarget[NullGIndex];\r\n\r\n                        this.TipStart(TipNode, TipLabel);\r\n                        return\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /**设置按钮事件 */\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting, BtnSettingCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, BtnTipCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipClose, BtnTipCloseCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipGet, BtnTipGetCall);\r\n\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnNext, BtnNextCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnExit, BtnBreakCall);\r\n\r\n\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnNext\"), BtnNextCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnReStart\"), BtnReStartCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnNext\"), BtnNextCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnBreak\"), BtnBreakCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"Btn\"), () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            PlatformApi.instance.showVideoAd(() => {\r\n                this.PanelFH.active = false;\r\n                this.GameTime = this.GameTimeAll;\r\n                let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\r\n                this.Game_Script.Timer(ComponentLabel, this.GameTime, () => {\r\n                    this.PanelFH.active = true;\r\n                    this.Game_Script.TimerStop();\r\n                }, \"S\", () => {\r\n                    this.GameTimeIng++;\r\n                });\r\n            }, () => {\r\n\r\n            })\r\n\r\n\r\n        });\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"BtnClose\"), () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\r\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                PlatformApi.instance.vibrateShort();\r\n            }\r\n            this.PanelFH.active = false;\r\n            this.GameFailed();\r\n        });\r\n\r\n        /**设置按钮动画 */\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipClose, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipGet, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnNext, AnimSwitch);\r\n\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnExit, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnNext\"), AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\r\n\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFH.getChildByName(\"Btn\"), AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\r\n\r\n\r\n        let Key = find(\"Key\", this.node);\r\n        let Value = find(\"Value\", this.node);\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            this.ValuePos.push(Value.children[i].position.clone());\r\n        }\r\n    }\r\n\r\n\r\n    /**初始化数据 */\r\n    async InitData() {\r\n\r\n        this.Game_Script.UpdateScore();\r\n\r\n        console.log(\"初始化数据\");\r\n        /**注册按钮事件 */\r\n        // await this.OnBtn(this.Game_Script.AnimSwitch);\r\n        this.KeyTarget = [];\r\n        this.KeyExitState = [];\r\n        this.KeyExitValue = [];\r\n\r\n        this.ValueTarget = [];\r\n        this.ValueTargetC = [];\r\n        this.LastKeyIndex = [];\r\n\r\n        this.AnimCorrectNode = [];\r\n        this.AnimWrongNode = [];\r\n\r\n        this.Interactable = true;\r\n\r\n\r\n\r\n\r\n        this.TouchNode = null;\r\n        this.TipLabel = null;\r\n        this.TipNode = null;\r\n\r\n        this.GameTimeIng = 0;\r\n\r\n\r\n        // this.Game_Script.MathMatchLevel = 1\r\n\r\n\r\n        let F = {\r\n            \"Level\": 6,\r\n            \"Key\": [\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n            ],\r\n            \"Value\": [],\r\n            \"Result\": [],\r\n            \"Count\": 0\r\n        }\r\n\r\n\r\n        const Json = await this.Resoure_Data.Load_Json(\"Json/mathmatch\");\r\n        const JsonData = Json[\"Data\"];\r\n        console.log(JsonData);\r\n\r\n        this.GameData = null;\r\n        if (this.Game_Script.MathMatchLevel >= JsonData.length) {\r\n            this.Game_Script.OnMessage(\"没有更多关卡了\");\r\n            this.GameData = this.Resoure_Data.Copy_Deep(JsonData[JsonData.length - 1]);\r\n        } else {\r\n            this.GameData = this.Resoure_Data.Copy_Deep(JsonData[this.Game_Script.MathMatchLevel]);\r\n        }\r\n        console.log(this.GameData);\r\n\r\n        this.Game_Script.IsHint = false;\r\n        this.Game_Script.IsContinue = false;\r\n        this.GameTime = this.GameTimeAll;\r\n        let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\r\n        this.Game_Script.Timer(ComponentLabel, this.GameTimeAll, () => {\r\n            console.log(\"失败\");\r\n            this.PanelFH.active = true;\r\n            this.Game_Script.TimerStop();\r\n        }, \"S\", () => {\r\n            this.GameTimeIng++;\r\n        });\r\n\r\n    }\r\n\r\n    /**初始化界面 */\r\n    async InitInterface() {\r\n\r\n        if (this.Game_Script.MathMatchLevel == 0) {\r\n            find(\"Hand\", this.node).getComponent(Animation).play();\r\n            this.Game_Script.OnMessage(\"将需要的数字拖动到空格上\");\r\n        }\r\n        if (this.Game_Script.MathMatchLevel == 1) {\r\n            find(\"ND\", this.node).getComponent(Animation).play();\r\n        }\r\n\r\n        this.PanelVictory.active = false;\r\n        this.PanelFail.active = false;\r\n        this.PanelTip.active = false;\r\n        this.PanelFH.active = false;\r\n        this.UpdateProp();\r\n        this.node.getChildByName(\"Title\").getChildByName(\"Leves\").getComponent(Label).string = `第${this.Game_Script.MathMatchLevel + 1}关`;\r\n        find(\"Temp\", this.node).destroyAllChildren();\r\n        let Key = find(\"Key\", this.node);\r\n        let Value = find(\"Value\", this.node);\r\n\r\n        for (let i = 0; i < Key.children.length; i++) {\r\n            Key.children[i].active = false;\r\n            Tool_UI.instance.Set_Color_Sprite(Key.children[i].getChildByName(\"Bg\").getChildByName(\"Sp\"), color(255, 255, 155, 255));\r\n        }\r\n\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            Value.children[i].active = false;\r\n            Value.children[i].scale = v3(1, 1, 1);\r\n            Value.children[i].angle = 0;\r\n\r\n            Tool_UI.instance.Set_SpriteFrame(Value.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n            Tool_UI.instance.Set_Color_Label(Value.children[i].getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n        }\r\n\r\n        if (this.GameData == null) {\r\n            console.log(\"配置错误\");\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < Key.children.length; i++) {\r\n            Key.children[i].active = true;\r\n            switch (this.GameData.Key[i]) {\r\n                case \"U\":\r\n                    Key.children[i].active = false;\r\n                    break;\r\n                case \"N\":\r\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = \"\";\r\n                    this.KeyTarget.push(Key.children[i]);\r\n                    this.KeyExitState.push(false);\r\n                    this.KeyExitValue.push(null);\r\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                    break;\r\n                default:\r\n                    let Str: string = \"\";\r\n                    switch (this.GameData.Key[i]) {\r\n                        // case \"/\":\r\n                        //     Str = \"÷\";\r\n                        // break;\r\n                        case \"X\":\r\n                            Str = \"x\";\r\n                            break;\r\n                        default:\r\n                            Str = this.GameData.Key[i];\r\n                            break;\r\n                    }\r\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = Str\r\n\r\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let Temp = find(\"Temp\", this.node);\r\n        let ColorOff: math.Color = color(255, 255, 155, 255);\r\n        let ColorOn: math.Color = color(155, 255, 155, 255);\r\n\r\n\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            const Shadow = Value.children[i].getChildByName(\"Shadow\");\r\n            const ComponentLabel1 = Value.children[i].getChildByName(\"Label\").getComponent(Label);\r\n            Shadow.active = false;\r\n            Value.children[i].active = i < this.GameData.Value.length ? true : false;\r\n            if (Value.children[i].active) {\r\n                this.ValueTarget.push(Value.children[i]);\r\n                this.ValueTargetC.push(Value.children[i]);\r\n                this.LastKeyIndex.push(null);\r\n                Value.children[i].position = this.ValuePos[i];\r\n                ComponentLabel1.string = this.GameData.Value[i] + \"\";\r\n\r\n                Tool_Event.instance.Off_Event_TOUCH_All(Value.children[i]);\r\n\r\n\r\n\r\n                const TouchNode = Value.children[i];\r\n                const Shadow = TouchNode.getChildByName(\"Shadow\");\r\n                const ComponentLabel = TouchNode.getChildByName(\"Label\").getComponent(Label);\r\n                const Check_Shadow = () => {\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        if (this.KeyShadowIndex == Obj.Index) {\r\n                            return;\r\n                        }\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = Obj.Index;\r\n                        Tool_UI.instance.Set_Prefab_Node(this.KeyShadow, Temp, this.KeyTarget[Obj.Index], \"\")\r\n                    } else {\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = -1;\r\n                    }\r\n                }\r\n\r\n\r\n                Tool_Event.instance.On_Event_TOUCH_Drag(TouchNode, () => this.Interactable, async (Event, Pos_Touch_Start) => {\r\n                    if (this.GameData == null) {\r\n                        this.Interactable = false;\r\n                        console.log(\"配置错误\");\r\n                        return;\r\n                    }\r\n                    this.TouchNode = TouchNode;\r\n                    console.log(this.LastKeyIndex, i, this.ValueTargetC.indexOf(TouchNode));\r\n                    /**触摸开始回调 */\r\n                    this.Resoure_Data.Sound_Play(\"Audio/NumClick\");\r\n                    if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n                        PlatformApi.instance.vibrateShort();\r\n                    }\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                    Tool_Animation.instance.Tween_Stop_Target(this.KeyTarget[Obj.Index]);\r\n                    this.KeyTarget[Obj.Index].scale = v3(1, 1, 1);\r\n                    this.KeyTarget[Obj.Index].angle = 0;\r\n                    Tool_Animation.instance.Tween_Stop_Target(TouchNode);\r\n                    TouchNode.scale = v3(1, 1, 1);\r\n                    TouchNode.angle = 0;\r\n                    Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                    Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                    Tool_UI.instance.Node_Index_Set(TouchNode, -1);\r\n                    Shadow.active = true;\r\n                    Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos_Touch_Start.clone().add(v3(0, 25, 0)), 0.02, null, \"smooth\");\r\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                    if (!IsExit) {\r\n                        tween(TouchNode)\r\n                            .to(0.25, { scale: v3(1, 1, 1) }, { easing: \"backOut\" })\r\n                            .start();\r\n                    }\r\n                    Check_Shadow();\r\n                }, (Event, Pos_Touch_Start) => {\r\n                    /**触摸移动回调 */\r\n                    Check_Shadow();\r\n                }, async (Event, Pos_Touch_Start, Pos_Touch_End) => {\r\n                    /**触摸结束回调 */\r\n                    Shadow.active = false;\r\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n\r\n                    // 1. 获取原节点（当前占用目标位置的节点）\r\n                    const OriginalNode = this.KeyExitValue[Obj.Index];\r\n                    // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\r\n                    //原上次索引\r\n                    let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\r\n                    //现上次索引\r\n                    let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\r\n                    console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\r\n                    console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n\r\n                        // this.TipReset();\r\n\r\n                        //目标位置被占用\r\n                        if (this.KeyExitState[Obj.Index] && this.LastKeyIndex[i] != Obj.Index) {\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                this.KeyTarget[Obj.Index].active = false;\r\n                                this.KeyTarget[this.LastKeyIndex[i]].active = false;\r\n                                // 将原节点移动到 LastKeyIndex 的位置\r\n                                const OriginalNodePos = Tool_UI.instance.Get_Target_Node_Local_Pos(OriginalNode, this.KeyTarget[this.LastKeyIndex[i]]);\r\n                                this.Interactable = false;\r\n                                Tool_Animation.instance.Animation_Node_Move_Time(OriginalNode, OriginalNodePos, 0.25, async () => {\r\n                                    this.Interactable = true;\r\n                                    this.KeyTarget[Obj.Index].active = true;\r\n                                    this.KeyTarget[this.LastKeyIndex[i]].active = true;\r\n                                    //交换索引\r\n\r\n                                    console.log(this.LastKeyIndex, 1);\r\n                                    console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                                    console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                                    const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                                    this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                                    this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                                    //交换节点的索引\r\n                                    let KeyNodeIndexL = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[OriginalLastKeyIndex]]);\r\n                                    let KeyNodeValueL = OriginalNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                    //题目节点的索引\r\n                                    let KeyNodeIndexT = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                                    let KeyNodeValueT = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                    this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n                                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n\r\n                                    console.log(\"交换节点的索引\", KeyNodeIndexL, \"交换节点的数值\", KeyNodeValueL);\r\n                                    console.log(\"触摸节点的索引\", KeyNodeIndexT, \"触摸节点的数值\", KeyNodeValueT);\r\n                                    console.log(this.GameData);\r\n\r\n                                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n\r\n\r\n                                    Tool_Animation.instance.Tween_Stop_Target(OriginalNode);\r\n                                    OriginalNode.scale = v3(0.9, 0.9, 1);\r\n                                    OriginalNode.angle = 0;\r\n                                    Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                    Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                                    // console.error(OriginalNode, TouchNode);\r\n\r\n                                    await Tool_Animation.instance.Async_Wait(0.05);\r\n                                    this.TouchNode = OriginalNode;\r\n                                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n                                }, \"smooth\");\r\n                                // 更新原节点的状态为占用 LastKeyIndex\r\n                                this.KeyExitState[this.LastKeyIndex[i]] = true;\r\n                                this.KeyExitValue[this.LastKeyIndex[i]] = OriginalNode;\r\n                            } else {\r\n                                // 如果 LastKeyIndex 为 null，将原节点放回 ValueTarget 池\r\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, OriginalNode);\r\n\r\n                                Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                                //交换索引\r\n                                console.log(this.LastKeyIndex, 2);\r\n                                console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                                console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n\r\n                                const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                                this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                                this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                                //题目节点的索引\r\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                                let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                                console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                                console.log(this.GameData);\r\n\r\n\r\n                                this.FindAllEquationIndices_(this.GameData.Key, 0.2);\r\n                            }\r\n                            // 3. 将新节点(TouchNode)放置到目标位置（Obj.Index）\r\n                            this.KeyExitState[Obj.Index] = true;\r\n                            this.KeyExitValue[Obj.Index] = TouchNode;\r\n                            // 4. 更新颜色和临时状态\r\n                            Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                            }\r\n                            //放置成功 移除节点\r\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                            Temp.destroyAllChildren();\r\n                            this.KeyShadowIndex = -1;\r\n                            // 6. 更新 UI\r\n                            this.UpdateUIValue();\r\n                            let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                            await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0.2, null, \"smooth\");\r\n                            tween(TouchNode)\r\n                                .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                                .start();\r\n                            return;\r\n                        }\r\n\r\n                        if (IsExit) {\r\n                            //放置成功 移除节点\r\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n                            this.UpdateUIValue();\r\n                        } else {\r\n\r\n\r\n                            let KeyNodeIndexL: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            if (KeyNodeIndexL == -1) {\r\n                                console.log(CurrentLastKeyIndex);//有值\r\n                                console.log(this.LastKeyIndex[CurrentLastKeyIndex]);\r\n                                console.log(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            }\r\n\r\n                            let KeyNodeValueL: string = \"N\";\r\n                            this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n\r\n                            console.log(\"赋值的索引\", KeyNodeIndexL, \"赋值的数据\", KeyNodeValueL);\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n\r\n                        }\r\n                        this.KeyExitState[Obj.Index] = true;\r\n                        this.KeyExitValue[Obj.Index] = TouchNode;\r\n                        if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\r\n                            this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                            this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                        }\r\n                        //改变Key背景颜色\r\n                        this.LastKeyIndex[i] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                        this.LastKeyIndex[i] = Obj.Index;\r\n\r\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] = Obj.Index;\r\n\r\n                        console.error(Obj.Index, this.LastKeyIndex[i], i, Value.children.indexOf(TouchNode));\r\n\r\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = -1;\r\n                        let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                        await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0, null, \"smooth\");\r\n                        tween(TouchNode)\r\n                            .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                            .start();\r\n                    } else {\r\n                        // this.TipStart();\r\n                        if (!IsExit) {\r\n                            Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\r\n\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            let KeyNodeValueT: string = \"N\";\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                                this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                            }\r\n                            // 重置当前目标位置的状态（如果之前已被占用）\r\n                            if (this.KeyExitState[Obj.Index]) {\r\n                                this.KeyExitState[Obj.Index] = false;\r\n                                this.KeyExitValue[Obj.Index] = null;\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                            }\r\n\r\n\r\n                            this.LastKeyIndex[i] = null;\r\n                        }\r\n                        this.UpdateUIValue();\r\n\r\n                    }\r\n                    console.log(\"this.KeyExitState\", this.KeyExitState);\r\n                    console.log(\"this.KeyExitValue\", this.KeyExitValue);\r\n                    console.log(\"this.ValueTarget\", this.ValueTarget);\r\n\r\n                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n\r\n                });\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        this.UpdateUIValue();\r\n\r\n    }\r\n\r\n    /**刷新排序 */\r\n    UpdateUIValue() {\r\n\r\n        this.ValueTarget.sort((a, b) => {\r\n            const valueA = parseFloat(a.getChildByName(\"Label\").getComponent(Label).string);\r\n            const valueB = parseFloat(b.getChildByName(\"Label\").getComponent(Label).string);\r\n            return valueA - valueB;\r\n        });\r\n        for (let i = 0; i < this.ValueTarget.length; i++) {\r\n            this.ValueTarget[i].scale = v3(1, 1, 1);\r\n            this.ValueTarget[i].angle = 0;\r\n            Tool_Animation.instance.Animation_Node_Move_Time(this.ValueTarget[i], this.ValuePos[i], 0.2, null, \"smooth\");\r\n        }\r\n    }\r\n\r\n    async GameStart() {\r\n\r\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\r\n            try {\r\n                window.ge.onLevelStart({ \"$user_level\": this.Game_Script.MathMatchLevel });\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n\r\n        this.TipReset();\r\n        this.Timing();\r\n        await this.InitData();\r\n        await this.InitInterface();\r\n        this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\r\n    }\r\n\r\n    async GameVictory() {\r\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\r\n            try {\r\n                window.ge.onLevelSuccess({ \"$user_level\": this.Game_Script.MathMatchLevel });\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n\r\n        this.Resoure_Data.Sound_Play(\"Audio/Victory\");\r\n        this.Game_Script.TimerStop();\r\n        this.PanelVictory.active = true;\r\n        this.Game_Script.MathMatchLevel++;\r\n\r\n\r\n        let T = this.GameTimeIng / this.GameTimeAll;\r\n        this.Score = 0;\r\n        if (T < 0.45) {\r\n            this.Score = 3;\r\n            this.Resoure_Data.Sound_Play(\"Audio/Start3\");\r\n        } else if (T < 0.7) {\r\n            this.Score = 2;\r\n            this.Resoure_Data.Sound_Play(\"Audio/Start2\");\r\n        } else if (T < 1) {\r\n            this.Score = 1;\r\n            this.Resoure_Data.Sound_Play(\"Audio/Start1\");\r\n        } else {\r\n            this.Score = 0;\r\n        }\r\n\r\n        let Stars = find(\"WinBanner/Stars\", this.PanelVictory)\r\n        for (let I = 0; I < Stars.children.length; I++) {\r\n            Stars.children[I].children[0].active = false;\r\n        }\r\n        for (let I = 0; I < this.Score; I++) {\r\n            Stars.children[I].children[0].active = true;\r\n        }\r\n\r\n        this.Game_Script.MathMatchScore += this.Score;\r\n        /**保存数据 */\r\n        this.Game_Script.DataSet();\r\n        // this.Game_Script.UpdateScene();\r\n        this.Interactable = false;\r\n        this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Label\").getComponent(RichText).string = `<color=#0000C8>${this.GameTimeAll}/</color><color=#C80000>${this.GameTimeIng}</color>`;\r\n\r\n\r\n        if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n            for (let i = 0; i < 5; i++) {\r\n                PlatformApi.instance.vibrateShort();\r\n                await Tool_Animation.instance.Async_Wait(0.2);\r\n            }\r\n        }\r\n    }\r\n\r\n    async GameFailed() {\r\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\r\n            try {\r\n                window.ge.onLevelFail({ \"$user_level\": this.Game_Script.MathMatchLevel });\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n\r\n        this.Resoure_Data.Sound_Play(\"Audio/Failed\");\r\n        this.PanelFail.active = true;\r\n        this.Interactable = false;\r\n        this.PanelFail.getChildByName(\"WinBanner\").getChildByName(\"Label\").getComponent(RichText).string = `<color=#0000C8>${this.GameTimeAll}/</color><color=#C80000>${this.GameTimeIng}</color>`;\r\n    }\r\n\r\n    GameResult() {\r\n\r\n\r\n    }\r\n\r\n\r\n    BreakNode(SetNode: Node) {\r\n\r\n    }\r\n\r\n    TipReset() {\r\n        if (this.TipLabel != null) {\r\n            this.TipLabel.getComponent(Label).string = \"\";\r\n            this.TipLabel.scale = v3(1, 1, 1);\r\n            Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\r\n            this.TipLabel = null;\r\n        }\r\n        if (this.TipNode != null) {\r\n            Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\r\n            this.TipNode = null;\r\n        }\r\n    }\r\n\r\n    TipStart(TipNode,TipLabel) {\r\n        // if (this.TipNode != null && this.TipLabel != null) {\r\n        // Tool_Animation.instance.Animation_Heartbeat(this.TipLabel);\r\n\r\n        // tween(this.TipLabel)\r\n        //     .repeatForever(\r\n        //         tween()\r\n        //             .to(0.2, { angle: 5 })\r\n        //             .to(0.2, { angle: -10 })\r\n        //             .to(0.2, { angle: 10 })\r\n        //             .to(0.2, { angle: -10 })\r\n        //             .to(0.2, { angle: 5 })\r\n        //             .to(0.2, { angle: 0 })\r\n        //             .delay(1)\r\n        //     )\r\n        //     .start()\r\n        // Tool_Animation.instance.Animation_Tip(this.TipNode);\r\n\r\n        let Key = find(\"Key\", this.node);\r\n        let Value = find(\"Value\", this.node);\r\n        let Temp = find(\"Temp\", this.node);\r\n        let ColorOff: math.Color = color(255, 255, 155, 255);\r\n        let ColorOn: math.Color = color(155, 255, 155, 255);\r\n\r\n        this.Interactable = false;\r\n        this.scheduleOnce(() => {\r\n            // this.Interactable = true;\r\n        }, 1)\r\n        let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TipNode, TipLabel.parent);\r\n        Tool_Animation.instance.Animation_Node_Move_Time(TipNode, Pos, 0.5, async () => {\r\n\r\n            let TouchNode =TipNode;\r\n            this.TouchNode = TouchNode;\r\n            let i = this.ValueTarget.indexOf(TouchNode);\r\n\r\n            const Shadow = Value.children[i].getChildByName(\"Shadow\");\r\n\r\n            // for (let i = 0; i < Value.children.length; i++) {\r\n\r\n\r\n            /**触摸结束回调 */\r\n            Shadow.active = false;\r\n            let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n\r\n            // 1. 获取原节点（当前占用目标位置的节点）\r\n            const OriginalNode = this.KeyExitValue[Obj.Index];\r\n            // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\r\n            //原上次索引\r\n            let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\r\n            //现上次索引\r\n            let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\r\n            console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\r\n            console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n            if (Obj.Distance <= this.OnDistance) {\r\n                //目标位置被占用\r\n                if (this.KeyExitState[Obj.Index] && this.LastKeyIndex[i] != Obj.Index) {\r\n                    if (this.LastKeyIndex[i] != null) {\r\n                        this.KeyTarget[Obj.Index].active = false;\r\n                        this.KeyTarget[this.LastKeyIndex[i]].active = false;\r\n                        // 将原节点移动到 LastKeyIndex 的位置\r\n                        const OriginalNodePos = Tool_UI.instance.Get_Target_Node_Local_Pos(OriginalNode, this.KeyTarget[this.LastKeyIndex[i]]);\r\n                        this.Interactable = false;\r\n                        Tool_Animation.instance.Animation_Node_Move_Time(OriginalNode, OriginalNodePos, 0.25, async () => {\r\n                            this.Interactable = true;\r\n                            this.KeyTarget[Obj.Index].active = true;\r\n                            this.KeyTarget[this.LastKeyIndex[i]].active = true;\r\n                            //交换索引\r\n\r\n                            console.log(this.LastKeyIndex, 1);\r\n                            console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                            console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                            const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                            this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                            this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                            //交换节点的索引\r\n                            let KeyNodeIndexL = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[OriginalLastKeyIndex]]);\r\n                            let KeyNodeValueL = OriginalNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                            let KeyNodeValueT = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n\r\n                            console.log(\"交换节点的索引\", KeyNodeIndexL, \"交换节点的数值\", KeyNodeValueL);\r\n                            console.log(\"触摸节点的索引\", KeyNodeIndexT, \"触摸节点的数值\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n\r\n                            this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n\r\n\r\n                            Tool_Animation.instance.Tween_Stop_Target(OriginalNode);\r\n                            OriginalNode.scale = v3(0.9, 0.9, 1);\r\n                            OriginalNode.angle = 0;\r\n                            Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                            Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                            // console.error(OriginalNode, TouchNode);\r\n\r\n                            await Tool_Animation.instance.Async_Wait(0.05);\r\n                            this.TouchNode = OriginalNode;\r\n                            this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n                        }, \"smooth\");\r\n                        // 更新原节点的状态为占用 LastKeyIndex\r\n                        this.KeyExitState[this.LastKeyIndex[i]] = true;\r\n                        this.KeyExitValue[this.LastKeyIndex[i]] = OriginalNode;\r\n                    } else {\r\n                        // 如果 LastKeyIndex 为 null，将原节点放回 ValueTarget 池\r\n                        Tool_UI.instance.Arr_Increase(this.ValueTarget, OriginalNode);\r\n\r\n                        Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                        Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                        //交换索引\r\n                        console.log(this.LastKeyIndex, 2);\r\n                        console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                        console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n\r\n                        const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                        this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                        this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                        //题目节点的索引\r\n                        let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                        let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                        this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                        console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                        console.log(this.GameData);\r\n\r\n\r\n                        this.FindAllEquationIndices_(this.GameData.Key, 0.2);\r\n                    }\r\n                    // 3. 将新节点(TouchNode)放置到目标位置（Obj.Index）\r\n                    this.KeyExitState[Obj.Index] = true;\r\n                    this.KeyExitValue[Obj.Index] = TouchNode;\r\n                    // 4. 更新颜色和临时状态\r\n                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                    if (this.LastKeyIndex[i] != null) {\r\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                    }\r\n                    //放置成功 移除节点\r\n                    Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                    Temp.destroyAllChildren();\r\n                    this.KeyShadowIndex = -1;\r\n                    // 6. 更新 UI\r\n                    this.UpdateUIValue();\r\n                    let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                    await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0.2, null, \"smooth\");\r\n                    tween(TouchNode)\r\n                        .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                        .start();\r\n                    return;\r\n                }\r\n                if (IsExit) {\r\n                    //放置成功 移除节点\r\n                    Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                    //题目节点的索引\r\n                    let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                    let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                    console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                    console.log(this.GameData);\r\n                    this.UpdateUIValue();\r\n                } else {\r\n                    let KeyNodeIndexL: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                    if (KeyNodeIndexL == -1) {\r\n                        console.log(CurrentLastKeyIndex);//有值\r\n                        console.log(this.LastKeyIndex[CurrentLastKeyIndex]);\r\n                        console.log(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                    }\r\n                    let KeyNodeValueL: string = \"N\";\r\n                    this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n                    //题目节点的索引\r\n                    let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                    let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                    console.log(\"赋值的索引\", KeyNodeIndexL, \"赋值的数据\", KeyNodeValueL);\r\n                    console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                    console.log(this.GameData);\r\n                }\r\n                this.KeyExitState[Obj.Index] = true;\r\n                this.KeyExitValue[Obj.Index] = TouchNode;\r\n                if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\r\n                    this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                    this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                }\r\n                //改变Key背景颜色\r\n                this.LastKeyIndex[i] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                this.LastKeyIndex[i] = Obj.Index;\r\n\r\n                // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] = Obj.Index;\r\n\r\n                console.error(Obj.Index, this.LastKeyIndex[i], i, Value.children.indexOf(TouchNode));\r\n\r\n                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                Temp.destroyAllChildren();\r\n                this.KeyShadowIndex = -1;\r\n                let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0, null, \"smooth\");\r\n                tween(TouchNode)\r\n                    .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                    .start();\r\n            } else {\r\n                if (!IsExit) {\r\n                    Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\r\n                    //题目节点的索引\r\n                    let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                    let KeyNodeValueT: string = \"N\";\r\n                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                    console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                    console.log(this.GameData);\r\n\r\n                    if (this.LastKeyIndex[i] != null) {\r\n                        this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                        this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                    }\r\n                    // 重置当前目标位置的状态（如果之前已被占用）\r\n                    if (this.KeyExitState[Obj.Index]) {\r\n                        this.KeyExitState[Obj.Index] = false;\r\n                        this.KeyExitValue[Obj.Index] = null;\r\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                    }\r\n\r\n\r\n                    this.LastKeyIndex[i] = null;\r\n                }\r\n                this.UpdateUIValue();\r\n\r\n            }\r\n            console.log(\"this.KeyExitState\", this.KeyExitState);\r\n            console.log(\"this.KeyExitValue\", this.KeyExitValue);\r\n            console.log(\"this.ValueTarget\", this.ValueTarget);\r\n\r\n            this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // }\r\n    }\r\n\r\n    async FindAllEquationIndices_(Key: string[], Time: number = 0, Rows: number = 11, Cols: number = 11): Promise<{ CorrectIndex: number[][]; WrongIndex: number[][]; }> {\r\n\r\n        this.TimStop();\r\n\r\n        this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\r\n\r\n        this.Interactable = false;\r\n        await Tool_Animation.instance.Async_Wait(Time);\r\n        let Count = 0;\r\n        const Result = {\r\n            CorrectIndex: [] as number[][],\r\n            WrongIndex: [] as number[][]\r\n        };\r\n        const ResultAll = {\r\n            CorrectIndex: [] as number[],\r\n            WrongIndex: [] as number[]\r\n        };\r\n        /**检查题目右边是否存在结果 */\r\n        function CheckResult(Index: number): number {\r\n            // return Key[Index] == \"N\" || Key[Index] == \"U\" ? null : Number(Key[Index]);\r\n            return Key[Index] == \"N\" ? null : Number(Key[Index]);\r\n        }\r\n        /**计算题目左边结果 */\r\n        function GetResult(expression: string[]): number {\r\n            // 先处理乘除法\r\n            const processed = [...expression];\r\n            if (processed.indexOf(\"N\") != -1) {\r\n                return null;\r\n            }\r\n            // 第一轮处理：乘除法\r\n            for (let i = 1; i < processed.length; i += 2) {\r\n                const op = processed[i];\r\n                if (op === \"X\" || op === \"x\" || op === \"/\") {\r\n                    const left = parseFloat(processed[i - 1]);\r\n                    const right = parseFloat(processed[i + 1]);\r\n                    let result: number;\r\n                    if (op === \"/\") {\r\n                        if (right === 0) throw new Error(\"Division by zero\");\r\n                        result = left / right;\r\n                    } else {\r\n                        result = left * right;\r\n                    }\r\n                    // 替换这三个元素为计算结果\r\n                    processed.splice(i - 1, 3, result.toString());\r\n                    i -= 2; // 因为数组长度减少了，调整索引\r\n                }\r\n            }\r\n            // 第二轮处理：加减法\r\n            let result = parseFloat(processed[0]);\r\n            for (let i = 1; i < processed.length; i += 2) {\r\n                const op = processed[i];\r\n                const num = parseFloat(processed[i + 1]);\r\n                if (op === '+') {\r\n                    result += num;\r\n                } else if (op === '-') {\r\n                    result -= num;\r\n                } else {\r\n                    throw new Error(`Unknown operator: ${op}`);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        let ErrorChar = [\"=\", \"U\"];\r\n        for (let i = 0; i < Key.length; i++) {\r\n            if (Key[i] == \"=\") {\r\n                // console.log(\"--------------------------------------\");\r\n                // console.log(\"--------------------------------------\");\r\n                // console.log(\"--------------------------------------\");\r\n                let ValueResult: number | null;\r\n                //水平方向\r\n                // console.log(\"水平方向\");\r\n\r\n                if (i % Rows != Rows - 1) {\r\n                    ValueResult = CheckResult(i + 1);//*\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != 0) {//*\r\n                            Index -= 1;//*\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + 1);//*\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        // console.log(Indexs);\r\n                        // console.log(Chars);\r\n                        // console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        // console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Math.floor(i / Rows) != Cols - 1) {\r\n                    //垂直方向\r\n                    // console.log(\"垂直方向\");\r\n                    ValueResult = CheckResult(i + Rows);\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Math.floor(Index / Rows) != 0) {\r\n                            Index -= Rows;//*\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + Rows);\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        // console.log(Indexs);\r\n                        // console.log(Chars);\r\n                        // console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        // console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i % Rows != Rows - 1 && Math.floor(i / Rows) != Cols - 1) {\r\n                    //主对角线\r\n                    ValueResult = CheckResult(i + (Rows + 1));\r\n                    // console.log(\"主对角线\");\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != 0) {\r\n                            Index -= (Rows + 1);\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + (Rows + 1));\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        console.log(Indexs);\r\n                        console.log(Chars);\r\n                        console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (i % Rows != 0 && Math.floor(i / Rows) != Cols - 1) {\r\n                    //副对角线\r\n                    // console.log(\"副对角线\");\r\n                    ValueResult = CheckResult(i + (Rows - 1));\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != (Rows - 1)) {\r\n                            Index -= (Rows - 1);\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + (Rows - 1));\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        console.log(Indexs);\r\n                        console.log(Chars);\r\n                        console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        let KeyP = find(\"Key\", this.node);\r\n        let ValueP = find(\"Value\", this.node);\r\n\r\n        let AnimReset = async () => {\r\n            for (let i = 0; i < KeyP.children.length; i++) {\r\n                if (ResultAll.CorrectIndex.indexOf(i) == -1) {\r\n                    switch (this.GameData.Key[i]) {\r\n                        case \"N\":\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                            break;\r\n                        default:\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Tool_UI.instance.Arr_Delete(this.AnimCorrectNode, KeyP.children[i]);\r\n                }\r\n\r\n                if (ResultAll.WrongIndex.indexOf(i) == -1) {\r\n                    switch (this.GameData.Key[i]) {\r\n                        case \"N\":\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                            break;\r\n                        default:\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Tool_UI.instance.Arr_Delete(this.AnimWrongNode, KeyP.children[i]);\r\n                }\r\n\r\n            }\r\n\r\n            AnimV();\r\n            AnimF();\r\n\r\n        }\r\n\r\n        let AnimV = async () => {\r\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\r\n                for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                    if (this.AnimCorrectNode.indexOf(KeyP.children[Result.CorrectIndex[i][j]]) == -1) {\r\n                        this.AnimCorrectNode.push(KeyP.children[Result.CorrectIndex[i][j]]);\r\n                        Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.CorrectIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\r\n                let ICall = async () => {\r\n                    //上次触摸的节点在题目中\r\n                    let IsPlay = false;\r\n\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.CorrectIndex[i][j]].name) {\r\n                                IsPlay = true;\r\n                                console.log(\"AnimV\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (IsPlay) {\r\n                        this.Resoure_Data.Sound_Play(\"Audio/Correct\");\r\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                            //题目的Value占位节点\r\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.CorrectIndex[i][j]].worldPosition, this.ValueTargetC);\r\n                            if (Obj.Distance <= this.OnDistance) {\r\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\r\n                                // this.ValueTargetC[Obj.Index].scale = v3(0.9, 0.9, 1);\r\n                                tween(this.ValueTargetC[Obj.Index])\r\n                                    .to(0.1, { scale: v3(0.6, 0.6, 1) })\r\n                                    .to(0.1, { scale: v3(0.9, 0.9, 1) })\r\n                                    .start();\r\n                            }\r\n                            //题目的Key占位节点\r\n                            // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.CorrectIndex[i][j]]);\r\n                            // KeyP.children[Result.CorrectIndex[i][j]].scale = v3(1, 1, 1);\r\n                            tween(KeyP.children[Result.CorrectIndex[i][j]])\r\n                                .to(0.1, { scale: v3(0.6, 0.6, 1) })\r\n                                .to(0.1, { scale: v3(1, 1, 1) })\r\n                                .start();\r\n                            await Tool_Animation.instance.Async_Wait(0.05 * Speed);\r\n                        }\r\n                    }\r\n                }\r\n                ICall();\r\n            }\r\n        }\r\n\r\n        let AnimF = async () => {\r\n            // for (let i = 0; i < Result.WrongIndex.length; i++) {\r\n            //     for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n            //         console.error(this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]));\r\n\r\n            //         if (this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]) == -1) {\r\n            //             this.AnimWrongNode.push(KeyP.children[Result.WrongIndex[i][j]]);\r\n            //             Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\r\n            //         }\r\n            //     }\r\n            // }\r\n            for (let i = 0; i < Result.WrongIndex.length; i++) {\r\n                let ICall = async () => {\r\n                    //上次触摸的节点在题目中\r\n                    let IsPlay = false;\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\r\n\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.WrongIndex[i][j]].name) {\r\n                                IsPlay = true;\r\n                                console.log(\"AnimF\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (IsPlay) {\r\n                        this.Resoure_Data.Sound_Play(\"Audio/Wrong\");\r\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n                            //题目的Value占位节点\r\n                            if (Number.isNaN(Number(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Label\").getComponent(Label).string))) {\r\n                                continue;\r\n                            }\r\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.WrongIndex[i][j]].worldPosition, this.ValueTargetC);\r\n                            if (Obj.Distance <= this.OnDistance) {\r\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\r\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(155, 0, 0, 255));\r\n\r\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\r\n                                // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.WrongIndex[i][j]]);\r\n\r\n                                tween(this.ValueTargetC[Obj.Index])\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 20 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: 0 })\r\n                                    .start();\r\n                                tween(KeyP.children[Result.WrongIndex[i][j]])\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 20 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: 0 })\r\n                                    .start();\r\n                                // tween(this.ValueTargetC[Obj.Index])\r\n                                //     .by(0.1, { scale: v3(-0.4, -0.4, 1) })\r\n                                //     .by(0.1, { scale: v3(0.4, 0.4, 1) })\r\n                                //     .start();\r\n                            }\r\n                            //题目的Key占位节点\r\n                            // tween(KeyP.children[Result.WrongIndex[i][j]])\r\n                            //     .by(0.1 * Speed, { scale: v3(-0.4, - 0.4, 1) })\r\n                            //     .by(0.1 * Speed, { scale: v3(0.4, 0.4, 1) })\r\n                            //     .start();\r\n                            // await Tool_Animation.instance.Async_Wait(0.05 * Speed);\r\n                        }\r\n                    }\r\n                }\r\n                ICall();\r\n            }\r\n        }\r\n\r\n\r\n        var Speed = 1;\r\n        await AnimReset();\r\n        await Tool_Animation.instance.Async_Wait(0.2);\r\n        this.Interactable = true;\r\n\r\n        if (Count == this.GameData.Count) {\r\n            console.log(\"胜利\");\r\n            this.GameVictory();\r\n        }\r\n        Tool_Console.instance.Console_Style(Count, {\r\n            Font_Color: 'rgba(255, 99, 71, 1)',\r\n            Font_Size: '20px',\r\n            Font_Weight: 'lighter',\r\n            Font_Style: 'normal',\r\n            Font_Family: \"'fantasy',cursive\",\r\n            Text_Decoration: 'none',\r\n            Text_Shadow: \"2px 2px 2px rgba(0, 0, 0, 0.5)\",\r\n            Background_Color: 'rgba(155, 155, 155, 0.2)',\r\n            Padding: \"10px 20px\",\r\n            Margin: \"10px auto\",\r\n            Border: \"1px dashed rgba(0, 255, 0, 1)\",\r\n            Border_Radius: \"5px\",\r\n        })\r\n        console.log(Result);\r\n\r\n        return Result;\r\n    }\r\n\r\n\r\n\r\n    UpdateProp() {\r\n\r\n        this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"Label\").getComponent(Label).string = this.Game_Script.PropNum + \"\";\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}