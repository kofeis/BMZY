{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/ZhiShangGouBuDao/assets/Script/Game/GameMode/PanelDish.ts"],"names":[],"mappingssourcesContent":["// import { _decorator, color, Component, find, Label, Layout, Node, RichText, Sprite, tween, UIOpacity, v3, Animation } from 'cc';\n// import { PanelTemplate } from './PanelTemplate';\n// import { PlatformApi } from '../../Other/SDK/PlatformApi';\n// import { Tool_Animation } from '../../Tool/Tool_Animation';\n// import { Tool_Event } from '../../Tool/Tool_Event';\n// import { Tool_Other } from '../../Tool/Tool_Other';\n// import { Tool_UI } from '../../Tool/Tool_UI';\n// import { Game_Mode } from '../../Tool/Resoure_Data';\n// const { ccclass, property } = _decorator;\n\n// @ccclass('PanelDish')\n// export class PanelDish extends PanelTemplate {\n\n//     /**主要面板 */\n//     PanelPlay: Node = null;\n//     /**地区文本 */\n//     LabelRegion: Label = null;\n//     /**目标文本 */\n//     LabelTarget: Label = null;\n//     /**分数文本 */\n//     LabelScore: RichText = null;\n//     /**菜品图片 */\n//     ImgDish: Node = null;\n//     /**正确图片 */\n//     ImgCorrect: Node = null;\n//     /**错误图片 */\n//     ImgWrong: Node = null;\n//     /**选项A */\n//     OptionA: Node = null;\n//     /**选项A文本 */\n//     LabelOptionA: Label = null;\n//     /**选项B */\n//     OptionB: Node = null;\n//     /**选项B文本 */\n//     LabelOptionB: Label = null;\n//     /**选项C */\n//     OptionC: Node = null;\n//     /**选项C文本 */\n//     LabelOptionC: Label = null;\n\n//     /**提示按钮 */\n//     BtnTip: Node = null;\n//     /**设置按钮 */\n//     BtnSetting: Node = null;\n\n//     /**结算面板 */\n//     PanelSettle: Node = null;\n\n//     async onLoad() {\n//         super.onLoad();\n//     }\n\n//     async onEnable() {\n//         if (!this.IsInit) {\n//             await this.LoadPanel();\n//         }\n//         this.GameStart();\n//         this.Resoure_Data.Music_Play(\"Audio/BGMGame\");\n//     }\n\n//     async start() {\n\n//     }\n\n//     /**加载面板 */\n//     async LoadPanel(): Promise<void> {\n//         return new Promise(async (resolve, reject) => {\n//             /**绑定关键节点 */\n//             this.BtnSetting = find(\"PanelUI/BtnSetting\", this.node);\n//             this.BtnTip = find(\"PanelUI/BtnTip\", this.node);\n\n//             this.PanelPlay = find(\"PanelPlay\", this.node);\n//             this.OptionA = find(\"OptionA\", this.PanelPlay);\n//             this.LabelOptionA = find(\"OptionA/Label\", this.PanelPlay).getComponent(Label);\n//             this.OptionB = find(\"OptionB\", this.PanelPlay);\n//             this.LabelOptionB = find(\"OptionB/Label\", this.PanelPlay).getComponent(Label);\n//             this.OptionC = find(\"OptionC\", this.PanelPlay);\n//             this.LabelOptionC = find(\"OptionC/Label\", this.PanelPlay).getComponent(Label);\n\n//             this.LabelRegion = find(\"Title/LabelRegion\", this.node).getComponent(Label);\n//             this.LabelTarget = find(\"Layout/LabelTarget\", this.PanelPlay).getComponent(Label);\n//             this.LabelScore = find(\"Layout/LabelScore\", this.PanelPlay).getComponent(RichText);\n//             this.ImgDish = find(\"ImgDish\", this.PanelPlay);\n//             this.ImgCorrect = find(\"ImgCorrect\", this.PanelPlay);\n//             this.ImgWrong = find(\"ImgWrong\", this.PanelPlay);\n\n//             this.PanelVictory = find(\"PanelVictory\", this.node);\n//             this.PanelFail = find(\"PanelFail\", this.node);\n//             this.PanelSettle = find(\"PanelSettle\", this.node);\n//             /**注册按钮事件 */\n//             await this.OnBtn(this.Game_Script.AnimSwitch);\n//             this.IsInit = true;\n//             resolve();\n//         });\n//     }\n\n//     /**注册按钮 */\n//     async OnBtn(AnimSwitch: boolean = false) {\n\n//         /**设置按钮 */\n//         const FunPGBtnSetting = () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             this.Game_Script.UpdatePanelSetting(true);\n//         }\n\n//         /**选项A按钮  */\n//         const FunPGOptionA = () => {\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\n//                 return;\n//             }\n//             if (this.LabelOptionA.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                 this.GameVictory();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionA, color(0, 255, 0, 255));\n//             } else {\n//                 this.GameFailed();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionA, color(255, 0, 0, 255));\n//             }\n//         }\n//         /**选项B按钮  */\n//         const FunPGOptionB = () => {\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\n//                 return;\n//             }\n//             if (this.LabelOptionB.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                 this.GameVictory();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionB, color(0, 255, 0, 255));\n//             } else {\n//                 this.GameFailed();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionB, color(255, 0, 0, 255));\n//             }\n//         }\n//         /**选项C按钮  */\n//         const FunPGOptionC = () => {\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\n//                 return;\n//             }\n//             if (this.LabelOptionC.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                 this.GameVictory();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionC, color(0, 255, 0, 255));\n//             } else {\n//                 this.GameFailed();\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionC, color(255, 0, 0, 255));\n//             }\n//         }\n\n\n//         /**提示按钮 */\n//         const FunPGBtnTip = () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             if (this.Game_Script.PropNum > 0) {\n//                 if (this.OptionA.active && this.OptionB.active && this.OptionC.active) {\n//                     if (this.Resoure_Data.Game_Mode == Game_Mode.Endless) {\n//                         if (this.Game_Script.PropNumUse == this.Game_Script.PropNumUseMax) {\n//                             this.Game_Script.OnMessage(\"道具使用上限\");\n//                             return;\n//                         } else {\n//                             this.Game_Script.PropNumUse++;\n//                         }\n//                     }\n//                     this.Game_Script.IsHint = true;\n//                     this.Game_Script.PropNum--;\n//                     this.BtnTip.active = false;\n//                     this.Game_Script.DataSet();\n//                     this.UpdatePropUI();\n//                     if (this.LabelOptionA.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                         this.OptionA.active = true;\n//                     } else {\n//                         this.OptionA.active = false;\n//                     }\n//                     if (this.LabelOptionB.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                         this.OptionB.active = true;\n//                     } else {\n//                         this.OptionB.active = false;\n//                     }\n//                     if (this.LabelOptionC.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\n//                         this.OptionC.active = true;\n//                     } else {\n//                         this.OptionC.active = false;\n//                     }\n//                 }\n//             } else {\n//                 PlatformApi.instance.showVideoAd(() => {\n//                     this.Game_Script.PropNum += 3;\n//                     this.UpdatePropUI();\n//                     this.Game_Script.DataSet();\n//                 }, () => {\n//                     this.Game_Script.PropNum += 0;\n//                     this.UpdatePropUI();\n//                     this.Game_Script.DataSet();\n//                 });\n//             }\n\n//         }\n\n//         /**分享按钮 */\n//         const FunPGShare = async () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             // if (this.ShareTime == -1) {\n//             this.Game_Script.ShareTime = this.Resoure_Data.Get_Timestamp();\n//             var e = new Date().getTime();\n//             console.log(\"当前邀请时间\", this.Game_Script.ShareTime, \"当前时间\", e);\n//             console.log(\"剩余有效时间\", this.Game_Script.ShareTime + 2592e5 - e);\n//             this.Game_Script.DataSet();\n//             // } else {\n\n//             // }\n//             PlatformApi.instance.shareAppMessage(() => {\n//                 this.Game_Script.GetProp(1, \"分享成功\");\n//                 console.log(\"分享成功\");\n//             }, () => {\n//                 console.log(\"分享失败\");\n//             });\n//         }\n//         /**再生广告按钮 */\n//         const FunPGResurAd = () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             PlatformApi.instance.showVideoAd(async () => {\n//                 console.log(\"复活成功\");\n//                 this.Game_Script.IsContinue = true;\n//                 Tool_Other.instance.Sort_Random(this.Game_Script.TopicData);\n//                 if (this.Resoure_Data.Game_Mode == Game_Mode.Endless) {\n//                     this.Game_Script.PropNumUse++;\n//                     console.log(\"复活次数\", this.Game_Script.PropNumUse);\n//                 }\n//                 await this.GameStart();\n//             }, () => {\n//                 console.log(\"复活失败\");\n//                 return;\n//             });\n//         }\n//         /**返回按钮 */\n//         const FunBack = async () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             this.Game_Script.PanelGameHide();\n//             this.Game_Script.ViewHide();\n//             switch (this.Resoure_Data.Game_Mode) {\n//                 case Game_Mode.Endless:\n//                     this.Game_Script.ViewNormal.active = false;\n//                     this.Game_Script.ViewMain.active = true;\n//                     if (this.Game_Script.TopicIndex >= 1) {//this.TopicIndexMin\n//                         let Index = this.Game_Script.PlaceBarId - 1;\n//                         console.log(`参与盖楼,地区是${this.Game_Script.ConfigRegionDish[Index].City}`);\n//                         let DataRegionalRanking = await this.Resoure_Data.Fetch_Data(this.Game_Script.UrlRegionRanking);\n//                         console.log(DataRegionalRanking.RegionalRanking);\n//                         console.log(\"修改前的Score:\", DataRegionalRanking.RegionalRanking[Index].Score);\n//                         DataRegionalRanking.RegionalRanking[Index].Score += this.Game_Script.TopicIndex;\n//                         console.log(\"修改后的Score:\", DataRegionalRanking.RegionalRanking[Index].Score);\n//                         await this.Resoure_Data.Update_Data(this.Game_Script.UrlRegionRanking, DataRegionalRanking);\n//                     }\n//                     break;\n//                 case Game_Mode.Normal:\n//                     this.Game_Script.ViewMain.active = false;\n//                     this.Game_Script.ViewNormal.active = true;\n//                     break;\n//                 default:\n//                     break;\n//             }\n//         }\n\n//         /**继续游戏按钮回调 */\n//         const BtnNextCall = async () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             this.Game_Script.PanelGameHide();\n//             this.Game_Script.ViewHide();\n//             this.Game_Script.ViewMain.active = false;\n//             this.Game_Script.ViewNormal.active = true;\n//         }\n\n//         /**返回首页按钮回调 */\n//         const BtnBreakCall = async () => {\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\n//             this.Game_Script.PanelGameHide();\n//             this.Game_Script.ViewHide();\n//             this.Game_Script.ViewNormal.active = false;\n//             this.Game_Script.ViewMain.active = true;\n//             this.Resoure_Data.Game_Mode = Game_Mode.Tutorial;\n//         }\n\n//         /**设置按钮 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting.getChildByName(\"Icon\"), FunPGBtnSetting);\n//         /**提示按钮 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, FunPGBtnTip);\n\n//         /**选项按钮 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionA, FunPGOptionA);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionB, FunPGOptionB);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionC, FunPGOptionC);\n\n//         /**胜利界面按钮 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnNext\"), BtnNextCall);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnBreak\"), BtnBreakCall);\n//         /**失败界面按钮 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnShare\"), FunPGShare);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnResurAd\"), FunPGResurAd);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnBack\"), FunBack);\n//         /**结算面板 */\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnResurAd\"), FunPGResurAd);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnBack\"), FunBack);\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnClose\"), FunBack);\n\n//         /**设置按钮动画 */\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionA, AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionB, AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionC, AnimSwitch);\n//         /**提示按钮 */\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting.getChildByName(\"Icon\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnShare\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnResurAd\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBack\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnResurAd\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnBack\"), AnimSwitch);\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnClose\"), AnimSwitch);\n//     }\n\n//     /**游戏开始 */\n//     async GameStart() {\n//         if (this.Game_Script == null) {\n//             return;\n//         }\n\n\n//         this.ImgCorrect.active = false;\n//         this.ImgWrong.active = false;\n//         this.PanelVictory.active = false;\n//         this.PanelFail.active = false;\n//         this.PanelSettle.active = false;\n\n//         this.PanelPlay.active = true;\n\n//         this.BtnTip.active = true;\n//         this.OptionA.active = true;\n//         this.OptionB.active = true;\n//         this.OptionC.active = true;\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionA);\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionB);\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionC);\n//         this.UpdatePropUI();\n//         /**更新提示 */\n//         switch (this.Resoure_Data.Game_Mode) {\n//             case Game_Mode.Endless:\n//                 this.LabelRegion.string = \"做个好菜·无尽模式\";\n//                 this.PanelPlay.getChildByName(\"Endless\").active = true;\n//                 /**最高记录 */\n//                 this.LabelTarget.string = `历史最高记录 `;\n//                 this.LabelScore.string = `第<size=60>${this.Game_Script.TopicIndex + 1}</size><size=50>/</size><size=60>${this.Game_Script.HighestRecordLast}</size>道`;\n//                 break;\n//             case Game_Mode.Normal:\n//                 let City = this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].City;\n//                 this.LabelRegion.string = `做个好菜·${City}省`;\n//                 this.PanelPlay.getChildByName(\"Endless\").active = false;\n//                 this.PanelPlay.getChildByName(\"Title\").getChildByName(\"Label\").getComponent(Label).string = `食在${City}`\n//                 this.LabelTarget.string = `猜出${this.Game_Script.TopicCount}道美食名称·`;\n//                 this.LabelScore.string = `第${(this.Game_Script.TopicIndex + 1)}道`;\n//                 break;\n//             case Game_Mode.Tutorial:\n//                 this.LabelRegion.string = \"猜一猜\";\n//                 this.LabelTarget.string = `猜出${this.Game_Script.TopicCount}道美食名称·`;\n\n//                 break;\n//             default:\n//                 break;\n//         }\n\n//         /**图片赋值 */\n//         let SpriteFrame = await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Dish/\" + this.Game_Script.TopicData[this.Game_Script.TopicIndex].Id);\n//         Tool_UI.instance.Set_SpriteFrame(this.ImgDish, SpriteFrame);\n//         /**文本赋值 */\n//         let Result = [];\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName)\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].WrongName)\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].WrongName)\n//         Tool_Other.instance.Sort_Random(Result);\n//         this.LabelOptionA.string = Result[0];\n//         this.LabelOptionB.string = Result[1];\n//         this.LabelOptionC.string = Result[2];\n//     }\n\n//     /**初始数据 */\n//     async InitData() {\n\n\n\n//     }\n\n//     /**游戏胜利 */\n//     async GameVictory() {\n//         this.Resoure_Data.Sound_Play(\"Audio/SoundCorrect\");\n//         this.ImgCorrect.active = true;\n//         this.Game_Script.DishDataTemp.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex]);\n\n//         this.Game_Script.BlockInputEvents.active = true;\n//         await Tool_Animation.instance.Async_Wait(0.5);\n//         this.Game_Script.BlockInputEvents.active = false;\n\n//         this.Game_Script.TopicIndex++;\n\n//         /**游戏胜利 */\n//         if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\n//             /**胜利音效 */\n//             this.Resoure_Data.Sound_Play(\"Audio/Sound/Victory\");\n//             switch (this.Resoure_Data.Game_Mode) {\n//                 case Game_Mode.Endless:\n//                     /**最高记录 */\n//                     this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\n//                     /**无尽星星数 */\n//                     this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\n//                 case Game_Mode.Normal:\n//                     this.PanelPlay.active = false;\n\n//                     // let LineHint = find(\"Settle/Line2\", this.PanelVictory);\n//                     // let LineContinue = find(\"Settle/Line3\", this.PanelVictory);\n//                     // LineHint.getChildByName(\"Win\").active = !this.Game_Script.IsHint;\n//                     // LineHint.getChildByName(\"Lose\").active = this.Game_Script.IsHint;\n//                     // LineContinue.getChildByName(\"Win\").active = !this.Game_Script.IsContinue;\n//                     // LineContinue.getChildByName(\"Lose\").active = this.Game_Script.IsContinue;\n//                     // this.Resoure_Data.Sound_Play(\"Audio/SoundWin\");\n\n\n//                     this.PanelVictory.active = true;\n\n//                     this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Condition1\")\n//                     this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Condition1\")\n\n\n\n//                     find(\"WinBanner/Condition1/Correct\", this.PanelVictory).active = !this.Game_Script.IsHint\n//                     find(\"WinBanner/Condition1/Wrong\", this.PanelVictory).active = this.Game_Script.IsHint;\n\n//                     find(\"WinBanner/Condition2/Correct\", this.PanelVictory).active = !this.Game_Script.IsContinue\n//                     find(\"WinBanner/Condition2/Wrong\", this.PanelVictory).active = this.Game_Script.IsContinue;\n\n//                     find(\"WinBanner/Stars/StarC\", this.PanelVictory).getComponent(Sprite).grayscale = this.Game_Script.IsHint;\n//                     find(\"WinBanner/Stars/StarR\", this.PanelVictory).getComponent(Sprite).grayscale = this.Game_Script.IsContinue;\n//                     find(\"Light\", this.PanelVictory).getComponent(Animation).play();\n\n\n//                     //星星数\n//                     let StarsLevel: number = 1;\n//                     StarsLevel += this.Game_Script.IsHint ? 0 : 1;\n//                     StarsLevel += this.Game_Script.IsContinue ? 0 : 1;\n//                     this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].IsSuccess = true;\n//                     this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].StarsLevel = StarsLevel;\n//                     //完美通关\n//                     if (!this.Game_Script.IsContinue && !this.Game_Script.IsHint) {//&& !this.IsHint\n//                         const KeyId = this.Game_Script.TopicDataId - 1;\n//                         const KeyDataV = `DishData${this.Game_Script.ConfigRegionDish[KeyId].NamePinYin}Victory`;\n//                         this[KeyDataV] = [...this[KeyDataV], ... this.Game_Script.DishDataTemp];\n//                         this.Game_Script.SetDishData();\n//                     }\n//                     /**保存数据 */\n//                     this.Game_Script.DataSet();\n//                     /**刷新场景 */\n//                     this.Game_Script.UpdateScene();\n//                     break;\n//                 case Game_Mode.Tutorial:\n//                     this.Game_Script.PanelGameHide();\n//                     this.Game_Script.ViewNormal.active = false;\n//                     this.Game_Script.ViewMain.active = true;\n//                     this.Resoure_Data.Data_Set(\"First_Start\", false);\n//                     break;\n//                 default:\n//                     break;\n//             }\n//         } else {\n//             switch (this.Resoure_Data.Game_Mode) {\n//                 case Game_Mode.Endless:\n//                     /**最高记录 */\n//                     this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\n//                     /**无尽星星数 */\n//                     this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\n//                     /**保存数据 */\n//                     this.Game_Script.DataSet();\n//                     break;\n//                 case Game_Mode.Normal:\n\n//                     break;\n//                 case Game_Mode.Tutorial:\n\n//                     break;\n//                 default:\n//                     break;\n//             }\n//             await this.GameStart();\n//         }\n\n//     }\n\n//     /**游戏失败 */\n//     async GameFailed() {\n//         this.Resoure_Data.Sound_Play(\"Audio/SoundWrong\");\n//         if (this.Resoure_Data.Vibration_Switch_Get()) {\n//             PlatformApi.instance.vibrateShort();\n//         }\n//         this.ImgWrong.active = true;\n//         this.Game_Script.BlockInputEvents.active = true;\n\n//         await Tool_Animation.instance.Async_Wait(0.5);\n//         this.Game_Script.BlockInputEvents.active = false;\n//         this.BtnTip.active = false;\n//         this.OptionA.active = false;\n//         this.OptionB.active = false;\n//         this.OptionC.active = false;\n//         this.PanelFail.active = true;\n//         switch (this.Resoure_Data.Game_Mode) {\n//             case Game_Mode.Endless:\n//                 /**最高记录 */\n//                 this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\n//                 /**无尽星星数 */\n//                 this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\n//                 this.PanelSettle.active = true;\n//                 this.PanelFail.active = false;\n//                 this.PanelSettle.getChildByName(\"Window\").getChildByName(\"Title\").getComponent(Label).string = this.Game_Script.TopicIndexMin - this.Game_Script.TopicIndex <= 0 ? `进入首页房屋,答对题目${this.Game_Script.TopicIndex}` : `还需答对${this.Game_Script.TopicIndexMin - this.Game_Script.TopicIndex}题即可进入首页房屋`;\n//                 this.PanelSettle.getChildByName(\"Window\").getChildByName(\"Number\").getComponent(Label).string = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse + \"\"\n//                 this.PanelSettle.getChildByName(\"BtnResurAd\").active = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse == 0 ? false : true;\n//                 this.PanelSettle.getChildByName(\"BtnBack\").active = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse == 0 ? true : false;\n//                 if (this.Game_Script.PropNumUse == this.Game_Script.PropNumUseMax) {\n//                     console.log(`闯关失败,答对题目${this.Game_Script.TopicIndex}`);\n//                 }\n//             case Game_Mode.Normal:\n//                 /**保存数据 */\n//                 this.Game_Script.DataSet();\n//                 /**刷新场景 */\n//                 this.Game_Script.UpdateScene();\n//                 break;\n//             case Game_Mode.Tutorial:\n\n//                 break;\n//             default:\n//                 break;\n//         }\n//     }\n\n\n//     /**刷新道具UI */\n//     UpdatePropUI() {\n//         const BtnTipLabel = this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"Label\").getComponent(Label);\n//         const BtnTipNull = this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"PropNumNull\");\n//         BtnTipLabel.string = `${this.Game_Script.PropNum}`;\n//         if (this.Game_Script.PropNum > 0) {\n//             BtnTipNull.active = false;\n//         } else {\n//             BtnTipNull.active = true;\n//         }\n//     }\n\n\n\n\n\n// }\n\n\n"]}