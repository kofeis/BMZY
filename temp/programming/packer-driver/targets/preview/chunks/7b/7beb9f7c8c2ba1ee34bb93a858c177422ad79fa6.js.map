{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/game/layer/GameLayer.ts"],"names":["_decorator","Node","v3","size","tween","Tween","find","assert","sp","UIOpacity","Color","UITransform","v2","MotionStreak","BaseLayer","audioManager","gameModel","msgcmd","constants","RecipeItem","utilTools","cocosUtil","designManager","Hexagon","UserData","ccclass","property","GameLayer","_choosePanel","_skillBtns","_foodInfoNode","_mapArea","_mapStack","_spacing","_mergeTemp","_circle","_stackPilePosXArr","_eliminateEffect","_scoringEffect","_clearEffect","_mergeEffect","_flyEffect","_videoUnlockArea","_selectedArea","_alreadyClearTotal","_targetClearTotal","_doubleCheckAreaArr","_waitClearAreaArr","_progressCoefficientArr","_movingPile","_switchArea","_recipeItemLayer","calculateBezierPosition","t","startPos","ctlPos","endPos","x","y","onLoad","getNodeByPath","setCompoments","onEnable","addEventArr","mapLeave","saveDataBefore","initUI","showFoodInfo","refreshRecipeFood","setItemLayer","mapRecipeItemArr","refreshRecipeItem","bind","refreshProgress","initLevel","row","mapFoodRow","setSpriteFrame2","icon","setString","name","info","pos","getPosition","setPosition","active","thisObj","delay","to","position","call","start","popLayer","layerName","layerData","layerCb","isShowingLayer","openLayer","onClearBtnClick","playEffect","audioNames","btnClick","randomClearAreasByNum","onMoveBtnClick","checkCanMove","showSelectPanel","makeMove","closeBtn","off","EventType","TOUCH_END","on","event","hideSelectPannel","cancelMove","onRefreshBtnClick","refreshStackPiles","onSettingBtnClick","layers","SettingLayer","isOpenFromMap","mapLeaveEventCb","data","closeLayer","HomeLayer","itemUI","console","log","getComponent","setView","node","targetClearTotal","remainClearTotal","forArr","children","index","recipeItem","targetClearNum","remainClearNum","precent","parseInt","String","getRemainRecipeItemsTotal","total","findRecipeItemNodeById","id","recipeItemNode","recipeId","getRowById","tableNames","level","Number","already","point","fillMapArea","piles","length","initStackPiles","map","mapRow","area","getChildByName","disable","video","mask","instantiate","addChild","onVideoUnlockClick","c","hexagon","getHexagonPrefab","recipeItemData","getRecipeItemById","val","pile","createPile","canTouch","originalPos","idArr","getRandomPileIdArr","uiTransform","addComponentOnce","setContentSize","TOUCH_START","pileTouchStart","TOUCH_MOVE","pileTouchMove","pileTouchEnd","TOUCH_CANCEL","progressIndex","getProgressCoefficientIndex","pool","getColorPool","hexagonNum","determineHexagonCount","colorNum","determineHexagonColorCount","colorArr","push","splice","getRandomFloat","cIndex","hexagonArr","num","i","color","concat","filter","e","selectPile","target","by","stopAllByTarget","delta","getDelta","worldPos","convertToWorldSpace","parent","getAreaByWorldPos","checkAreaIsEmpty","setAreaState","convertToNodeSpace","add","selectedArea","removeFromParent","checkAndMergeArea","putPile","nearAreaArr","getNearAreaArr","topColor","getTopColorOfArea","mergeAreaArr","dest","src","selectMergeArea","uuid","mergeCollor","findIndex","doubleCheckMapArea","checkAndFill","checkGameOver","countStackPiles","fillStackPiles","clearArea","shift","eliminateColor","areaArr","tmpArr","maxColorTypeNum","countColorTypeOfArea","tmpArr2","secondColor","getSecondColorOfArea","results","tmpArr3","minTopColorNum","countTopColorOfArea","Math","floor","destArea","srcArea","getTopColorNodeArrOfArea","sort","a","b","mergeNum","topHexagonPos","topHexagonPosIfMerged","multiplyScalar","destTopHexagonPos","srcHexagonPos","midPos","destHexagonPos","finalHexagonPos","parallel","scale","mergePile","checkAreaCannEliminate","checkAreaInWaitClearArr","some","nextArea","onComplete","hexagons","eliminatedNum","f","eliminatePile","showFlyAnimation","flyEffect","distance","abs","subtract","onUpdate","ratio","destroy","showScoreAnimation","destPos","showClearAnimation","doSettlement","fill","pileIn","equals","state","second","top","nodeArr","n","typeArr","forEach","has","countEmptyAreas","getCurrentProgress","progress","probs","k","unlockAreaByPoint","angle","union","repeat","uiOpacity","opacity","bgUIOpacity","isWin","obj","getInstance","setLevelData","gameLayer","GetFoodLayer","LossLayer","getNormalAreaArr","getRandomItemByArr","aniNode","childrenCount","spine","Skeleton","setAnimation","setCompleteListener","removeAllChildren","setAnchorPoint","areaTouchMove","areaTouchEnd","tmpNode","movePile","selectArea","checkAreaCanPutInByMove","moveAreaContent","checkAreaCanSwitchByMove","parentNode","touch","createNumProbs","createColorNumProbs"],"mappings":"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","sourcesContent":["import { _decorator, Sprite, Node, v3, size, EventTouch, tween, Tween, Vec3, find, assert, sp, UIOpacity, Texture2D, Color, UITransform, SpriteFrame, v2, MotionStreak } from 'cc';\nimport { BaseLayer } from '../../framework/common/BaseLayer';\nimport { audioManager } from '../../framework/manager/AudioManager';\nimport { gameModel } from '../model/GameModel';\nimport { eventManager } from '../../framework/manager/EventManager';\nimport { msgcmd } from '../data/MsgCmd';\nimport { constants } from '../data/Constants';\nimport { RecipeItem } from '../item/RecipeItem';\nimport { utilTools } from '../../framework/utils/UtilTools';\nimport { cocosUtil } from '../../framework/utils/CocosUtil';\nimport { designManager } from '../../framework/manager/DesignManager';\nimport { Hexagon } from '../item/Hexagon';\nimport { UserData } from '../model/UserData';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameLayer')\nexport class GameLayer extends BaseLayer {\n\n    private _choosePanel: Node;\n    private _skillBtns: Node;\n    private _foodInfoNode: Node;\n\n    private _mapArea: Node;\n    private _mapStack: Node;\n    // 每个六边形之间的间隔\n    private _spacing: number = 12;\n    // private _spritePool: Node;\n    // 六边形翻转中间点\n    private _mergeTemp: Node;\n    private _circle: Node;\n    // private _progressNode: Node;\n\n    // 3个待选堆的x坐标\n    private _stackPilePosXArr: number[] = [-215, 0, 215];\n\n    // 消除特效\n    private _eliminateEffect: Node;\n    // 得分特效\n    private _scoringEffect: Node;\n    // 消除道具特效\n    private _clearEffect: Node;\n    private _mergeEffect: Node;\n    private _flyEffect: Node;\n\n    // 广告解锁\n    private _videoUnlockArea: Node;\n\n    // 移动Pile时选中的格子\n    private _selectedArea: Node;\n\n    // 已经消除的数量\n    private _alreadyClearTotal: number = 0;\n    // 目标消除数量\n    private _targetClearTotal: number = 0;\n\n    // // 进度更新动画\n    // private _alreadyRenderClearTotal = 0;\n    // private _renderProgressFunc: Function;\n\n    // 需要再次检查的格子列表\n    private _doubleCheckAreaArr: Node[] = [];\n    // 等待消除的格子列表\n    private _waitClearAreaArr: Node[] = [];\n\n    // 根据当前进度[0-100]确定一个下标，用于随机生成六边形堆\n    private _progressCoefficientArr: number[] = [20, 40, 60, 80, 100];\n    // private _colorPoolIndex: number = 0;\n\n    private _movingPile: Node;\n    // 使用移动道具记录待切换的格子\n    private _switchArea: Node;\n\n    private _recipeItemLayer: Node;\n\n    onLoad() {\n        super.onLoad();\n\n        this._choosePanel = this.getNodeByPath(\"UI/Choose\");\n        this._skillBtns = this.getNodeByPath(\"UI/SkillBtns\");\n        this._foodInfoNode = this.getNodeByPath(\"UI/ShowFoodInfo\");\n\n        // let mapSystem = find(\"Game\", this.node).addComponent(MapSystem);\n\n        gameModel.setCompoments(this);\n\n        this._mapArea = this.getNodeByPath(\"Game/Area\");\n        this._mapStack = this.getNodeByPath(\"Game/Stack\");\n        // this._spritePool = this.getNodeByPath(\"Pool\");\n        this._mergeTemp = this.getNodeByPath(\"Game/Temp\");\n        this._circle = this.getNodeByPath(\"Game/Circle\");\n        // this._progressNode = this.getNodeByPath(\"Progress\");\n        this._eliminateEffect = this.getNodeByPath(\"Game/EliminateEffect\");\n        this._mergeEffect = this.getNodeByPath(\"Game/MergeEffect\");\n        this._scoringEffect = this.getNodeByPath(\"Game/ScoringEffect\");\n        this._clearEffect = this.getNodeByPath(\"Game/ClearEffect\");\n        this._flyEffect = this.getNodeByPath(\"Game/FlyEffect\");\n\n        this._recipeItemLayer = this.getNodeByPath(\"Game/Top/Food/RecipeGrid\");\n    }\n\n    onEnable() {\n        super.onEnable();\n\n        this.addEventArr([\n            msgcmd.mapLeave,\n            msgcmd.saveDataBefore,\n        ]);\n    }\n\n    initUI() {\n        this.showFoodInfo();\n        this.refreshRecipeFood();\n        this.setItemLayer( this._recipeItemLayer, gameModel.mapRecipeItemArr, this.refreshRecipeItem.bind(this));\n        this.refreshProgress();\n        this.initLevel();\n    }\n\n    // 展示食物详情\n    showFoodInfo() {\n        let row = gameModel.mapFoodRow;\n        this.setSpriteFrame2(this.getNodeByPath(\"UI/FoodHint/Icon\"), row.icon);\n        this.setString(this.getNodeByPath(\"UI/FoodHint/Name\"), row.name);\n        this.setString(this.getNodeByPath(\"UI/FoodHint/Info\"), row.info);\n\n        let pos = this._foodInfoNode.getPosition();\n        pos.x = 750;\n        this._foodInfoNode.setPosition(pos);\n        this._foodInfoNode.active = true;\n\n        let thisObj = this;\n        tween(this._foodInfoNode)\n            .delay(0.5)\n            .to(0.3, {\n                position: v3(0, 0, 0)\n            })\n            .delay(1)\n            .call(function() {\n                thisObj._foodInfoNode.active = false;\n            })\n            .start();\n    }\n\n    popLayer(layerName: string, layerData?: any, layerCb?: Function) {\n        if (this.isShowingLayer(layerName)) {\n            return;\n        }\n        this.openLayer(layerName, layerData, () => {\n            if (layerCb) {\n                layerCb();\n            }\n        });\n    }\n\n    // 消除\n    onClearBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        this.randomClearAreasByNum(3);\n    }\n\n    // 移动\n    onMoveBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        if (!this.checkCanMove()) {\n            // TODO 暂不可用\n            return;\n        }\n\n        this.showSelectPanel();\n    }\n\n    showSelectPanel() {\n        let thisObj = this;\n        this._choosePanel.active = true;\n        this._skillBtns.active = false;\n\n        this.makeMove();\n\n        let closeBtn = find(\"CloseBtn\", this._choosePanel);\n        closeBtn.off(Node.EventType.TOUCH_END);\n        closeBtn.on(Node.EventType.TOUCH_END, function(event: EventTouch) {\n            audioManager.playEffect(constants.audioNames.btnClick);\n            thisObj.hideSelectPannel();\n        }, thisObj);\n    }\n\n    hideSelectPannel() {\n        this._choosePanel.active = false;\n        this._skillBtns.active = true;\n\n        this.cancelMove();\n    }\n\n    // 重发\n    onRefreshBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        this.refreshStackPiles();\n    }\n\n    onSettingBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        this.openLayer(constants.layers.SettingLayer, { isOpenFromMap: true });\n    }\n\n    mapLeaveEventCb(data: any) {\n        this.closeLayer();\n        this.openLayer(constants.layers.HomeLayer);\n    }\n\n    refreshRecipeItem(itemUI: any, data: any) {\n        console.log(\"refreshRecipeItem\", data);\n        itemUI.getComponent(RecipeItem).setView(data);\n    }\n\n    // 更新菜谱食物\n    refreshRecipeFood() {\n        console.log(\"refreshRecipeFood\");\n        this.setSpriteFrame2(find(\"Icon\", this.node), gameModel.mapFoodRow.icon);\n        this.setString(find(\"Name\", this.node), gameModel.mapFoodRow.name);\n    }\n\n    // 更新消除进度\n    refreshProgress() {\n        let targetClearTotal = 0;\n        let remainClearTotal = 0;\n        utilTools.forArr(this._recipeItemLayer.children, function(node: any, index: number) {\n            let recipeItem = node.getComponent(RecipeItem);\n            targetClearTotal += recipeItem.targetClearNum;\n            remainClearTotal += recipeItem.remainClearNum;\n        });\n\n        let precent = ((targetClearTotal - remainClearTotal) / targetClearTotal) * 100;\n        this.setString(this.getNodeByPath(\"Progress\"), parseInt(String(precent)) + \"%\");\n    }\n\n    // 计算剩余待消除食材数量\n    getRemainRecipeItemsTotal(): number {\n        let total = 0;\n        utilTools.forArr(this._recipeItemLayer.children, function(node: any, index: number) {\n            let recipeItem = node.getComponent(RecipeItem);\n            total += recipeItem.remainClearNum;\n            console.log(\"getRemainRecipeItemsTotal\", node.name, recipeItem.remainClearNum, total);\n        });\n\n        return total;\n    }\n\n    // 数量很少，直接遍历查找\n    findRecipeItemNodeById(id: number): Node {\n        let recipeItemNode: Node = null;\n        utilTools.forArr(this._recipeItemLayer.children, function(node: Node, index: number) {\n            let recipeItem = node.getComponent(RecipeItem);\n            if (recipeItem.recipeId == id) {\n                recipeItemNode = node;\n                return true;\n            }\n        });\n\n        return recipeItemNode;\n    }\n\n    // 初始化关卡\n    initLevel() {\n        let row = designManager.getRowById(constants.tableNames.level, 1);\n        // this._colorPoolIndex = Number(row.pool ? row.pool - 1 : 0);\n        this._alreadyClearTotal = Number(row.already || 0);\n        this._targetClearTotal = Number(row.point);\n        this.fillMapArea(row);\n        if (row.piles.length > 0) {\n            this.initStackPiles(row.piles);\n        }\n        //this.updateProgress();\n    }\n\n    // 填充关卡地图\n    fillMapArea(row: any) {\n        utilTools.forArr(row.map, (mapRow: any, index: number) => {\n            let area = this._mapArea.getChildByName(String(mapRow.id));\n            if (mapRow.disable) {\n                area.active = false;\n            }\n\n            // 广告解锁\n            if (mapRow.video) {\n                let mask = cocosUtil.instantiate(this._videoUnlockArea);\n                mask.active = true;\n                area.addChild(mask);\n                area.setPosition(v3(0, 0));\n                mask.on(Node.EventType.TOUCH_END, this.onVideoUnlockClick, this);\n            }\n\n            if (mapRow.c) {\n                utilTools.forArr(mapRow.c, (id: any, index: number) => {\n                    let hexagon = cocosUtil.instantiate(gameModel.getHexagonPrefab(id));\n                    hexagon.setPosition(v3(0, area.children.length * this._spacing + 6));\n                    hexagon.name = String(id);\n                    area.addChild(hexagon);\n\n                    let recipeItemData = gameModel.getRecipeItemById(id);\n                    hexagon.getComponent(Hexagon).setView(recipeItemData);\n                });\n            }\n        });\n    }\n\n    // 进入关卡时，生成默认的六变形堆\n    initStackPiles(piles: any[]) {\n        utilTools.forArr(piles, (val: any, index: number) => {\n            let pile = this.createPile(val.c);\n            this._mapStack.addChild(pile);\n            pile.active = true;\n            this.name = String(val.id);\n            let pos = pile.getPosition()\n            pos.x = this._stackPilePosXArr[val.id];\n            pile.setPosition(pos);\n\n            // 记录原始位置方便恢复\n            pile.canTouch = true;\n            pile.originalPos = pile.getPosition();\n        });\n    }\n\n    // 创建六边形堆\n    private createPile(idArr: number[] = []): any {\n        if (idArr.length == 0) {\n            idArr = this.getRandomPileIdArr();\n        }\n\n        let pile = new Node(\"Pile\");\n        let uiTransform = cocosUtil.addComponentOnce(pile, UITransform);\n        uiTransform.setContentSize(size(142, 121 + (idArr.length - 1) * this._spacing));\n\n        utilTools.forArr(idArr, (id: number, index: number) => {\n            let hexagon = cocosUtil.instantiate(gameModel.getHexagonPrefab(id));\n            hexagon.name = String(id);\n            var pos = hexagon.getPosition();\n            pos.y += index * this._spacing;\n            hexagon.setPosition(pos);\n            pile.addChild(hexagon);\n\n            let recipeItemData = gameModel.getRecipeItemById(id);\n            console.log(\"create hexagon in pile\", id, \"recipeItemData\", recipeItemData);\n            hexagon.getComponent(Hexagon).setView(recipeItemData);\n        });\n\n        pile.on(Node.EventType.TOUCH_START, this.pileTouchStart, this);\n        pile.on(Node.EventType.TOUCH_MOVE, this.pileTouchMove, this);\n        pile.on(Node.EventType.TOUCH_END, this.pileTouchEnd, this);\n        pile.on(Node.EventType.TOUCH_CANCEL, this.pileTouchEnd, this);\n\n        return pile;\n    }\n\n    // 随机生成六边形序列\n    getRandomPileIdArr(): number[] {\n        let progressIndex = this.getProgressCoefficientIndex();\n        let pool = this.getColorPool(progressIndex);\n\n        let hexagonNum = this.determineHexagonCount(progressIndex);\n        let colorNum = this.determineHexagonColorCount(progressIndex);\n        if (colorNum > hexagonNum) {\n            colorNum = hexagonNum;\n        }\n\n        console.log(\"CoefficientIndex\", progressIndex, \"Pool\", pool, \"hexagonNum\", hexagonNum, \"colorNum\", colorNum);\n\n        // 随机挑选colorNum个颜色\n        let colorArr = [];\n        while (colorNum > 0) {\n            colorArr.push(pool.splice(utilTools.getRandomFloat(0, pool.length - 1, true), 1)[0]);\n            colorNum--;\n        }\n\n        console.log(\"colorArr\", colorArr);\n\n        // colorArr中的元素已经是生成列表中的一个，先减去然后再随机选择剩余的六边形\n        hexagonNum -= colorArr.length;\n        let cIndex = 0;\n        let hexagonArr = [];\n        while (hexagonNum > 0) {\n            let num = utilTools.getRandomFloat(0, hexagonNum, true);\n            hexagonNum -= num;\n            for (let i = 0; i < num; i++) {\n                hexagonArr.push(colorArr[cIndex]);\n            }\n\n            if (++cIndex >= colorArr.length) {\n                cIndex = 0;\n            }\n        }\n\n        console.log(\"hexagonArr\", hexagonArr);\n\n        // 将两个数组合并\n        let idArr = [];\n        utilTools.forArr(colorArr, function(color: number, index: number) {\n            idArr.push(color);\n            idArr = idArr.concat(\n                hexagonArr.filter(function(e) {\n                    return e == color;\n                })\n            );\n        });\n\n        console.log(\"getRandomPileIdArr\", idArr);\n\n        return idArr;\n    }\n\n    pileTouchStart(event: EventTouch) {\n        audioManager.playEffect(constants.audioNames.selectPile);\n        \n        // 弹起效果\n        let pile = event.target;\n        if (pile.canTouch) {\n            tween(pile)\n            .by(0.1, {\n                position: v3(0, 30)\n            })\n            .start();\n        }\n    }\n\n    pileTouchMove(event: EventTouch) {\n        let pile = event.target;\n        // console.info(\"pileTouchMove\", pile.name);\n\n        if (pile.canTouch) {\n            Tween.stopAllByTarget(pile);\n\n            // 当前选中Pile跟随触摸点移动\n            let pos = pile.getPosition();\n            let delta = event.getDelta();\n            pile.setPosition(v3(pos.x + delta.x, pos.y + delta.y));\n            \n            // 移动过程中更新地图格子状态：选中/未选中\n            let worldPos = cocosUtil.convertToWorldSpace(pile.parent, pile.getPosition());\n            let area = this.getAreaByWorldPos(worldPos);\n            // 只有当前格子没有被选中才需要更新状态\n            if (!(area && this._selectedArea && this._selectedArea == area)) {\n                if (area && this.checkAreaIsEmpty(area)) {\n                    if (this._selectedArea) {\n                        // 将上次选中的格子更新为“未选中”状态\n                        this.setAreaState(this._selectedArea, 1);\n                    }\n\n                    this.setAreaState(area, 2);\n                    this._selectedArea = area;\n                } else {\n                    if (this._selectedArea) {\n                        this.setAreaState(this._selectedArea, 1);\n                        this._selectedArea = null;\n                    }\n                }\n            }\n        }\n    }\n\n    pileTouchEnd(event: EventTouch) {\n        let pile = event.target;\n\n        console.info(\"pileTouchEnd\", pile.name, pile.getPosition(), pile.originalPos);\n\n        if (pile.canTouch) {\n            if (this._selectedArea) {\n                // 如果选中的格子是空的，需要将当前移动堆上的六边形移到选中的格子上\n                let worldPos = cocosUtil.convertToWorldSpace(this._selectedArea.parent, this._selectedArea.getPosition())\n                let pos = cocosUtil.convertToNodeSpace(pile.parent, worldPos).add(v3(0, 6));\n                let selectedArea = this._selectedArea;\n                let thisObj = this;\n\n                console.log(\"move pile from\", pile.getPosition(), \" to \", pos, \"worldPos\", worldPos);\n                \n                tween(pile)\n                    .to(0.1, {\n                        position: pos\n                    })\n                    .call(function() {\n                        // 将当前堆上的六边形移动到选中的格子上\n                        while (pile.children.length > 0) {\n                            let hexagon = pile.children[0];\n                            let pos = cocosUtil.convertToNodeSpace(selectedArea, cocosUtil.convertToWorldSpace(hexagon.parent, hexagon.getPosition()));\n                            hexagon.setPosition(pos);\n                            hexagon.parent = selectedArea;\n                        }\n                        pile.removeFromParent();\n\n                        // 检查是否可以合并\n                        thisObj.checkAndMergeArea(selectedArea);\n                    })\n                    .start();\n\n                audioManager.playEffect(constants.audioNames.putPile);\n\n                this.setAreaState(this._selectedArea, 1);\n                this._selectedArea = null;\n            } else {\n                // 如果没有选中格子，需要将当前移动的堆恢复到原来的位置\n                tween(pile)\n                    .to(0.2, {\n                        position: pile.originalPos\n                    })\n                    .start();\n\n                if (this._selectedArea) {\n                    this.setAreaState(this._selectedArea, 1);\n                }\n\n                this._selectedArea = null;\n            }\n        }\n    }\n\n    checkAndMergeArea(area: Node) {\n        // 找到可合并的格子列表\n        let thisObj = this;\n        let nearAreaArr = this.getNearAreaArr(area);\n        let topColor = this.getTopColorOfArea(area);\n        let mergeAreaArr = nearAreaArr.filter(function(e) {\n            return e.children.length > 0 && thisObj.getTopColorOfArea(e) == topColor;\n        })\n\n        // 存在可合并的格子\n        if (mergeAreaArr.length > 0) {\n            let dest;\n            let src;\n            if (mergeAreaArr.length > 1) {\n                src = this.selectMergeArea(mergeAreaArr);\n                dest = area;\n            } else {\n                src = this.selectMergeArea(mergeAreaArr.concat(area));\n                dest = (area.uuid == src.uuid) ? mergeAreaArr[0] : area;\n            }\n\n            console.info(\"merge two piles\", dest.name, src.name);\n\n            this._doubleCheckAreaArr.push(dest);\n            this._doubleCheckAreaArr.push(src);\n            this.mergeCollor(dest, src);\n            return;\n        } \n\n        // 删除已经检查过的格子\n        if (this._doubleCheckAreaArr.length > 0) {\n            let index = this._doubleCheckAreaArr.findIndex(function(e) {\n                return e.uuid == area.uuid;\n            })\n            if (index != -1) {\n                this._doubleCheckAreaArr.splice(index, 1);\n            }\n\n            this.doubleCheckMapArea();\n            return;\n        }\n\n        let checkAndFill = function() {\n            thisObj.checkGameOver();\n\n            if (thisObj.countStackPiles() == 0) {\n                thisObj.fillStackPiles();\n            }\n        }\n\n        // 存在可以消除的格子\n        if (this._waitClearAreaArr.length > 0) {\n            let index = 0;\n            let total = this._waitClearAreaArr.length;\n\n            while (this._waitClearAreaArr.length > 0) {\n                let clearArea = this._waitClearAreaArr.shift();\n                this.eliminateColor(clearArea, function() {\n                    index++;\n                    if (index == total) {\n                        checkAndFill();\n                    }\n                });\n            }\n            \n            return;\n        }\n\n        checkAndFill();        \n    }\n\n    // 从给定列表中找到一个待合并六边形堆\n    selectMergeArea(areaArr: Node[]): Node {\n        // 1. 优先挑选有更多不同颜色的Pile\n        let tmpArr = [];\n        let maxColorTypeNum = 0;\n        let thisObj = this;\n        utilTools.forArr(areaArr, function(area: Node, index: number) {\n            let num = thisObj.countColorTypeOfArea(area);\n            if (num > maxColorTypeNum) {\n                maxColorTypeNum = num;\n                tmpArr = [];\n                tmpArr.push(area);\n            } else {\n                if (num == maxColorTypeNum) {\n                    tmpArr.push(area);\n                }\n            }\n        });\n        \n        if (tmpArr.length == 1) {\n            return tmpArr[0];\n        }\n\n        // 2. 选择相邻堆顶有与当前堆第二种颜色相同六边形的格子，产生连消效果\n        let tmpArr2 = [];\n        if (maxColorTypeNum > 1) {\n            utilTools.forArr(tmpArr, function(area: Node, index: number) {\n                let nearAreaArr = thisObj.getNearAreaArr(area);\n                let secondColor = thisObj.getSecondColorOfArea(area);\n                let results = nearAreaArr.filter(function(e) {\n                    return e.children.length > 0 && thisObj.getTopColorOfArea(e) == secondColor;\n                });\n                if (results.length != 0) {\n                    tmpArr2.push(area);\n                }\n            });\n        }\n\n        if (tmpArr2.length == 1) {\n            return tmpArr2[0];\n        }\n\n        // 3. 优先选择堆顶颜色数量少的，尽可能把所有六边形消除完\n        let tmpArr3 = [];\n        let minTopColorNum = 9999;\n        utilTools.forArr(tmpArr, function(area: Node, index: number) {\n            let num = thisObj.countTopColorOfArea(area);\n            if (num < minTopColorNum) {\n                minTopColorNum = num;\n                tmpArr3 = [];\n                tmpArr3.push(area);\n            } else {\n                if (num == minTopColorNum) {\n                    tmpArr3.push(area);\n                }\n            }\n        });\n\n        if (tmpArr3.length == 1) {\n            return tmpArr3[0];\n        }\n\n        // 4. 随机挑选一个\n        return tmpArr3[Math.floor(utilTools.getRandomFloat(0, tmpArr3.length - 1, true))];\n    }\n\n    mergeCollor(destArea: Node, srcArea: Node) {\n        console.info(\"merge \" + srcArea.name + \" to \" + destArea.name);\n\n        // 找出src堆顶相同颜色的所有六边形\n        let hexagonArr = this.getTopColorNodeArrOfArea(srcArea).sort(function(a: Node, b: Node) {\n            return a.getPosition().y - b.getPosition().y;\n        });\n        let mergeNum = hexagonArr.length;\n\n        // 确定dest堆最后一个六边形的高度\n        let topHexagonPos = destArea.children[destArea.children.length - 1].getPosition();\n        // 最后一个六边形的高度加上待合并的六边形的高度\n        let topHexagonPosIfMerged = v3(topHexagonPos).add(v3(0, this._spacing).multiplyScalar(mergeNum));\n        console.info(\"topHexagonPos\", topHexagonPos, \"topHexagonPosIfMerged\", topHexagonPosIfMerged, \"getTopColorNodeArrOfArea\", hexagonArr.length);\n        // 合并完成后目标格子最后一个六边形的位置\n        let destTopHexagonPos = cocosUtil.convertToNodeSpace(this._mergeTemp, cocosUtil.convertToWorldSpace(destArea, topHexagonPosIfMerged));\n            \n        // 借助一个中间点，将src堆中的六边形翻转移动到dest堆中，目的是让整个过程更加平顺\n        let thisObj = this;\n        utilTools.forArr(hexagonArr, function(hexagon: Node, index: number) {\n            // 待移动六边形的位置\n            let srcHexagonPos = cocosUtil.convertToNodeSpace(thisObj._mergeTemp, cocosUtil.convertToWorldSpace(srcArea, hexagon.getPosition()));\n            // 翻转的中间点\n            let midPos = v3((srcHexagonPos.x + destTopHexagonPos.x) / 2, (srcHexagonPos.y + destTopHexagonPos.y) / 2).add(v3(0, 150));\n            \n            // 移动到目标位置的坐标点\n            let destHexagonPos = cocosUtil.convertToNodeSpace(thisObj._mergeTemp, cocosUtil.convertToWorldSpace(destArea, v3(topHexagonPos).add(v3(0, thisObj._spacing).multiplyScalar(mergeNum - index))));\n            let finalHexagonPos = cocosUtil.convertToNodeSpace(destArea, cocosUtil.convertToWorldSpace(thisObj._mergeTemp, destHexagonPos));\n\n            console.info(\"merge hexagon, pos:\", hexagon.getPosition(), \"srcHexagonPos:\", srcHexagonPos, \"destTopHexagonPos:\",\n                destTopHexagonPos, \"midPos\", midPos, \"destHexagonPos\", destHexagonPos, \"finalHexagonPos\", finalHexagonPos);\n\n            hexagon.setPosition(srcHexagonPos);\n            hexagon.parent = thisObj._mergeTemp;\n\n            tween(hexagon)\n            .delay(0.065 * (mergeNum - index - 1))\n            .parallel(\n                tween(hexagon).to(0.195, {\n                    position: midPos\n                }),\n                tween(hexagon).to(0.195, {\n                    scale: v3(1, 0.05, 1)\n                }),\n            )\n            .parallel(\n                tween(hexagon).to(0.195, {\n                    position: destHexagonPos\n                }),\n                tween(hexagon).to(0.13, {\n                    scale: v3(1, 1, 1)\n                }),\n            )\n            .call(function() {\n                audioManager.playEffect(constants.audioNames.mergePile);\n\n                hexagon.setPosition(finalHexagonPos);\n                hexagon.parent = destArea;\n\n                if (index == 0) {\n                    destArea.children.sort(function(a: Node, b: Node) {\n                        return a.getPosition().y - b.getPosition().y;\n                    });\n\n                    if (thisObj.checkAreaCannEliminate(destArea) && !thisObj.checkAreaInWaitClearArr(destArea)) {\n                        thisObj._waitClearAreaArr.push(destArea);\n                    }\n\n                    if (\n                        thisObj.checkAreaCannEliminate(destArea) &&\n                        !thisObj._waitClearAreaArr.some(function(e) {\n                            return e.uuid == destArea.uuid;\n                        })\n                    ) {\n                        thisObj._waitClearAreaArr.push(destArea);\n                    }\n\n                    // 再次检查\n                    thisObj.doubleCheckMapArea();\n                }\n            })\n            .start();\n        });\n    }\n\n    doubleCheckMapArea() {\n        let thisObj = this;\n        this._doubleCheckAreaArr = this._doubleCheckAreaArr.filter(function(e) {\n            return e.children.length > 0;\n        });\n\n        // 如果有多个待检查的格子，随机选择一个\n        if (this._doubleCheckAreaArr.length > 0) {\n            let nextArea = this._doubleCheckAreaArr[utilTools.getRandomFloat(0, this._doubleCheckAreaArr.length - 1, true)];\n            this.checkAndMergeArea(nextArea);\n\n            return;\n        }\n\n        let checkAndFill = function() {\n            thisObj.checkGameOver();\n\n            if (thisObj.countStackPiles() == 0) {\n                thisObj.fillStackPiles();\n            }\n        }\n\n        // 如果有可消除的格子\n        if (this._waitClearAreaArr.length > 0) {\n            let index = 0;\n            let total = this._waitClearAreaArr.length;\n\n            while (this._waitClearAreaArr.length > 0) {\n                let area = this._waitClearAreaArr.shift();\n                this.eliminateColor(area, function() {\n                    index++;\n                    console.log(\"eliminate hexagon, index:\", index, \"total:\", total);\n                    \n                    if (index >= total) {\n                        checkAndFill();\n                    }\n                });\n            }\n\n            return;\n        }\n\n        checkAndFill();\n    }\n\n    // 消除指定格子的六边形\n    eliminateColor(area: Node, onComplete?: Function) {\n        let hexagons = this.getTopColorNodeArrOfArea(area);\n        let total = hexagons.length;\n        let eliminatedNum = 0;\n        let thisObj = this;\n        let index = 0;\n\n        for (\n            let f = function f() {\n                let hexagon = hexagons.shift();\n                index++;\n                tween(hexagon)\n                    .delay(0.05 * (total - hexagons.length))\n                    .to(0.1, {\n                        scale: v3(0.5, 0.5),\n                    })\n                    .call(function() {\n                        eliminatedNum++;\n                        audioManager.playEffect(constants.audioNames.eliminatePile);\n                        hexagon.removeFromParent();\n                        \n                        thisObj.showFlyAnimation(area, hexagon.getComponent(Hexagon).recipeId, index);\n                        // 消除最后一个六边形时更新进度\n                        // if (eliminatedNum == total - 1) {\n                        //     area.removeAllChildren();\n                        //     thisObj.showScoreAnimation(area, hexagon.getComponent(Hexagon).recipeId);\n    \n                        //     if (onComplete) {\n                        //         onComplete();\n                        //     }\n                        // }\n                    })\n                    .start();\n            }; hexagons.length > 0;\n        ) {\n            f();\n        }\n\n        this._alreadyClearTotal += total;\n    }\n\n    showFlyAnimation(area: Node, recipeId: number, index: number) {\n        console.log(\"displayScoreAnimation\", recipeId);\n\n        if (gameModel.getRecipeItemById(recipeId).remainClearNum <= 0) {\n            console.log(\"displayScoreAnimation: no remain clear num\", gameModel.getRecipeItemById(recipeId).remainClearNum);\n            return;\n        }\n\n        let recipeItemNode = this.findRecipeItemNodeById(recipeId);\n        if (!recipeItemNode) {\n            console.log(\"displayScoreAnimation: no recipeItemNode\", recipeItemNode);\n            return;\n        }\n\n        let flyEffect = cocosUtil.instantiate(this._flyEffect);\n        flyEffect.getComponent(MotionStreak).color = new Color(\"#b8eefd\"); \n        // TODO 子节点\n        this.node.addChild(flyEffect);\n        let startPos = cocosUtil.convertToNodeSpace(this.node, cocosUtil.convertToWorldSpace(area.parent, area.getPosition()));\n        flyEffect.setPosition(startPos);\n        flyEffect.active = true;\n\n        let endPos = cocosUtil.convertToNodeSpace(this.node, cocosUtil.convertToWorldSpace(recipeItemNode.parent, recipeItemNode.getPosition()));\n        let distance = Math.abs(startPos.subtract(endPos).length());\n\n        let thisObj = this;\n        let ctlPos = v3(startPos.x + utilTools.getRandomFloat(0, 150, true) * (index % 2 == 0 ? 1 : -1), startPos.y + utilTools.getRandomFloat(-30, 60, true));\n        tween(flyEffect)\n            .to (distance / 900, { position: endPos }, {\n                onUpdate: function(target: object, ratio: number) {\n                    let pos = thisObj.calculateBezierPosition(ratio, startPos, ctlPos, endPos);\n                    flyEffect.setPosition(pos);\n                }\n            })\n            .call(function() {\n                // var effect = cocosUtil.instantiate(thisObj._scoringEffect);\n                // thisObj.node.addChild(effect);\n                // effect.setPosition(cocosUtil.convertToNodeSpace(thisObj.node, cocosUtil.convertToWorldSpace(point.parent, point.getPosition())));\n                // effect.active = true;\n\n                // var spine = effect.getComponent(sp.Skeleton);\n                // spine.setAnimation(0, \"animation\", false);\n                // spine.setCompleteListener(function() {\n                //     effect.removeFromParent();\n                //     effect.destroy();\n                // })\n\n                // tween(thisObj._progressNode)\n                //     .to(0.1, {\n                //         scale: v3(1.05, 1.05, 1.05)\n                //     })\n                //     .to(0.1, {\n                //         scale: v3(1, 1, 1)\n                //     })\n                //     .start();\n\n                flyEffect.destroy();\n                // recipeItemNode.getComponent(RecipeItem).showClearAnimation();\n\n                // // TODO 食物呼吸效果\n\n                // thisObj.refreshProgress();\n                // //thisObj.updateProgress();\n                \n                // // 通关\n                // if (thisObj.getRemainRecipeItemsTotal() == 0) {\n                //     console.log(\"pass game\")\n                //     thisObj.doSettlement(true);\n                // }\n            })\n            .start();\n    }\n\n    showScoreAnimation(area: Node, recipeId: number) {\n        console.log(\"displayScoreAnimation\", recipeId);\n\n        if (gameModel.getRecipeItemById(recipeId).remainClearNum <= 0) {\n            console.log(\"displayScoreAnimation: no remain clear num\", gameModel.getRecipeItemById(recipeId).remainClearNum);\n            return;\n        }\n\n        let recipeItemNode = this.findRecipeItemNodeById(recipeId);\n        if (!recipeItemNode) {\n            console.log(\"displayScoreAnimation: no recipeItemNode\", recipeItemNode);\n            return;\n        }\n\n        let point = cocosUtil.instantiate(this._flyEffect);\n        this.node.addChild(point);\n        let pos = cocosUtil.convertToNodeSpace(this.node, cocosUtil.convertToWorldSpace(area.parent, area.getPosition()));\n        point.setPosition(pos);\n        point.active = true;\n\n        let destPos = cocosUtil.convertToNodeSpace(this.node, cocosUtil.convertToWorldSpace(recipeItemNode.parent, recipeItemNode.getPosition()));\n        let distance = Math.abs(pos.subtract(destPos).length());\n\n        let thisObj = this;\n        tween(point)\n            .to (distance / 1e3, {\n                position: destPos\n            })\n            .call(function() {\n                // var effect = cocosUtil.instantiate(thisObj._scoringEffect);\n                // thisObj.node.addChild(effect);\n                // effect.setPosition(cocosUtil.convertToNodeSpace(thisObj.node, cocosUtil.convertToWorldSpace(point.parent, point.getPosition())));\n                // effect.active = true;\n\n                // var spine = effect.getComponent(sp.Skeleton);\n                // spine.setAnimation(0, \"animation\", false);\n                // spine.setCompleteListener(function() {\n                //     effect.removeFromParent();\n                //     effect.destroy();\n                // })\n\n                // tween(thisObj._progressNode)\n                //     .to(0.1, {\n                //         scale: v3(1.05, 1.05, 1.05)\n                //     })\n                //     .to(0.1, {\n                //         scale: v3(1, 1, 1)\n                //     })\n                //     .start();\n\n                point.destroy();\n                recipeItemNode.getComponent(RecipeItem).showClearAnimation();\n\n                // TODO 食物呼吸效果\n\n                thisObj.refreshProgress();\n                //thisObj.updateProgress();\n                \n                // 通关\n                if (thisObj.getRemainRecipeItemsTotal() == 0) {\n                    console.log(\"pass game\")\n                    thisObj.doSettlement(true);\n                }\n            })\n            .start();\n    }\n\n    // 填充候选堆\n    fillStackPiles() {\n        let thisObj = this;\n\n        let fill = function(index: number) {\n            let pile = thisObj.createPile();\n            thisObj._mapStack.addChild(pile);\n            pile.active = true;\n            let pos = pile.getPosition()\n            pos.x = thisObj._stackPilePosXArr[index] + 750;\n            pile.setPosition(pos);\n        \n            tween(pile)\n                .delay(0.36 * index)\n                .by(0.3, {\n                    position: v3(-750, 0, 0),\n                })\n                .call(function() {\n                    audioManager.playEffect(constants.audioNames.pileIn);\n                })\n                .to(0.06, {\n                    scale: v3(1.1, 1.1, 1.1)\n                })\n                .to(0.14, {\n                    scale: v3(1, 1, 1)\n                })\n                .call(function() {\n                    let pos = pile.getPosition()\n                    pos.x = thisObj._stackPilePosXArr[index];\n                    pile.setPosition(pos);\n                    \n                    pile.canTouch = true;\n                    pile.originalPos = pos;\n                })\n                .start();\n        }\n\n        for (let i = 0; i < 3; i++) {\n            fill(i);\n        }\n    }\n\n    getAreaByWorldPos(pos: Vec3) {\n        let target: Node = null;\n        utilTools.forArr(this._mapArea.children, function(area: Node, index: number) {\n            if (area.active && cocosUtil.convertToWorldSpace(area.parent, area.getPosition()).equals(pos, 62)) {\n                target = area;\n                return true;\n            }\n\n            return false;\n        });\n\n        return target;\n    }\n\n    // 设置格子状态：1-未选中 2-选中\n    setAreaState(area: Node, state: number) {\n        switch(state) {\n            case 1:\n                this.setSpriteFrame2(area, \"img_liubian_di\");\n                // area.getComponent(Sprite).spriteFrame = this._spritePool.getChildByName(\"Normal\").getComponent(Sprite).spriteFrame;\n                break;\n            case 2:\n                this.setSpriteFrame2(area, \"img_liubian_di2\");\n                // area.getComponent(Sprite).spriteFrame = this._spritePool.getChildByName(\"Selected\").getComponent(Sprite).spriteFrame;\n                break;\n        }\n    }\n\n    // 是否是空格子\n    checkAreaIsEmpty(area: Node): Boolean {\n        return area.children.length <= 0;\n    }\n\n    // 查找相邻的格子列表\n    getNearAreaArr(area: Node): Node[] {\n        return this._mapArea.children.filter(function(e) {\n            return e.active && e.uuid != area.uuid && e.getPosition().equals(area.getPosition(), 140);\n        })\n    }\n\n    // 获取堆顶六边形颜色\n    getTopColorOfArea(area: Node): number {\n        assert(area.children.length > 0);\n        return Number(area.children[area.children.length - 1].name);\n    }\n\n    // 获取堆第二种六边形颜色\n    getSecondColorOfArea(area: Node): number {\n        let second;\n        let top = this.getTopColorOfArea(area);\n        for (let i = area.children.length - 2; i >= 0 && !second; ) {\n            let c = Number(area.children[i].name);\n            if (c != top) {\n                second = c;\n            }\n            i--;\n        }\n\n        return second;\n    }\n\n    // 获取与堆顶相同颜色的所有六边形\n    getTopColorNodeArrOfArea(area: Node): Node[] {\n        let top = this.getTopColorOfArea(area);\n        let nodeArr = [];\n        let n = area.children.length - 1;\n        for (; n >= 0 && top == Number(area.children[n].name); ) {\n            nodeArr.push(area.children[n]);\n            n--;\n        }\n\n        return nodeArr;\n    }\n\n    // 获取堆顶相同颜色六边形数量\n    countTopColorOfArea(area: Node): number {\n        let top = this.getTopColorOfArea(area);\n        let n = 0;\n        for (let i = area.children.length - 1; i >= 0 && top == Number(area.children[i].name);) {\n            n++;\n            i--;\n        }\n\n        return n;\n    }\n\n    // 获取不同颜色六边形数量\n    countColorTypeOfArea(area: Node): number {\n        let typeArr = [];\n        area.children.forEach(function(t) {\n            let has = typeArr.some(function(id) {\n                return id == t.name;\n            });\n            if (!has) {\n                typeArr.push(t.name);\n            } \n        });\n\n        return typeArr.length;\n    }\n\n    // 获取空格子数量\n    countEmptyAreas(): number {\n        return this._mapArea.children.filter(function(c) {\n            return c.active && c.children.length == 0;\n        }).length;\n    }\n\n    // 获取剩余的堆数量\n    countStackPiles(): number {\n        return this._mapStack.children.length;\n    }\n\n    // 计算进度\n    getCurrentProgress(): number {\n        return Math.floor((this._alreadyClearTotal / this._targetClearTotal) * 100);\n    }\n\n    // 判断格子是否可以消除\n    checkAreaCannEliminate(area: Node) {\n        return this.countTopColorOfArea(area) >= 10 && !this.getSecondColorOfArea(area);\n    }\n\n    // 判断格子是否已经在待消除列表中\n    checkAreaInWaitClearArr(area: Node): Boolean {\n        return this._waitClearAreaArr.some(function(e) {\n            return e.uuid == area.uuid;\n        });\n    }\n\n    // 广告解锁\n    onVideoUnlockClick(event: EventTouch) {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        event.target.removeFromParent();\n    }\n\n    checkGameOver() {\n\n    }\n\n    // 根据当前进度[0-100]确定一个下标，用于随机生成六边形堆\n    getProgressCoefficientIndex() {\n        var progress = this.getCurrentProgress();\n        let index = this._progressCoefficientArr.findIndex(function(e) {\n            return e >= progress;\n        });\n\n        return index == -1 ? this._progressCoefficientArr.length - 1 : index;\n    };\n\n    getColorPool(index: number) {\n        // var y = [\n        //     [1, 2, 3],\n        //     [1, 2, 3],\n        //     [1, 2, 3, 4],\n        //     [1, 2, 3, 4],\n        //     [1, 2, 3, 4]\n        // ];\n        // var C = [\n        //     [1, 2, 3, 4, 5],\n        //     [1, 2, 3, 4, 5, 6],\n        //     [1, 2, 3, 4, 5, 7],\n        //     [1, 2, 3, 4, 5, 7],\n        //     [1, 2, 3, 4, 5, 7]\n        // ];\n        // var _ = [\n        //     [1, 2, 3, 4, 5],\n        //     [1, 2, 3, 4, 5, 6],\n        //     [1, 2, 3, 4, 5, 6, 7],\n        //     [1, 2, 3, 4, 5, 6, 7, 8],\n        //     [1, 2, 3, 4, 5, 6, 7, 8]\n        // ];\n        // var b = [\n        //     [1, 2, 3, 4],\n        //     [1, 2, 3, 4, 5],\n        //     [1, 2, 3, 4, 5, 6],\n        //     [1, 2, 3, 4, 5, 6, 7],\n        //     [1, 2, 3, 4, 5, 6, 7, 8]\n        // ];\n\n        // let data = [y, C, _, b][this._colorPoolIndex];\n\n        return gameModel.mapRecipeItemArr.map(data => data.id);\n    };\n\n    // 确定创建六边形的数量\n    determineHexagonCount(index: number) {\n        //let probs = createNumProbs[index];\n        // 每次生成六边形堆时用来计算六边形数量的概率\n        let probs = {\n            3: 15,\n            4: 35,\n            5: 50,\n        };\n        let val = utilTools.getRandomFloat(0, 100, true);\n        var total = 0;\n\n        for (let k in probs) {\n            if ((total += probs[k]) >= val) {\n                return Number(k);\n            }\n        }\n    }\n\n    // 确定生成几种颜色的六边形\n    determineHexagonColorCount(index: number) {\n        //let probs = createColorNumProbs[index];\n        // let num = this.countEmptyAreas();\n        // if (num <= 3) {\n        //     map = g[0];\n        // } else if (num <= 6) {\n        //     map = g[1];\n        // } else if (num <= 9) {\n        //     map = g[2];\n        // } else {\n        //     map = createColorNumProbs[index];\n        // }\n\n        let probs =  {\n            1: 60,\n            2: 40,\n        };\n        let val = utilTools.getRandomFloat(0, 100, true);\n        let total = 0;\n        for (let k in probs) {\n            if ((total += probs[k]) >= val) {\n                return Number(k);\n            }\n        }\n    }\n\n    // updateProgress() {\n    //     let thisObj = this;\n    //     let progressText = find(\"Text\", this._progressNode);\n\n    //     // 分10次更新到目标进度\n    //     let index = 0;\n    //     let delta = (this._alreadyClearTotal - this._alreadyRenderClearTotal) / 10;\n\n    //     this.unschedule(this._renderProgressFunc);\n\n    //     this._renderProgressFunc = function() {\n    //         index++;\n    //         thisObj._alreadyRenderClearTotal += delta;\n\n    //         thisObj.setProgressBar(thisObj._progressNode, thisObj._alreadyRenderClearTotal / thisObj._targetClearTotal);\n    //         thisObj.setString(progressText, parseInt(String(thisObj._alreadyRenderClearTotal)) + \"/\" + thisObj._targetClearTotal);\n\n    //         if (index == 11) {\n    //             thisObj.setString(progressText, thisObj._alreadyClearTotal + \"/\" + thisObj._targetClearTotal);\n    //             thisObj.setProgressBar(this._progressNode, thisObj._alreadyClearTotal / thisObj._targetClearTotal);\n    //         }\n    //     }\n\n    //     // 更新动画\n    //     this.schedule(this._renderProgressFunc, delta / 200 / 10, 10);\n    // }\n\n    // 分数解锁\n    unlockAreaByPoint(area: Node) {\n        tween(area.getChildByName(\"Lock\"))\n            .by(0.1, {\n                angle: 15\n            })\n            .by(0.1, {\n                angle: -15\n            })\n            .by(0.1, {\n                angle: -15\n            })\n            .by(0.1, {\n                angle: 15\n            })\n            .union()\n            .repeat(2)\n            .call(function() {\n                area.getChildByName(\"Point\").active = false;\n                area.getChildByName(\"Lock\").active = false;\n                area.getChildByName(\"UnLock\").active = true;\n\n                let uiOpacity = area.getComponent(UIOpacity);\n                tween(uiOpacity)\n                    .delay(0.2)\n                    .to(0.3, {\n                        opacity: 0\n                    })\n                    .call(function() {\n                        area.removeFromParent()\n                    })\n                    .start();\n\n                let bgUIOpacity = area.getChildByName(\"Bg\").getComponent(UIOpacity);\n                tween(bgUIOpacity)\n                    .delay(0.2)\n                    .to(0.6, {\n                        opacity: 0\n                    })\n                    .start();\n            })\n            .start();\n    }\n\n    doSettlement(isWin: boolean = false) {\n        if (isWin) {\n            let obj = {\n                icon: gameModel.mapFoodRow.icon,\n                name: gameModel.mapFoodRow.name,\n            };\n            UserData.getInstance().setLevelData({});\n            gameModel.gameLayer.popLayer(constants.layers.GetFoodLayer, obj);\n        } else {\n            gameModel.gameLayer.popLayer(constants.layers.LossLayer);\n        }\n    }\n\n    // 获取解锁的格子列表\n    getNormalAreaArr() {\n        return this._mapArea.children.filter(function(e) {\n            return (\n                e.children.length > 0 &&\n                ![\"VideoUnlockArea\"].some(function(t) {\n                    return t == e.children[0].name;\n                })\n            );\n        });\n    }\n\n    // 随机清除指定数量的格子\n    randomClearAreasByNum(num: number) {\n        let areaArr = this.getNormalAreaArr();\n        while (num-- > 0 && areaArr.length > 0) {\n            this.clearArea(utilTools.getRandomItemByArr(areaArr, true));\n        }\n    }\n\n    // 清除指定格子上的所有六边形\n    clearArea(area: Node) {\n        let aniNode = cocosUtil.instantiate(this._clearEffect);\n        this._mergeTemp.addChild(aniNode);\n        let childrenCount = area.children.length;\n        let pos = cocosUtil.convertToNodeSpace(this._mergeTemp, cocosUtil.convertToWorldSpace(area, area.children[childrenCount - 1].getPosition()).add(v3(25, 0)));\n        aniNode.setPosition(pos);\n        aniNode.active = true;\n        var spine = aniNode.getComponent(sp.Skeleton);\n        spine.setAnimation(0, \"animation\", false);\n        spine.setCompleteListener(function() {\n            aniNode.removeFromParent();\n            aniNode.destroy();\n            area.removeAllChildren();\n        })\n    }\n\n    // 重发\n    refreshStackPiles() {\n        let thisObj = this;\n        let childrenCount = this._mapStack.children.length;\n\n        utilTools.forArr(this._mapStack.children, function(pile: any, index: number) {\n            pile.canTouch = false;\n            tween(pile)\n                .delay(0.36 * index)\n                .by(0.3, {\n                    position: v3(-750, 0, 0)\n                })\n                .call(function() {\n                    pile.removeFromParent();\n                    pile.destroy();\n                    if (index == childrenCount - 1) {\n                        thisObj.fillStackPiles();\n                    }\n                })\n                .start();\n        });\n    }\n\n    // 检查是否可以移动\n    checkCanMove() {\n        return !(this._doubleCheckAreaArr.length > 0 || this._waitClearAreaArr.length > 0);\n    }\n\n    makeMove() {\n        let thisObj = this;\n\n        // 为每个Area添加一个子节点，注册一个触摸监听事件\n        utilTools.forArr(this.getNormalAreaArr(), function(area: Node, index: number) {\n            let node = new Node(\"Touch\");\n            area.addChild(node);\n\n            let childrenCount = area.children.length;\n            let uiTransform = cocosUtil.addComponentOnce(node, UITransform);\n            uiTransform.setContentSize(size(142, 121 + (childrenCount - 1) * thisObj._spacing));\n            uiTransform.setAnchorPoint(v2(0.5, 0));\n            node.setPosition(v3(0, -60.5));\n\n            console.log(\"add touch node to\", area.name);\n\n            node.on(Node.EventType.TOUCH_MOVE, thisObj.areaTouchMove, thisObj);\n            node.on(Node.EventType.TOUCH_END, thisObj.areaTouchEnd, thisObj);\n            node.on(Node.EventType.TOUCH_CANCEL, thisObj.areaTouchEnd, thisObj);\n        });\n    }\n\n    areaTouchMove(event: EventTouch) {\n        console.log(\"areaTouchMove\", event.target.name);\n\n        // 借助一个临时时节点来移动六边形堆\n        if (!this._movingPile) {\n            let area = event.target.parent;\n            let hexagonArr = area.children.filter(function(e) {\n                return e.name != \"Touch\";\n            })\n\n            let tmpNode = new Node(\"TouchMove\");\n            tmpNode.setPosition(cocosUtil.convertToNodeSpace(this._mergeTemp, cocosUtil.convertToWorldSpace(area, hexagonArr[0].getPosition())));\n            this._mergeTemp.addChild(tmpNode);\n            utilTools.forArr(hexagonArr, function(hexagon: Node, index: number) {\n                hexagon.parent = tmpNode;\n            });\n            this._movingPile = tmpNode;\n        }\n\n        // 跟随触摸点移动\n        let movePile = this._movingPile;\n        let pos = movePile.getPosition();\n        let delta = event.getDelta();\n        movePile.setPosition(v3(pos.x + delta.x, pos.y + delta.y));\n        let selectArea = this.getAreaByWorldPos(cocosUtil.convertToWorldSpace(movePile.parent, movePile.getPosition()));\n\n        console.log(\"movePile\", movePile.getPosition(), \"selectArea\", selectArea.getPosition());\n\n        if (!(selectArea && this._selectedArea && this._selectedArea == selectArea)) {\n            // 判断移动时选中的方格是否可以移入\n            if (selectArea && this.checkAreaCanPutInByMove(selectArea)) {\n                if (this._selectedArea) {\n                    if (this._switchArea) {\n                        this.moveAreaContent(this._switchArea, this._selectedArea);\n                    }\n\n                    this.setAreaState(this._selectedArea, 1);\n                }\n\n                if (this.checkAreaCanSwitchByMove(selectArea)) {\n                    this.moveAreaContent(selectArea, event.target.parent);\n                    this._switchArea = event.target.parent;\n                }\n\n                this.setAreaState(selectArea, 2);\n                this._selectedArea = selectArea;\n            } else {\n                if (this._selectedArea) {\n                    if (this._switchArea) {\n                        this.moveAreaContent(this._switchArea, this._selectedArea);\n                    }\n\n                    this.setAreaState(this._selectedArea, 1);\n                    this._selectedArea = null;\n                }\n            }\n        }\n        \n    }\n\n    areaTouchEnd(event: EventTouch) {\n        console.log(\"--areaTouchEnd\", event.target.name, );\n\n        let parentNode = event.target.parent;\n        // 删除Touch节点时会触发Touch Cancel事件\n        if (!parentNode) {\n            return;\n        }\n\n        let thisObj = this;\n        if (this._selectedArea && this._selectedArea.uuid != parentNode.uuid) {\n            let movePile = this._movingPile;\n            let selectArea = this._selectedArea;\n            this._movingPile = null;\n            console.log(\"movePile\", movePile.name);\n\n            tween(movePile)\n                .to(0.1, {\n                    position: selectArea.getPosition()\n                })\n                .call(function() {\n                    console.log(\"move pile length\", movePile.children.length);\n                    // 将移动的六边形堆逐个放到目标格子\n                    while (movePile.children.length > 0) {\n                        let hexagon = movePile.children[0];\n                        console.log(\"move hexagon of pile to selected area\", hexagon.name);\n                        hexagon.setPosition(v3(0, thisObj._spacing).multiplyScalar(selectArea.children.length).add(v3(0, 6)));\n                        hexagon.parent = selectArea;\n                    }\n\n                    if (thisObj._switchArea) {\n                        thisObj._doubleCheckAreaArr.push(thisObj._switchArea);\n                        thisObj._switchArea = null;\n                    }\n\n                    thisObj.checkAndMergeArea(selectArea);\n                })\n                .start();\n            \n            this.setAreaState(this._selectedArea, 1);\n            this._selectedArea = null;\n\n            audioManager.playEffect(constants.audioNames.putPile);\n            this.cancelMove();\n        } else {\n            let movePile = this._movingPile;\n            this._movingPile = null;\n\n            tween(movePile)\n                .to(0.1, {\n                    position: parentNode.getPosition()\n                })\n                .call(function() {\n                    // 将移动的六边形堆逐个放到目标格子\n                    while (movePile.children.length > 0) {\n                        let hexagon = movePile.children[0];\n                        hexagon.setPosition(v3(0, thisObj._spacing).multiplyScalar(parentNode.children.length).add(v3(0, 6)));\n                        hexagon.parent = movePile;\n                    }\n                })\n                .start();\n            \n            audioManager.playEffect(constants.audioNames.putPile);    \n        }\n    }\n\n    // 使用移动道具时判断当前格子是否可以移入\n    checkAreaCanPutInByMove(area: Node) {\n        return area.children.length != 1 ||\n            ![\"VideoUnlockArea\"].some(function(e) {\n                return e == area.children[0].name;\n            });\n    }\n\n    // 使用移动道具时判断当前格子是否可以交换\n    checkAreaCanSwitchByMove(area: Node) {\n        return (\n            area.children.length > 0 &&\n            (area.children.length != 1 ||\n                ![\"VideoUnlockArea\"].some(function(e) {\n                    return e == area.children[0].name;\n                }))\n        );\n    };\n\n    // 将src上的六边形移动到dest上\n    moveAreaContent(src: Node, dest: Node) {\n        src.children.filter(function(e) {\n            return e.name != \"Touch\";\n        })\n        .forEach(function(e) {\n            return e.parent = dest;\n        });\n    }\n\n    cancelMove() {\n        console.log(\"cancel move\");\n        utilTools.forArr(this.getNormalAreaArr(), function(area: Node, index: number) {\n            let touch = area.getChildByName(\"Touch\");\n            if (touch) {\n                console.log(\"remove touch node\", area.name);\n                touch.removeFromParent();\n            }\n        });\n    }\n\n    /**\n     * \n     * @param time 时间\n     * @param startPos 开始位置\n     * @param ctlPos 控制点\n     * @param endPos 结束为止\n     * @returns \n     */\n    calculateBezierPosition = function(t: number, startPos: Vec3, ctlPos: Vec3, endPos: Vec3) {\n        let x = (1 - t) * (1 - t) * startPos.x + 2 * t * (1 - t) * ctlPos.x + t * t * endPos.x;\n        let y = (1 - t) * (1 - t) * startPos.y + 2 * t * (1 - t) * ctlPos.y + t * t * endPos.y;\n        return v3(x, y, 0);\n    }\n}\n\n// 每次生成六边形堆时用来计算六边形数量的概率\nvar createNumProbs = [\n    {\n        2: 10,\n        3: 20,\n        4: 30,\n        5: 30,\n        6: 10\n    },\n    {\n        2: 10,\n        3: 15,\n        4: 35,\n        5: 30,\n        6: 10\n    },\n    {\n        2: 10,\n        3: 20,\n        4: 30,\n        5: 25,\n        6: 15\n    },\n    {\n        2: 10,\n        3: 10,\n        4: 25,\n        5: 35,\n        6: 20\n    },\n    {\n        2: 10,\n        3: 10,\n        4: 20,\n        5: 40,\n        6: 20\n    }\n];\n\n// 每次生成六边形堆时用来计算六边形颜色数量的概率\n// 生成1中或2中颜色\nvar createColorNumProbs = [\n    {\n        1: 30,\n        2: 60,\n        3: 10\n    },\n    {\n        1: 30,\n        2: 50,\n        3: 20\n    },\n    {\n        1: 25,\n        2: 50,\n        3: 25\n    },\n    {\n        1: 20,\n        2: 50,\n        3: 30\n    },\n    {\n        1: 20,\n        2: 45,\n        3: 35\n    }\n];\n"]}