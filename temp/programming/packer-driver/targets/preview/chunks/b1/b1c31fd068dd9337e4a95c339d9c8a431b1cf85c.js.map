{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/Script/Tool/Resoure_Data.ts"],"names":["_decorator","Component","Node","Prefab","AudioClip","director","AudioSource","sys","CCBoolean","SpriteFrame","view","game","Game","assetManager","Texture2D","isValid","Material","JsonAsset","Font","AnimationClip","Tool_Event","Tool_Other","Tool_UI","PlatformApi","ccclass","property","Game_Mode","Scene_Change_Type","Resoure_Data","tooltip","constructor","Bundles","_Cache_Scene","_Cache_Prefab","_Cache_SpriteFrame","_Cache_Texture2D","_Cache_AudioClip","_Cache_Material","_Cache_Json","_Cache_AnimationClip","_Cache_Font","Vibration_Switch","Sound_Switch","Sound_Volume","Sound_AudioSource","Music_Switch","Music_Volume","Music_AudioSource","Sound_Long_AudioSource","Is_First_Start","Tutorial","FrameRate","LastTime","FrameRate_Schedule","Time_Current","performance","now","Time_Elapsed","currentFrameRate","console","debug","toFixed","Check_FrameRate","unschedule","schedule","update","Dt","onEnable","onDisable","onDestroy","onLoad","Director_AddPersistRootNode","node","Game_FrameRate_Set","Director_Scheduler_TimeScale_Set","window","addEventListener","Event","Screen_Update","Screen_Width","innerWidth","Screen_Height","innerHeight","Visible_Size","getVisibleSize","Visible_Width","width","Visible_Height","height","error","instance","Event_Dispatch","on","EVENT_HIDE","EVENT_SHOW","document","visibilityState","addComponent","parent","start","Is_First_StartUp","Information_Printing","Load_Bundle","First_Start","Data_Get","Get_Type_Is_Abnormal","Data_Set","Fetch_Data","Url","isWechatPlatform","Fetch_DataWX","Response","fetch","log","Data","json","Update_Data","Update_DataWX","method","headers","body","JSON","stringify","ok","Error","status","res","Promise","resolve","reject","wx","request","url","success","data","fail","err","header","statusCode","Data_Name","localStorage","setItem","e","Default_Value","Data_Value","Data_Raw","getItem","parse","undefined","Data_Delete","removeItem","Data_Is_Exist","Data_Update","New_Data","Existing_Data","Updated_Data","Data_Get_All_Keys","Object","keys","Data_Get_All","Keys","All_Data","forEach","Key","Clear_All_Data","clear","Copy_Deep","Obj","Cache","WeakMap","has","get","Date","RegExp","Map","Copied_Map","set","Value","Set","Copied_Set","add","Array","isArray","Copied_Array","map","Item","Copied_Obj","prototype","hasOwnProperty","call","Copy_Shallow","slice","Vibration_Switch_Set","Switch","Vibration_Switch_Get","Sound_Switch_Set","element","volume","Sound_Switch_Get","Sound_Volume_Set","Volume","Music_Switch_Set","Music_Switch_Get","Music_Volume_Set","Audio_Switch_Set","Audio_Volume_Set","Sound_Play","Path","Res","Load_AudioClip","loop","playOneShot","Music_Play","Call","warn","enabled","stop","clip","play","Sound_Long_play","Music_Pause","pause","Music_Resume","Music_Stop","Sound_Long_Pause","Sound_Long_Resume","Sound_Long_Stop","Sound_Long_Stop_All","i","length","Load_Remote_ImageAsset","Time_Start","loadRemote","ext","Err","Time_Finish","Time_Total","Texture","image","Sprite_Frame","texture","Load_Remote_ImageAsset_","Load_Remote_audio","Bundle_Name","loadBundle","Load_Dir","Type","loadDir","finished","total","item","onProgress","Load_Scene","Progress_Bar","Value_Label","loadScene","Finished","Total","Schedule","Number","progress","Math","floor","string","Scene_Name_Current","Load_Prefab","load","Load_SpriteFrame","Load_Texture","Load_Material","Load_Json","Load_AnimationClip","Load_Font","Release_Resource","Release_Resource_All","Game_Toggle_Fullscreen","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","Game_UIScale_Set","scale","style","transform","Game_Restart","restart","Game_Resume","resume","Game_Pause","Game_End","end","frameRate","Director_Run","SceneAsset","runSceneImmediate","Director_Resume","Director_Pause","Director_End","Node_Set","addPersistRootNode","Director_RemovePersistRootNode","removePersistRootNode","Scale","getScheduler","setTimeScale","Director_Scheduler_TimeScale_Get","getTimeScale","isNative","isBrowser","isMobile","isLittleEndian","isXR","Get_Current_Full_Time","Get_Timestamp","Get_Unix_Timestamp","Get_Timestamp_From_Date","year","month","day","date","getTime","Get_Time_Difference","Start_Timestamp","Fnish_Timestamp","Get_Current_Year","getFullYear","Get_Current_Month","getMonth","Get_Current_Date","getDate","Get_Current_Hour","getHours","Get_Current_Minute","getMinutes","Get_Current_Second","getSeconds","Get_Current_Millisecond","getMilliseconds","Get_Current_Day","getDay","Current_Time","Year","Month","Hour","Minute","Second","MilliSecond","Day"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAqBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,G,OAAAA,G;AAAkBC,MAAAA,S,OAAAA,S;AAA0FC,MAAAA,W,OAAAA,W;AAAmDC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAAgBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,a,OAAAA,a;;AAC7UC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBzB,U;AAE9B;;2BACY0B,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;AAaZ;;;mCACYC,iB,0BAAAA,iB;AAAAA,QAAAA,iB,CAAAA,iB;AAAAA,QAAAA,iB,CAAAA,iB;AAAAA,QAAAA,iB,CAAAA,iB;eAAAA,iB;;;8BAmBCC,Y,WADZJ,OAAO,CAAC,cAAD,C,UAqDHC,QAAQ,CAAC;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAD,C,UAORJ,QAAQ,CAACjB,SAAD,C,sCAhEb,MACaoB,YADb,SACkC3B,SADlC,CAC4C;AA8ExC6B,QAAAA,WAAW,GAAG;AACV;AA3EJ;;AAEA;AAwEc,eAvENC,OAuEM,GAvEyB,IAuEzB;;AAtEd;AAsEc,eArENC,YAqEM,GArEiB,EAqEjB;;AApEd;AAoEc,eAnENC,aAmEM,GAnEkB,EAmElB;;AAlEd;AAkEc,eAjENC,kBAiEM,GAjEuB,EAiEvB;;AAhEd;AAgEc,eA/DNC,gBA+DM,GA/DqB,EA+DrB;;AA9Dd;AA8Dc,eA7DNC,gBA6DM,GA7DqB,EA6DrB;;AA5Dd;AA4Dc,eA3DNC,eA2DM,GA3DoB,EA2DpB;;AA1Dd;AA0Dc,eAzDNC,WAyDM,GAzDgB,EAyDhB;;AAxDd;AAwDc,eAvDNC,oBAuDM,GAvDyB,EAuDzB;;AAtDd;AAsDc,eArDNC,WAqDM,GArDgB,EAqDhB;AAnDd;;AAEA;AAiDc,eAhDNC,gBAgDM,GAhDsB,IAgDtB;;AA9Cd;AA8Cc,eA7CNC,YA6CM,GA7CkB,IA6ClB;;AA5Cd;AA4Cc,eA3CNC,YA2CM,GA3CiB,CA2CjB;;AA1Cd;AA0Cc,eAzCNC,iBAyCM,GAzC2B,IAyC3B;;AAvCd;AAuCc,eAtCNC,YAsCM,GAtCkB,IAsClB;;AArCd;AAqCc,eApCNC,YAoCM,GApCiB,CAoCjB;;AAnCd;AAmCc,eAlCNC,iBAkCM,GAlC2B,IAkC3B;;AAhCd;AAgCc,eA/BNC,sBA+BM,GA/BkC,EA+BlC;;AA7Bd;;AAEA;AA2Bc;;AAvBd;AAuBc;;AAnBd;AAmBc,eAlBNC,cAkBM,GAlBoB,IAkBpB;;AAhBd;AAgBc;;AAZd;;AAEA;AAUc,eATPvB,SASO,GATgBA,SAAS,CAACwB,QAS1B;AANd;AAMc,eAJNC,SAIM,GAJc,CAId;AAAA,eAHNC,QAGM,GAHa,CAGb;AAAA,eAFNC,kBAEM,GAFyB,IAEzB;;AAEV,eAAKA,kBAAL,GAA0B,MAAM;AAC5B,gBAAMC,YAAY,GAAGC,WAAW,CAACC,GAAZ,EAArB;AACA,gBAAMC,YAAY,GAAG,CAACH,YAAY,GAAG,KAAKF,QAArB,IAAiC,IAAtD;AACA,gBAAMM,gBAAgB,GAAG,KAAKP,SAAL,GAAiBM,YAA1C;AACAE,YAAAA,OAAO,CAACC,KAAR,oBAAqBF,gBAAgB,CAACG,OAAjB,CAAyB,CAAzB,CAArB;AACA,iBAAKV,SAAL,GAAiB,CAAjB;AACA,iBAAKC,QAAL,GAAgBE,YAAhB;AACH,WAPD;AAQH;AACD;;;AACAQ,QAAAA,eAAe,GAAG;AACd,eAAKC,UAAL,CAAgB,KAAKV,kBAArB;AACA,eAAKF,SAAL,GAAiB,CAAjB;AACA,eAAKC,QAAL,GAAgBG,WAAW,CAACC,GAAZ,EAAhB;AACA,eAAKQ,QAAL,CAAc,KAAKX,kBAAnB,EAAuC,CAAvC;AACH;;AACDY,QAAAA,MAAM,CAACC,EAAD,EAAmB;AACrB,eAAKf,SAAL;AACH;;AACDgB,QAAAA,QAAQ,GAAG;AACPR,UAAAA,OAAO,CAACC,KAAR,CAAc,OAAd;AACH;;AACDQ,QAAAA,SAAS,GAAG;AACRT,UAAAA,OAAO,CAACC,KAAR,CAAc,cAAd;AACH;;AACDS,QAAAA,SAAS,GAAG;AACRV,UAAAA,OAAO,CAACC,KAAR,CAAc,OAAd;AACH;;AAEDU,QAAAA,MAAM,GAAG;AACL,eAAKC,2BAAL,CAAiC,KAAKC,IAAtC;AACA,eAAKC,kBAAL,CAAwB,GAAxB;AACA,eAAKC,gCAAL,CAAsC,CAAtC,EAHK,CAIL;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;;AACAC,UAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAmCC,KAAD,IAAW;AACzCC,YAAAA,aAAa;AAChB,WAFD,EArBK,CAwBL;;AACAH,UAAAA,MAAM,CAACC,gBAAP,CAAwB,mBAAxB,EAA8CC,KAAD,IAAW;AACpDlB,YAAAA,OAAO,CAACC,KAAR,CAAciB,KAAd;AACAC,YAAAA,aAAa;AAChB,WAHD,EAzBK,CA8BL;;AACA,mBAASA,aAAT,GAAyB;AAErB;AACA,gBAAIC,YAAY,GAAGJ,MAAM,CAACK,UAA1B;AACA,gBAAIC,aAAa,GAAGN,MAAM,CAACO,WAA3B;AACAvB,YAAAA,OAAO,CAACC,KAAR,wDAA2BmB,YAA3B,WAA6CE,aAA7C,EALqB,CAOrB;AACA;AACA;AACA;AAEA;;AACA,gBAAIE,YAAY,GAAGzE,IAAI,CAAC0E,cAAL,EAAnB;AACA,gBAAIC,aAAa,GAAGF,YAAY,CAACG,KAAjC;AACA,gBAAIC,cAAc,GAAGJ,YAAY,CAACK,MAAlC;AACA7B,YAAAA,OAAO,CAACC,KAAR,kDAA0ByB,aAA1B,WAA6CE,cAA7C;;AAEA,gBAAIF,aAAa,IAAIE,cAArB,EAAqC;AACjC5B,cAAAA,OAAO,CAAC8B,KAAR,CAAc,OAAd;AACA;AAAA;AAAA,4CAAWC,QAAX,CAAoBC,cAApB,CAAmC,eAAnC,EAAoD,YAApD;AACH,aAHD,MAGO;AACHhC,cAAAA,OAAO,CAAC8B,KAAR,CAAc,OAAd;AACA;AAAA;AAAA,4CAAWC,QAAX,CAAoBC,cAApB,CAAmC,eAAnC,EAAoD,UAApD;AACH;AAEJ;;AAGDhF,UAAAA,IAAI,CAACiF,EAAL,CAAQhF,IAAI,CAACiF,UAAb,EAAyB,MAAM;AAC3B;AACAlC,YAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuC,eAAvC;AACH,WAHD;AAIAjD,UAAAA,IAAI,CAACiF,EAAL,CAAQhF,IAAI,CAACkF,UAAb,EAAyB,MAAM;AAC3B;AACAnC,YAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsC,eAAtC;AACH,WAHD;AAIAmC,UAAAA,QAAQ,CAACnB,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAChD,gBAAImB,QAAQ,CAACC,eAAT,KAA6B,SAAjC,EAA4C;AACxC;AACArC,cAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd,EAAoC,YAApC;AACH,aAHD,MAGO;AACH;AACAD,cAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkC,YAAlC;AACH;AACJ,WARD;AAaA,eAAKb,iBAAL,GAAyB,IAAI7C,IAAJ,CAAS,OAAT,EAAkB+F,YAAlB,CAA+B3F,WAA/B,CAAzB;AACA,eAAKsC,iBAAL,GAAyB,IAAI1C,IAAJ,CAAS,OAAT,EAAkB+F,YAAlB,CAA+B3F,WAA/B,CAAzB;AACA,eAAKyC,iBAAL,CAAuByB,IAAvB,CAA4B0B,MAA5B,GAAqC,KAAK1B,IAA1C;AACA,eAAK5B,iBAAL,CAAuB4B,IAAvB,CAA4B0B,MAA5B,GAAqC,KAAK1B,IAA1C;AAEH;;AAEK2B,QAAAA,KAAK,GAAG;AAAA;;AAAA;AACV;AAAA;AAAA,4CAAYT,QAAZ,CAAqBpB,MAArB;;AAEA,YAAA,KAAI,CAAC8B,gBAAL;;AACA,YAAA,KAAI,CAACC,oBAAL;;AACA,YAAA,KAAI,CAACtE,OAAL,SAAqB,KAAI,CAACuE,WAAL,CAAiB,MAAjB,CAArB,CALU,CASV;AAEA;AAXU;AAcb;AAMD;;;AACAF,QAAAA,gBAAgB,GAAG;AACf,cAAIG,WAAW,GAAG,KAAKC,QAAL,CAAc,aAAd,CAAlB;AACA7C,UAAAA,OAAO,CAACC,KAAR,CAAc2C,WAAd;;AACA,cAAI,CAAC;AAAA;AAAA,wCAAWb,QAAX,CAAoBe,oBAApB,CAAyCF,WAAzC,CAAL,EAA4D;AACxD,iBAAKtD,cAAL,GAAsB,IAAtB;AACAsD,YAAAA,WAAW,GAAG,KAAKtD,cAAnB;AACA,iBAAKyD,QAAL,CAAc,aAAd,EAA6BH,WAA7B;AACH;;AACD,cAAIA,WAAJ,EAAiB;AACb5C,YAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EADa,CAEb;AACA;AACH,WAJD,MAIO;AACHD,YAAAA,OAAO,CAACC,KAAR,CAAc,SAAd;AACH;AACJ;AAGD;;;AACM+C,QAAAA,UAAU,CAACC,GAAD,EAAc;AAAA;;AAAA;AAC1B,gBAAI;AAAA;AAAA,oCAAQlB,QAAR,CAAiBmB,gBAAjB,EAAJ,EAAyC;AACrC,qBAAO,MAAI,CAACC,YAAL,CAAkBF,GAAlB,CAAP;AACH,aAFD,MAEO;AACH,kBAAI;AACA,oBAAMG,QAAQ,SAASC,KAAK,CAACJ,GAAD,CAA5B;AACAjD,gBAAAA,OAAO,CAACsD,GAAR,CAAY,OAAZ,EAAqBF,QAArB;AACA,oBAAMG,IAAI,SAASH,QAAQ,CAACI,IAAT,EAAnB;AACAxD,gBAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBsD,IAAzB;AACA,uBAAOA,IAAP;AACH,eAND,CAME,OAAOzB,KAAP,EAAc;AACZ9B,gBAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACH;AACJ;AAbyB;AAc7B;AAED;;;AACM2B,QAAAA,WAAW,CAACR,GAAD,EAAcM,IAAd,EAAyB;AAAA;;AAAA;AACtC,gBAAI;AAAA;AAAA,oCAAQxB,QAAR,CAAiBmB,gBAAjB,EAAJ,EAAyC;AACrC,qBAAO,MAAI,CAACQ,aAAL,CAAmBT,GAAnB,EAAwBM,IAAxB,CAAP;AACH,aAFD,MAEO;AACH,kBAAI;AACA,oBAAMH,QAAQ,SAASC,KAAK,CAACJ,GAAD,EAAM;AAC9BU,kBAAAA,MAAM,EAAE,KADsB;AACf;AACfC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAFqB;AAK9BC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALwB,iBAAN,CAA5B;;AAOA,oBAAI,CAACH,QAAQ,CAACY,EAAd,EAAkB;AACd,wBAAM,IAAIC,KAAJ,sCAAyBb,QAAQ,CAACc,MAAlC,CAAN;AACH;;AACDlE,gBAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACA,6BAAamD,QAAQ,CAACI,IAAT,EAAb;AACH,eAbD,CAaE,OAAO1B,KAAP,EAAc;AACZ9B,gBAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACA,sBAAMA,KAAN;AACH;AACJ;AArBqC;AAsBzC;AAED;AACJ;AACA;AACA;AACA;;;AACUqB,QAAAA,YAAY,CAACF,GAAD,EAAc;AAAA;AAC5B,gBAAI;AACA,kBAAMkB,GAAG,SAAS,IAAIC,OAAJ,CAAiB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpDC,gBAAAA,EAAE,CAACC,OAAH,CAAW;AACPC,kBAAAA,GAAG,EAAExB,GADE;AAEPU,kBAAAA,MAAM,EAAE,KAFD;AAGPe,kBAAAA,OAAO,EAAGP,GAAD,IAAS;AACdnE,oBAAAA,OAAO,CAACsD,GAAR,CAAY,OAAZ,EAAqBa,GAArB;AACAE,oBAAAA,OAAO,CAACF,GAAG,CAACQ,IAAL,CAAP,CAFc,CAEK;AACtB,mBANM;AAOPC,kBAAAA,IAAI,EAAGC,GAAD,IAAS;AACX7E,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,OAAd,EAAuB+C,GAAvB;AACAP,oBAAAA,MAAM,CAACO,GAAD,CAAN;AACH;AAVM,iBAAX;AAYH,eAbiB,CAAlB;AAcA7E,cAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBkE,GAAzB;AACA,qBAAOA,GAAP;AACH,aAjBD,CAiBE,OAAOrC,KAAP,EAAc;AACZ9B,cAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACA,oBAAMA,KAAN;AACH;AArB2B;AAsB/B;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACU4B,QAAAA,aAAa,CAACe,GAAD,EAAcE,IAAd,EAAyB;AAAA;AACxC,gBAAI;AACA,kBAAMR,GAAG,SAAS,IAAIC,OAAJ,CAAiB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpDC,gBAAAA,EAAE,CAACC,OAAH,CAAW;AACPC,kBAAAA,GAAG,EAAEA,GADE;AAEPd,kBAAAA,MAAM,EAAE,KAFD;AAGPgB,kBAAAA,IAAI,EAAEA,IAHC;AAGK;AACZG,kBAAAA,MAAM,EAAE;AACJ,oCAAgB;AADZ,mBAJD;AAOPJ,kBAAAA,OAAO,EAAGP,GAAD,IAAS;AACd;AACA,wBAAIA,GAAG,CAACY,UAAJ,IAAkB,GAAlB,IAAyBZ,GAAG,CAACY,UAAJ,GAAiB,GAA9C,EAAmD;AAC/C/E,sBAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACAoE,sBAAAA,OAAO,CAACF,GAAG,CAACQ,IAAL,CAAP;AACH,qBAHD,MAGO;AACHL,sBAAAA,MAAM,CAAC,IAAIL,KAAJ,sCAAyBE,GAAG,CAACY,UAA7B,CAAD,CAAN;AACH;AACJ,mBAfM;AAgBPH,kBAAAA,IAAI,EAAGC,GAAD,IAAS;AACXP,oBAAAA,MAAM,CAACO,GAAD,CAAN;AACH;AAlBM,iBAAX;AAoBH,eArBiB,CAAlB;AAsBA,qBAAOV,GAAP;AACH,aAxBD,CAwBE,OAAOrC,KAAP,EAAc;AACZ9B,cAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACA,oBAAMA,KAAN;AACH;AA5BuC;AA6B3C;AAGD;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;;;AACIiB,QAAAA,QAAQ,CAACiC,SAAD,EAAoBzB,IAApB,EAAqC;AACzC,cAAI;AACA3G,YAAAA,GAAG,CAACqI,YAAJ,CAAiBC,OAAjB,CAAyBF,SAAzB,EAAoClB,IAAI,CAACC,SAAL,CAAeR,IAAf,CAApC;AACH,WAFD,CAEE,OAAO4B,CAAP,EAAU;AACRnF,YAAAA,OAAO,CAAC8B,KAAR,6BAA8BkD,SAA9B,qBAA+CG,CAA/C;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACItC,QAAAA,QAAQ,CAACmC,SAAD,EAAoBI,aAApB,EAAoD;AAAA,cAAhCA,aAAgC;AAAhCA,YAAAA,aAAgC,GAAX,IAAW;AAAA;;AACxD,cAAI;AACA,gBAAIC,UAAJ;AACA,gBAAMC,QAAQ,GAAG1I,GAAG,CAACqI,YAAJ,CAAiBM,OAAjB,CAAyBP,SAAzB,CAAjB;AACAK,YAAAA,UAAU,GAAGC,QAAQ,GAAGxB,IAAI,CAAC0B,KAAL,CAAWF,QAAX,CAAH,GAA0B,IAA/C,CAHA,CAIA;;AACA,mBAAOD,UAAU,KAAKI,SAAf,GAA2BJ,UAA3B,GAAwCD,aAA/C;AACH,WAND,CAME,OAAOD,CAAP,EAAU;AACRnF,YAAAA,OAAO,CAAC8B,KAAR,6BAA8BkD,SAA9B,qBAA+CG,CAA/C;AACA,mBAAOC,aAAP;AACH;AACJ;AAED;AACJ;AACA;;;AACIM,QAAAA,WAAW,CAACV,SAAD,EAAoB;AAC3BpI,UAAAA,GAAG,CAACqI,YAAJ,CAAiBU,UAAjB,CAA4BX,SAA5B;AACH;AACD;AACJ;AACA;AACA;;;AACIY,QAAAA,aAAa,CAACZ,SAAD,EAA6B;AACtC,iBAAOpI,GAAG,CAACqI,YAAJ,CAAiBM,OAAjB,CAAyBP,SAAzB,MAAwC,IAA/C;AACH;AACD;AACJ;AACA;AACA;;;AACIa,QAAAA,WAAW,CAACb,SAAD,EAAoBc,QAApB,EAAmC;AAC1C,cAAI,KAAKF,aAAL,CAAmBZ,SAAnB,CAAJ,EAAmC;AAC/B,gBAAIe,aAAa,GAAG,KAAKlD,QAAL,CAAcmC,SAAd,CAApB,CAD+B,CAE/B;;AACA,gBAAIgB,YAAY,gBAAQD,aAAR,EAA0BD,QAA1B,CAAhB;;AACA,iBAAK/C,QAAL,CAAciC,SAAd,EAAyBgB,YAAzB;AACH,WALD,MAKO;AACHhG,YAAAA,OAAO,CAAC8B,KAAR,qBAAgCkD,SAAhC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIiB,QAAAA,iBAAiB,GAAa;AAC1B,iBAAOC,MAAM,CAACC,IAAP,CAAYvJ,GAAG,CAACqI,YAAhB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACImB,QAAAA,YAAY,GAAW;AACnB,cAAMC,IAAI,GAAG,KAAKJ,iBAAL,EAAb;AACA,cAAIK,QAAQ,GAAG,EAAf;AACAD,UAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAChBF,YAAAA,QAAQ,CAACE,GAAD,CAAR,GAAgB,KAAK3D,QAAL,CAAc2D,GAAd,CAAhB;AACH,WAFD;AAGA,iBAAOF,QAAP;AACH;AACD;AACJ;AACA;;;AACIG,QAAAA,cAAc,GAAG;AACb7J,UAAAA,GAAG,CAACqI,YAAJ,CAAiByB,KAAjB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIC,QAAAA,SAAS,CAAIC,GAAJ,EAAYC,KAAZ,EAAsC;AAAA,cAA1BA,KAA0B;AAA1BA,YAAAA,KAA0B,GAAlB,IAAIC,OAAJ,EAAkB;AAAA;;AAC3C,cAAI,OAAOF,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AACzC,mBAAOA,GAAP;AACH;;AACD,cAAIC,KAAK,CAACE,GAAN,CAAUH,GAAV,CAAJ,EAAoB;AAChB,mBAAOC,KAAK,CAACG,GAAN,CAAUJ,GAAV,CAAP;AACH;;AACD,cAAIA,GAAG,YAAYK,IAAnB,EAAyB;AACrB,mBAAO,IAAIA,IAAJ,CAASL,GAAT,CAAP;AACH;;AACD,cAAIA,GAAG,YAAYM,MAAnB,EAA2B;AACvB,mBAAO,IAAIA,MAAJ,CAAWN,GAAX,CAAP;AACH;;AACD,cAAIA,GAAG,YAAYO,GAAnB,EAAwB;AACpB,gBAAMC,UAAU,GAAG,IAAID,GAAJ,EAAnB;AACAN,YAAAA,KAAK,CAACQ,GAAN,CAAUT,GAAV,EAAeQ,UAAf;AACAR,YAAAA,GAAG,CAACL,OAAJ,CAAY,CAACe,KAAD,EAAQd,GAAR,KAAgB;AACxBY,cAAAA,UAAU,CAACC,GAAX,CAAeb,GAAf,EAAoB,KAAKG,SAAL,CAAeW,KAAf,EAAsBT,KAAtB,CAApB;AACH,aAFD;AAGA,mBAAOO,UAAP;AACH;;AACD,cAAIR,GAAG,YAAYW,GAAnB,EAAwB;AACpB,gBAAMC,UAAU,GAAG,IAAID,GAAJ,EAAnB;AACAV,YAAAA,KAAK,CAACQ,GAAN,CAAUT,GAAV,EAAeY,UAAf;AACAZ,YAAAA,GAAG,CAACL,OAAJ,CAAae,KAAD,IAAW;AACnBE,cAAAA,UAAU,CAACC,GAAX,CAAe,KAAKd,SAAL,CAAeW,KAAf,EAAsBT,KAAtB,CAAf;AACH,aAFD;AAGA,mBAAOW,UAAP;AACH;;AACD,cAAIE,KAAK,CAACC,OAAN,CAAcf,GAAd,CAAJ,EAAwB;AACpB,gBAAMgB,YAAY,GAAGhB,GAAG,CAACiB,GAAJ,CAASC,IAAD,IAAU,KAAKnB,SAAL,CAAemB,IAAf,EAAqBjB,KAArB,CAAlB,CAArB;AACAA,YAAAA,KAAK,CAACQ,GAAN,CAAUT,GAAV,EAAegB,YAAf;AACA,mBAAOA,YAAP;AACH;;AACD,cAAMG,UAAsB,GAAG,EAA/B;AACAlB,UAAAA,KAAK,CAACQ,GAAN,CAAUT,GAAV,EAAemB,UAAf;;AACA,eAAK,IAAMvB,GAAX,IAAkBI,GAAlB,EAAuB;AACnB,gBAAIV,MAAM,CAAC8B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCtB,GAArC,EAA0CJ,GAA1C,CAAJ,EAAoD;AAChDuB,cAAAA,UAAU,CAACvB,GAAD,CAAV,GAAkB,KAAKG,SAAL,CAAeC,GAAG,CAACJ,GAAD,CAAlB,EAAyBK,KAAzB,CAAlB;AACH;AACJ;;AACD,iBAAOkB,UAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,YAAY,CAAIvB,GAAJ,EAAe;AACvB,cAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AACzC,mBAAOA,GAAP;AACH;;AACD,cAAIc,KAAK,CAACC,OAAN,CAAcf,GAAd,CAAJ,EAAwB;AACpB,mBAAOA,GAAG,CAACwB,KAAJ,EAAP;AACH;;AACD,8BAAYxB,GAAZ;AACH;AAED;;;AACAyB,QAAAA,oBAAoB,CAACC,MAAD,EAA0B;AAAA,cAAzBA,MAAyB;AAAzBA,YAAAA,MAAyB,GAAP,KAAO;AAAA;;AAC1C,eAAKxJ,gBAAL,GAAwBwJ,MAAxB;AACH;AAED;;;AACAC,QAAAA,oBAAoB,GAAG;AACnB,iBAAO,KAAKzJ,gBAAZ;AACH;AAED;;;AACA0J,QAAAA,gBAAgB,CAACF,MAAD,EAA0B;AAAA,cAAzBA,MAAyB;AAAzBA,YAAAA,MAAyB,GAAP,KAAO;AAAA;;AACtC,eAAKvJ,YAAL,GAAoBuJ,MAApB;;AACA,cAAI,KAAKvJ,YAAT,EAAuB;AACnB,iBAAKM,sBAAL,CAA4BkH,OAA5B,CAAoCkC,OAAO,IAAI;AAC3CA,cAAAA,OAAO,CAACC,MAAR,GAAiB,KAAK1J,YAAtB;AACH,aAFD;AAGH,WAJD,MAIO;AACH,iBAAKK,sBAAL,CAA4BkH,OAA5B,CAAoCkC,OAAO,IAAI;AAC3CA,cAAAA,OAAO,CAACC,MAAR,GAAiB,CAAjB;AACH,aAFD;AAGH;AACJ;AACD;;;AACAC,QAAAA,gBAAgB,GAAG;AACf,iBAAO,KAAK5J,YAAZ;AACH;AACD;;;AACA6J,QAAAA,gBAAgB,CAACC,MAAD,EAAqB;AAAA,cAApBA,MAAoB;AAApBA,YAAAA,MAAoB,GAAH,CAAG;AAAA;;AACjC,eAAK7J,YAAL,GAAoB6J,MAApB;AACA,eAAKxJ,sBAAL,CAA4BkH,OAA5B,CAAoCkC,OAAO,IAAI;AAC3CA,YAAAA,OAAO,CAACC,MAAR,GAAiB,KAAK1J,YAAtB;AACH,WAFD;AAGH;AACD;;;AACA8J,QAAAA,gBAAgB,CAACR,MAAD,EAA0B;AAAA,cAAzBA,MAAyB;AAAzBA,YAAAA,MAAyB,GAAP,KAAO;AAAA;;AACtC,eAAKpJ,YAAL,GAAoBoJ,MAApB;;AACA,cAAI,KAAKpJ,YAAT,EAAuB;AACnB,iBAAKE,iBAAL,CAAuBsJ,MAAvB,GAAgC,KAAKvJ,YAArC;AACH,WAFD,MAEO;AACH,iBAAKC,iBAAL,CAAuBsJ,MAAvB,GAAgC,CAAhC;AACH;AACJ;AACD;;;AACAK,QAAAA,gBAAgB,GAAG;AACf,iBAAO,KAAK7J,YAAZ;AACH;AACD;;;AACA8J,QAAAA,gBAAgB,CAACH,MAAD,EAAqB;AAAA,cAApBA,MAAoB;AAApBA,YAAAA,MAAoB,GAAH,CAAG;AAAA;;AACjC,eAAK1J,YAAL,GAAoB0J,MAApB;AACA,eAAKzJ,iBAAL,CAAuBsJ,MAAvB,GAAgC,KAAKvJ,YAArC;AACH;AACD;;;AACA8J,QAAAA,gBAAgB,CAACX,MAAD,EAA0B;AAAA,cAAzBA,MAAyB;AAAzBA,YAAAA,MAAyB,GAAP,KAAO;AAAA;;AACtC,eAAKE,gBAAL,CAAsBF,MAAtB;AACA,eAAKQ,gBAAL,CAAsBR,MAAtB;AACH;AACD;;;AACAY,QAAAA,gBAAgB,CAACL,MAAD,EAAqB;AAAA,cAApBA,MAAoB;AAApBA,YAAAA,MAAoB,GAAH,CAAG;AAAA;;AACjC,eAAKD,gBAAL,CAAsBC,MAAtB;AACA,eAAKG,gBAAL,CAAsBH,MAAtB;AACH;AACD;;;AACMM,QAAAA,UAAU,CAACC,IAAD,EAAe;AAAA;;AAAA;AAC3B,gBAAIC,GAAG,SAAS,MAAI,CAACC,cAAL,CAAoBF,IAApB,CAAhB;AACA,gBAAI,CAAChM,OAAO,CAAC,MAAI,CAACyD,IAAN,CAAZ,EAAyB;;AACzB,gBAAI,MAAI,CAAC9B,YAAT,EAAuB;AACnB,cAAA,MAAI,CAACE,iBAAL,CAAuByJ,MAAvB,GAAgC,MAAI,CAAC1J,YAArC;AACH,aAFD,MAEO;AACH,cAAA,MAAI,CAACC,iBAAL,CAAuByJ,MAAvB,GAAgC,CAAhC;AACH;;AACD,YAAA,MAAI,CAACzJ,iBAAL,CAAuBsK,IAAvB,GAA8B,KAA9B;;AACA,YAAA,MAAI,CAACtK,iBAAL,CAAuBuK,WAAvB,CAAmCH,GAAnC,EAAwC,MAAI,CAACrK,YAA7C;AAT2B;AAU9B;AACD;;;AACMyK,QAAAA,UAAU,CAACL,IAAD,EAAeM,IAAf,EAAiC;AAAA;;AAAA;AAAA,gBAAlBA,IAAkB;AAAlBA,cAAAA,IAAkB,GAAX,MAAM,CAAG,CAAE;AAAA;;AAC7C1J,YAAAA,OAAO,CAAC2J,IAAR,CAAaP,IAAb;AAEA,gBAAIC,GAAG,SAAS,MAAI,CAACC,cAAL,CAAoBF,IAApB,CAAhB;AACA,gBAAI,CAAChM,OAAO,CAAC,MAAI,CAACyD,IAAN,CAAZ,EAAyB;AACzB6I,YAAAA,IAAI,IAAIA,IAAI,EAAZ;AACA,YAAA,MAAI,CAACtK,iBAAL,CAAuBwK,OAAvB,GAAiC,IAAjC;;AACA,YAAA,MAAI,CAACxK,iBAAL,CAAuByK,IAAvB;;AACA,YAAA,MAAI,CAACzK,iBAAL,CAAuB0K,IAAvB,GAA8BT,GAA9B;;AACA,gBAAI,MAAI,CAACnK,YAAT,EAAuB;AACnB,cAAA,MAAI,CAACE,iBAAL,CAAuBsJ,MAAvB,GAAgC,MAAI,CAACvJ,YAArC;AACH,aAFD,MAEO;AACH,cAAA,MAAI,CAACC,iBAAL,CAAuBsJ,MAAvB,GAAgC,CAAhC;AACH;;AACD,YAAA,MAAI,CAACtJ,iBAAL,CAAuBmK,IAAvB,GAA8B,IAA9B;;AACA,YAAA,MAAI,CAACnK,iBAAL,CAAuB2K,IAAvB;AAf6C;AAgBhD;AACD;;;AACMC,QAAAA,eAAe,CAACZ,IAAD,EAAe;AAAA;;AAAA;AAChC,gBAAI,MAAI,CAAC/J,sBAAL,CAA4B+J,IAA5B,CAAJ,EAAuC;AACnC,cAAA,MAAI,CAAC/J,sBAAL,CAA4B+J,IAA5B,EAAkCQ,OAAlC,GAA4C,IAA5C;;AACA,cAAA,MAAI,CAACvK,sBAAL,CAA4B+J,IAA5B,EAAkCS,IAAlC;;AACA,kBAAI,MAAI,CAAC9K,YAAT,EAAuB;AACnB,gBAAA,MAAI,CAACM,sBAAL,CAA4B+J,IAA5B,EAAkCV,MAAlC,GAA2C,MAAI,CAAC1J,YAAhD;AACH,eAFD,MAEO;AACH,gBAAA,MAAI,CAACK,sBAAL,CAA4B+J,IAA5B,EAAkCV,MAAlC,GAA2C,CAA3C;AACH;;AACD,cAAA,MAAI,CAACrJ,sBAAL,CAA4B+J,IAA5B,EAAkCG,IAAlC,GAAyC,IAAzC;;AACA,cAAA,MAAI,CAAClK,sBAAL,CAA4B+J,IAA5B,EAAkCW,IAAlC;;AACA;AACH;;AACD,gBAAIV,GAAG,SAAS,MAAI,CAACC,cAAL,CAAoBF,IAApB,CAAhB;AACA,gBAAI,CAAChM,OAAO,CAAC,MAAI,CAACyD,IAAN,CAAZ,EAAyB,OAdO,CAcD;;AAC/B,YAAA,MAAI,CAACxB,sBAAL,CAA4B+J,IAA5B,IAAoC,IAAI7M,IAAJ,CAAS6M,IAAT,EAAe9G,YAAf,CAA4B3F,WAA5B,CAApC;AACA,YAAA,MAAI,CAAC0C,sBAAL,CAA4B+J,IAA5B,EAAkCvI,IAAlC,CAAuC0B,MAAvC,GAAgD,MAAI,CAAC1B,IAArD;AACA,YAAA,MAAI,CAACxB,sBAAL,CAA4B+J,IAA5B,EAAkCU,IAAlC,GAAyCT,GAAzC;AACA,YAAA,MAAI,CAAChK,sBAAL,CAA4B+J,IAA5B,EAAkCQ,OAAlC,GAA4C,IAA5C;;AACA,YAAA,MAAI,CAACvK,sBAAL,CAA4B+J,IAA5B,EAAkCS,IAAlC;;AACA,gBAAI,MAAI,CAAC9K,YAAT,EAAuB;AACnB,cAAA,MAAI,CAACM,sBAAL,CAA4B+J,IAA5B,EAAkCV,MAAlC,GAA2C,MAAI,CAAC1J,YAAhD;AACH,aAFD,MAEO;AACH,cAAA,MAAI,CAACK,sBAAL,CAA4B+J,IAA5B,EAAkCV,MAAlC,GAA2C,CAA3C;AACH;;AACD,YAAA,MAAI,CAACrJ,sBAAL,CAA4B+J,IAA5B,EAAkCG,IAAlC,GAAyC,IAAzC;;AACA,YAAA,MAAI,CAAClK,sBAAL,CAA4B+J,IAA5B,EAAkCW,IAAlC;AA1BgC;AA2BnC;AACD;;;AACAE,QAAAA,WAAW,GAAG;AACV,eAAK7K,iBAAL,CAAuB8K,KAAvB;AACH;AACD;;;AACAC,QAAAA,YAAY,GAAG;AACX,eAAK/K,iBAAL,CAAuB2K,IAAvB;AACH;AACD;;;AACAK,QAAAA,UAAU,GAAG;AACT,eAAKhL,iBAAL,CAAuByK,IAAvB;AACH;AACD;;;AACAQ,QAAAA,gBAAgB,CAACjB,IAAD,EAAe;AAC3B,cAAI,KAAK/J,sBAAL,CAA4B+J,IAA5B,CAAJ,EAAuC,KAAK/J,sBAAL,CAA4B+J,IAA5B,EAAkCc,KAAlC;AAC1C;AACD;;;AACAI,QAAAA,iBAAiB,CAAClB,IAAD,EAAe;AAC5B,cAAI,KAAK/J,sBAAL,CAA4B+J,IAA5B,CAAJ,EAAuC,KAAK/J,sBAAL,CAA4B+J,IAA5B,EAAkCW,IAAlC;AAC1C;AACD;;;AACAQ,QAAAA,eAAe,CAACnB,IAAD,EAAe;AAC1B,cAAI,KAAK/J,sBAAL,CAA4B+J,IAA5B,CAAJ,EAAuC,KAAK/J,sBAAL,CAA4B+J,IAA5B,EAAkCS,IAAlC;AAC1C;AACD;;;AACAW,QAAAA,mBAAmB,GAAG;AAClB,cAAI,KAAKvL,iBAAT,EAA4B,KAAKA,iBAAL,CAAuB4K,IAAvB;;AAC5B,eAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpL,sBAAL,CAA4BqL,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AACzD,iBAAKpL,sBAAL,CAA4BoL,CAA5B,EAA+BZ,IAA/B;AACH;AACJ;AAED;AACJ;AACA;;;AACUc,QAAAA,sBAAsB,CAACvB,IAAD,EAAqC;AAAA;AAC7D,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCpH,gBAAAA,YAAY,CAAC2N,UAAb,CAAoCzB,IAApC,EAA0C;AAAE0B,kBAAAA,GAAG,EAAE;AAAP,iBAA1C,EAA2D,CAACC,GAAD,EAAM1B,GAAN,KAA0B;AACjF,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,mBAAd,EAAmCiJ,GAAnC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,sBAAMC,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,8BAA+BmJ,IAA/B,iDAAiD6B,UAAjD;AACA,sBAAMC,OAAO,GAAG,IAAI/N,SAAJ,EAAhB;AACA+N,kBAAAA,OAAO,CAACC,KAAR,GAAgB9B,GAAhB;AACA,sBAAM+B,YAAY,GAAG,IAAItO,WAAJ,EAArB;AACAsO,kBAAAA,YAAY,CAACC,OAAb,GAAuBH,OAAvB;AACA7G,kBAAAA,OAAO,CAAC+G,YAAD,CAAP;AACA;AACH,iBAfD;AAgBH,eAjBM,CAAP;AAkBH,aAnBD,CAmBE,OAAOnH,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,8BAA+BsH,IAA/B,uBAA2CnF,KAA3C;AACA,oBAAMA,KAAN;AACH;AAxB4D;AAyBhE;AACD;AACJ;AACA;;;AACUqH,QAAAA,uBAAuB,CAAClC,IAAD,EAAqC;AAAA;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCpH,gBAAAA,YAAY,CAAC2N,UAAb,CAAoCzB,IAApC,EAA0C,CAAC2B,GAAD,EAAM1B,GAAN,KAA0B;AAChE,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,mBAAd,EAAmCiJ,GAAnC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,sBAAMC,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,8BAA+BmJ,IAA/B,iDAAiD6B,UAAjD;AACA,sBAAMC,OAAO,GAAG,IAAI/N,SAAJ,EAAhB;AACA+N,kBAAAA,OAAO,CAACC,KAAR,GAAgB9B,GAAhB;AACA,sBAAM+B,YAAY,GAAG,IAAItO,WAAJ,EAArB;AACAsO,kBAAAA,YAAY,CAACC,OAAb,GAAuBH,OAAvB;AACA7G,kBAAAA,OAAO,CAAC+G,YAAD,CAAP;AACA;AACH,iBAfD;AAgBH,eAjBM,CAAP;AAkBH,aAnBD,CAmBE,OAAOnH,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,8BAA+BsH,IAA/B,uBAA2CnF,KAA3C;AACA,oBAAMA,KAAN;AACH;AAhD6D;AAiDjE;AACD;AACJ;AACA;;;AACUsH,QAAAA,iBAAiB,CAACnC,IAAD,EAAmC;AAAA;AACtD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCpH,gBAAAA,YAAY,CAAC2N,UAAb,CAAwBzB,IAAxB,EAA8B,CAAC2B,GAAD,EAAM1B,GAAN,KAAyB;AACnD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,kBAAd,EAAkCiJ,GAAlC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,sBAAMC,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,6BAA8BmJ,IAA9B,iDAAgD6B,UAAhD;AACA5G,kBAAAA,OAAO,CAACgF,GAAD,CAAP;AACA;AACH,iBAXD;AAYH,eAbM,CAAP;AAcH,aAfD,CAeE,OAAOpF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,6BAA8BsH,IAA9B,uBAA0CnF,KAA1C;AACA,oBAAMA,KAAN;AACH;AApBqD;AAqBzD;;AAEKtB,QAAAA,WAAW,CAAC6I,WAAD,EAAoC;AAAA;AACjD,gBAAMZ,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCpH,gBAAAA,YAAY,CAACuO,UAAb,CAAwBD,WAAxB,EAAqC,CAACT,GAAD,EAAM1B,GAAN,KAAc;AAC/C,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,0BAA2B0J,WAA3B,uBAA8CT,GAA9C;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,sBAAMC,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,0BAA2BuL,WAA3B,iDAAoDP,UAApD;AACA5G,kBAAAA,OAAO,CAACgF,GAAD,CAAP;AACA;AACH,iBAXD;AAYH,eAbM,CAAP;AAcH,aAfD,CAeE,OAAOpF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,0BAA2B0J,WAA3B,uBAA8CvH,KAA9C;AACA,oBAAMA,KAAN;AACH;AApBgD;AAqBpD;AACD;;;AACMyH,QAAAA,QAAQ,CAACtC,IAAD,EAAeuC,IAAf,EAAwC;AAAA;;AAAA;AAClD,gBAAMf,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,MAAI,CAAClG,OAAL,CAAawN,OAAb,CAAqBxC,IAArB,EAA2BuC,IAA3B,EAAiC,CAACE,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,KAA2B;AACxD,sBAAMC,UAAkB,GAAG,CAACH,QAAQ,GAAGC,KAAZ,EAAmB5L,OAAnB,CAA2B,CAA3B,CAA3B;AACAF,kBAAAA,OAAO,CAACC,KAAR,CAAc+L,UAAd;AACH,iBAHD,EAGG,CAACjB,GAAD,EAAM1B,GAAN,KAAmB;AAClB,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,YAAd,EAA4BiJ,GAA5B;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,sBAAMC,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,uBAAwBmJ,IAAxB,iDAA0C6B,UAA1C;AACA5G,kBAAAA,OAAO,CAACgF,GAAD,CAAP;AACA;AACH,iBAdD;AAeH,eAhBM,CAAP;AAiBH,aAlBD,CAkBE,OAAOpF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,uBAAwBsH,IAAxB,uBAAoCnF,KAApC;AACA,oBAAMA,KAAN;AACH;AAvBiD;AAwBrD;;AAEKgI,QAAAA,UAAU,CAAC7C,IAAD,EAAe8C,YAAf,EAA0CC,WAA1C,EAAqF;AAAA;;AAAA;AAAA,gBAA3CA,WAA2C;AAA3CA,cAAAA,WAA2C,GAAtB,IAAsB;AAAA;;AACjG,gBAAI,MAAI,CAAC/N,OAAL,IAAgB,IAApB,EAA0B;AACtB,cAAA,MAAI,CAACA,OAAL,SAAqB,MAAI,CAACuE,WAAL,CAAiB,MAAjB,CAArB;AACH;;AACD,gBAAI,MAAI,CAACtE,YAAL,CAAkB+K,IAAlB,CAAJ,EAA6B;AACzBpJ,cAAAA,OAAO,CAACC,KAAR,YAAuBmJ,IAAvB;AACA,qBAAO,MAAI,CAAC/K,YAAL,CAAkB+K,IAAlB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,MAAI,CAAClG,OAAL,CAAagO,SAAb,CAAuBhD,IAAvB,EAA6B,IAA7B,EAAmC,CAACiD,QAAD,EAAWC,KAAX,EAAkBxE,IAAlB,KAA2B;AAC1D,sBAAIyE,QAAgB,GAAGC,MAAM,CAAC,CAACH,QAAQ,GAAGC,KAAZ,EAAmBpM,OAAnB,CAA2B,CAA3B,CAAD,CAA7B;AACAgM,kBAAAA,YAAY,CAACO,QAAb,GAAwBF,QAAxB;AACA,sBAAIjF,KAAa,GAAGoF,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAG,GAAtB,CAApB;;AACA,sBAAIJ,WAAW,IAAI,IAAnB,EAAyB;AACrBA,oBAAAA,WAAW,CAACS,MAAZ,GAAqBtF,KAAK,GAAG,GAA7B;AACH;;AACDtH,kBAAAA,OAAO,CAACC,KAAR,uCAA8BoM,QAA9B,SAA0CC,KAA1C,UAAoDhF,KAApD;AACH,iBARD,EAQG,CAACyD,GAAD,EAAM1B,GAAN,KAA0B;AACzB,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,cAAd,EAA8BiJ,GAA9B;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,MAAI,CAAC1M,YAAL,CAAkB+K,IAAlB,IAA0BC,GAA1B;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,yBAA0BmJ,IAA1B,iDAA4C6B,UAA5C;AACA,kBAAA,MAAI,CAAC4B,kBAAL,GAA0BzD,IAA1B;AACA/E,kBAAAA,OAAO,CAAC,MAAI,CAAChG,YAAL,CAAkB+K,IAAlB,CAAD,CAAP;AACA;AACH,iBArBD;AAsBH,eAvBM,CAAP;AAwBH,aAzBD,CAyBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,yBAA0BsH,IAA1B,uBAAsCnF,KAAtC;AACA,oBAAMA,KAAN;AACH;AArCgG;AAsCpG;;AAEK6I,QAAAA,WAAW,CAAC1D,IAAD,EAAgC;AAAA;;AAAA;AAC7C,gBAAI,MAAI,CAAChL,OAAL,IAAgB,IAApB,EAA0B;AACtB,cAAA,MAAI,CAACA,OAAL,SAAqB,MAAI,CAACuE,WAAL,CAAiB,MAAjB,CAArB;AACH;;AACD,gBAAI,MAAI,CAACrE,aAAL,CAAmB8K,IAAnB,CAAJ,EAA8B;AAC1BpJ,cAAAA,OAAO,CAACC,KAAR,aAAwBmJ,IAAxB;AACA,qBAAO,MAAI,CAAC9K,aAAL,CAAmB8K,IAAnB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,MAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB5M,MAAxB,EAAgC,CAACuO,GAAD,EAAM1B,GAAN,KAAsB;AAClD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,0BAA2BsH,IAA3B,uBAAuC2B,GAAvC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,MAAI,CAACzM,aAAL,CAAmB8K,IAAnB,IAA2BC,GAA3B;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,0BAA2BmJ,IAA3B,iDAA6C6B,UAA7C;AACA5G,kBAAAA,OAAO,CAAC,MAAI,CAAC/F,aAAL,CAAmB8K,IAAnB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,0BAA2BsH,IAA3B,uBAAuCnF,KAAvC;AACA,oBAAMA,KAAN;AACH;AA5B4C;AA6BhD;;AACK+I,QAAAA,gBAAgB,CAAC5D,IAAD,EAAqC;AAAA;;AAAA;AACvDA,YAAAA,IAAI,GAAGA,IAAI,GAAG,cAAd;;AACA,gBAAI,OAAI,CAAC7K,kBAAL,CAAwB6K,IAAxB,CAAJ,EAAmC;AAC/BpJ,cAAAA,OAAO,CAACC,KAAR,kBAA6BmJ,IAA7B;AACA,qBAAO,OAAI,CAAC7K,kBAAL,CAAwB6K,IAAxB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwBtM,WAAxB,EAAqC,CAACiO,GAAD,EAAM1B,GAAN,KAA2B;AAC5D,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,+BAAgCsH,IAAhC,uBAA4C2B,GAA5C;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACxM,kBAAL,CAAwB6K,IAAxB,IAAgCC,GAAhC;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,+BAAgCmJ,IAAhC,iDAAkD6B,UAAlD;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAAC9F,kBAAL,CAAwB6K,IAAxB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,+BAAgCsH,IAAhC,uBAA4CnF,KAA5C;AACA,oBAAMA,KAAN;AACH;AA1BsD;AA2B1D;;AACKgJ,QAAAA,YAAY,CAAC7D,IAAD,EAAmC;AAAA;;AAAA;AACjD,gBAAI,OAAI,CAAC5K,gBAAL,CAAsB4K,IAAtB,CAAJ,EAAiC;AAC7BpJ,cAAAA,OAAO,CAACC,KAAR,cAAyBmJ,IAAzB;AACA,qBAAO,OAAI,CAAC5K,gBAAL,CAAsB4K,IAAtB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwBjM,SAAxB,EAAmC,CAAC4N,GAAD,EAAM1B,GAAN,KAAyB;AACxD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,2BAA4BsH,IAA5B,uBAAwC2B,GAAxC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACvM,gBAAL,CAAsB4K,IAAtB,IAA8BC,GAA9B;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,2BAA4BmJ,IAA5B,iDAA8C6B,UAA9C;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAAC7F,gBAAL,CAAsB4K,IAAtB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,2BAA4BsH,IAA5B,uBAAwCnF,KAAxC;AACA,oBAAMA,KAAN;AACH;AAzBgD;AA0BpD;;AACKqF,QAAAA,cAAc,CAACF,IAAD,EAAmC;AAAA;;AAAA;AACnD,gBAAI,OAAI,CAAC3K,gBAAL,CAAsB2K,IAAtB,CAAJ,EAAiC;AAC7BpJ,cAAAA,OAAO,CAACC,KAAR,YAAuBmJ,IAAvB;AACA,qBAAO,OAAI,CAAC3K,gBAAL,CAAsB2K,IAAtB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB3M,SAAxB,EAAmC,CAACsO,GAAD,EAAM1B,GAAN,KAAyB;AACxD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,cAAd,EAA8BiJ,GAA9B;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACtM,gBAAL,CAAsB2K,IAAtB,IAA8BC,GAA9B;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,yBAA0BmJ,IAA1B,iDAA4C6B,UAA5C;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAAC5F,gBAAL,CAAsB2K,IAAtB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,yBAA0BsH,IAA1B,uBAAsCnF,KAAtC;AACA,oBAAMA,KAAN;AACH;AAzBkD;AA0BtD;;AACKiJ,QAAAA,aAAa,CAAC9D,IAAD,EAAkC;AAAA;;AAAA;AACjD,gBAAI,OAAI,CAAC1K,eAAL,CAAqB0K,IAArB,CAAJ,EAAgC;AAC5BpJ,cAAAA,OAAO,CAACC,KAAR,eAA0BmJ,IAA1B;AACA,qBAAO,OAAI,CAAC1K,eAAL,CAAqB0K,IAArB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB/L,QAAxB,EAAkC,CAAC0N,GAAD,EAAM1B,GAAN,KAAwB;AACtD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,iBAAd,EAAiCiJ,GAAjC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACrM,eAAL,CAAqB0K,IAArB,IAA6BC,GAA7B;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,4BAA6BmJ,IAA7B,iDAA+C6B,UAA/C;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAAC3F,eAAL,CAAqB0K,IAArB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,4BAA6BsH,IAA7B,uBAAyCnF,KAAzC;AACA,oBAAMA,KAAN;AACH;AAzBgD;AA0BpD;;AACKkJ,QAAAA,SAAS,CAAC/D,IAAD,EAAmC;AAAA;;AAAA;AAC9C,gBAAI,OAAI,CAACzK,WAAL,CAAiByK,IAAjB,CAAJ,EAA4B;AACxBpJ,cAAAA,OAAO,CAACC,KAAR,WAAsBmJ,IAAtB;AACA,qBAAO,OAAI,CAACzK,WAAL,CAAiByK,IAAjB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB9L,SAAxB,EAAmC,CAACyN,GAAD,EAAM1B,GAAN,KAAyB;AACxD,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,aAAd,EAA6BiJ,GAA7B;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACpM,WAAL,CAAiByK,IAAjB,IAAyBC,GAAG,CAAC7F,IAA7B;AACA,sBAAMwH,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,wBAAyBmJ,IAAzB,iDAA2C6B,UAA3C;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAAC1F,WAAL,CAAiByK,IAAjB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,wBAAyBsH,IAAzB,uBAAqCnF,KAArC;AACA,oBAAMA,KAAN;AACH;AAzB6C;AA0BjD;;AACKmJ,QAAAA,kBAAkB,CAAChE,IAAD,EAAuC;AAAA;;AAAA;AAC3D,gBAAI,OAAI,CAACxK,oBAAL,CAA0BwK,IAA1B,CAAJ,EAAqC;AACjCpJ,cAAAA,OAAO,CAACC,KAAR,oBAA+BmJ,IAA/B;AACA,qBAAO,OAAI,CAACxK,oBAAL,CAA0BwK,IAA1B,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB5L,aAAxB,EAAuC,CAACuN,GAAD,EAAM1B,GAAN,KAA6B;AAChE,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,sBAAd,EAAsCiJ,GAAtC;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAACnM,oBAAL,CAA0BwK,IAA1B,IAAkCC,GAAlC;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,iCAAkCmJ,IAAlC,iDAAoD6B,UAApD;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAACzF,oBAAL,CAA0BwK,IAA1B,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,iCAAkCsH,IAAlC,uBAA8CnF,KAA9C;AACA,oBAAMA,KAAN;AACH;AAzB0D;AA0B9D;;AACKoJ,QAAAA,SAAS,CAACjE,IAAD,EAA8B;AAAA;;AAAA;AACzC,gBAAI,OAAI,CAACvK,WAAL,CAAiBuK,IAAjB,CAAJ,EAA4B;AACxBpJ,cAAAA,OAAO,CAACC,KAAR,WAAsBmJ,IAAtB;AACA,qBAAO,OAAI,CAACvK,WAAL,CAAiBuK,IAAjB,CAAP;AACH;;AACD,gBAAMwB,UAAU,GAAG3D,IAAI,CAACpH,GAAL,EAAnB;;AACA,gBAAI;AACA,qBAAO,IAAIuE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAA,OAAI,CAAClG,OAAL,CAAa2O,IAAb,CAAkB3D,IAAlB,EAAwB7L,IAAxB,EAA8B,CAACwN,GAAD,EAAM1B,GAAN,KAAoB;AAC9C,sBAAI0B,GAAJ,EAAS;AACL/K,oBAAAA,OAAO,CAAC8B,KAAR,CAAc,aAAd,EAA6BiJ,GAA7B;AACAzG,oBAAAA,MAAM,CAACyG,GAAD,CAAN;AACA;AACH;;AACD,kBAAA,OAAI,CAAClM,WAAL,CAAiBuK,IAAjB,IAAyBC,GAAzB;AACA,sBAAM2B,WAAW,GAAG/D,IAAI,CAACpH,GAAL,EAApB;AACA,sBAAMoL,UAAU,GAAGD,WAAW,GAAGJ,UAAjC;AACA5K,kBAAAA,OAAO,CAACC,KAAR,wBAAyBmJ,IAAzB,iDAA2C6B,UAA3C;AACA5G,kBAAAA,OAAO,CAAC,OAAI,CAACxF,WAAL,CAAiBuK,IAAjB,CAAD,CAAP;AACA;AACH,iBAZD;AAaH,eAdM,CAAP;AAeH,aAhBD,CAgBE,OAAOnF,KAAP,EAAc;AACZjE,cAAAA,OAAO,CAAC8B,KAAR,wBAAyBsH,IAAzB,uBAAqCnF,KAArC;AACA,oBAAMA,KAAN;AACH;AAzBwC;AA0B5C;AAED;;;AACMqJ,QAAAA,gBAAgB,CAAClE,IAAD,EAA8B;AAAA;;AAAA;AAChD,gBAAI,OAAI,CAAC/K,YAAL,CAAkB+K,IAAlB,CAAJ,EAA6B;AACzB,qBAAO,OAAI,CAAC/K,YAAL,CAAkB+K,IAAlB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,yBAA0BmJ,IAA1B;AACH;;AACD,gBAAI,OAAI,CAAC9K,aAAL,CAAmB8K,IAAnB,CAAJ,EAA8B;AAC1B,qBAAO,OAAI,CAAC9K,aAAL,CAAmB8K,IAAnB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,0BAA2BmJ,IAA3B;AACH;;AACD,gBAAI,OAAI,CAAC7K,kBAAL,CAAwB6K,IAAxB,CAAJ,EAAmC;AAC/B,qBAAO,OAAI,CAAC7K,kBAAL,CAAwB6K,IAAxB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,+BAAgCmJ,IAAhC;AACH;;AACD,gBAAI,OAAI,CAAC5K,gBAAL,CAAsB4K,IAAtB,CAAJ,EAAiC;AAC7B,qBAAO,OAAI,CAAC5K,gBAAL,CAAsB4K,IAAtB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,2BAA4BmJ,IAA5B;AACH;;AACD,gBAAI,OAAI,CAAC3K,gBAAL,CAAsB2K,IAAtB,CAAJ,EAAiC;AAC7B,qBAAO,OAAI,CAAC3K,gBAAL,CAAsB2K,IAAtB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,yBAA0BmJ,IAA1B;AACH;;AACD,gBAAI,OAAI,CAAC1K,eAAL,CAAqB0K,IAArB,CAAJ,EAAgC;AAC5B,qBAAO,OAAI,CAAC1K,eAAL,CAAqB0K,IAArB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,4BAA6BmJ,IAA7B;AACH;;AACD,gBAAI,OAAI,CAACzK,WAAL,CAAiByK,IAAjB,CAAJ,EAA4B;AACxB,qBAAO,OAAI,CAACzK,WAAL,CAAiByK,IAAjB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,wBAAyBmJ,IAAzB;AACH;;AACD,gBAAI,OAAI,CAACxK,oBAAL,CAA0BwK,IAA1B,CAAJ,EAAqC;AACjC,qBAAO,OAAI,CAACxK,oBAAL,CAA0BwK,IAA1B,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,iCAAkCmJ,IAAlC;AACH;;AACD,gBAAI,OAAI,CAACvK,WAAL,CAAiBuK,IAAjB,CAAJ,EAA4B;AACxB,qBAAO,OAAI,CAACvK,WAAL,CAAiBuK,IAAjB,CAAP;AACApJ,cAAAA,OAAO,CAACC,KAAR,wBAAyBmJ,IAAzB;AACH;AApC+C;AAqCnD;AACD;;;AACMmE,QAAAA,oBAAoB,GAAkB;AAAA;;AAAA;AACxC,YAAA,OAAI,CAAClP,YAAL,GAAoB,EAApB;AACA,YAAA,OAAI,CAACC,aAAL,GAAqB,EAArB;AACA,YAAA,OAAI,CAACC,kBAAL,GAA0B,EAA1B;AACA,YAAA,OAAI,CAACC,gBAAL,GAAwB,EAAxB;AACA,YAAA,OAAI,CAACC,gBAAL,GAAwB,EAAxB;AACA,YAAA,OAAI,CAACC,eAAL,GAAuB,EAAvB;AACA,YAAA,OAAI,CAACC,WAAL,GAAmB,EAAnB;AACA,YAAA,OAAI,CAACC,oBAAL,GAA4B,EAA5B;AACA,YAAA,OAAI,CAACC,WAAL,GAAmB,EAAnB;AACAmB,YAAAA,OAAO,CAACC,KAAR;AAVwC;AAW3C;AAED;;;AACAuN,QAAAA,sBAAsB,GAAG;AACrB,cAAI,CAACpL,QAAQ,CAACqL,iBAAd,EAAiC;AAC7BrL,YAAAA,QAAQ,CAACsL,eAAT,CAAyBC,iBAAzB;AACA3N,YAAAA,OAAO,CAACC,KAAR;AACH,WAHD,MAGO;AACHmC,YAAAA,QAAQ,CAACwL,cAAT;AACA5N,YAAAA,OAAO,CAACC,KAAR;AACH;AACJ;AAED;;;AACA4N,QAAAA,gBAAgB,CAACC,KAAD,EAAoB;AAAA,cAAnBA,KAAmB;AAAnBA,YAAAA,KAAmB,GAAH,CAAG;AAAA;;AAChC1L,UAAAA,QAAQ,CAACyB,IAAT,CAAckK,KAAd,CAAoBC,SAApB,cAAyCF,KAAzC;AACH;AAED;;;AACAG,QAAAA,YAAY,GAAG;AACXjR,UAAAA,IAAI,CAACkR,OAAL;AACH;AACD;;;AACAC,QAAAA,WAAW,GAAG;AACVnR,UAAAA,IAAI,CAACoR,MAAL;AACH;AACD;;;AACAC,QAAAA,UAAU,GAAG;AACTrR,UAAAA,IAAI,CAACkN,KAAL;AACH;AACD;;;AACAoE,QAAAA,QAAQ,GAAG;AACPtR,UAAAA,IAAI,CAACuR,GAAL;AACH;AACD;;;AACAzN,QAAAA,kBAAkB,CAACtB,SAAD,EAAyB;AAAA,cAAxBA,SAAwB;AAAxBA,YAAAA,SAAwB,GAAJ,EAAI;AAAA;;AACvCxC,UAAAA,IAAI,CAACwR,SAAL,GAAiBhP,SAAjB;AACH;AAGD;;;AACAiP,QAAAA,YAAY,CAACC,UAAD,EAAoB;AAC5BhS,UAAAA,QAAQ,CAACiS,iBAAT,CAA2BD,UAA3B;AACH;AACD;;;AACAE,QAAAA,eAAe,GAAG;AACdlS,UAAAA,QAAQ,CAAC0R,MAAT;AACH;AACD;;;AACAS,QAAAA,cAAc,GAAG;AACbnS,UAAAA,QAAQ,CAACwN,KAAT;AACH;AACD;;;AACA4E,QAAAA,YAAY,GAAG,CACX;AACH;AACD;;;AACAlO,QAAAA,2BAA2B,CAACmO,QAAD,EAAiB;AACxCrS,UAAAA,QAAQ,CAACsS,kBAAT,CAA4BD,QAA5B;AACH;AACD;;;AACAE,QAAAA,8BAA8B,CAACF,QAAD,EAAiB;AAC3CrS,UAAAA,QAAQ,CAACwS,qBAAT,CAA+BH,QAA/B;AACH;AACD;;;AACAhO,QAAAA,gCAAgC,CAACoO,KAAD,EAAoB;AAAA,cAAnBA,KAAmB;AAAnBA,YAAAA,KAAmB,GAAH,CAAG;AAAA;;AAChDzS,UAAAA,QAAQ,CAAC0S,YAAT,GAAwBC,YAAxB,CAAqCF,KAArC;AACH;AACD;;;AACAG,QAAAA,gCAAgC,GAAW;AACvC,iBAAO5S,QAAQ,CAAC0S,YAAT,GAAwBG,YAAxB,EAAP;AACH;AAED;;;AACA7M,QAAAA,oBAAoB,GAAG;AACnB1C,UAAAA,OAAO,CAACC,KAAR,wEAA4BrD,GAAG,CAAC4S,QAAhC;AACAxP,UAAAA,OAAO,CAACC,KAAR,kEAA2BrD,GAAG,CAAC6S,SAA/B;AACAzP,UAAAA,OAAO,CAACC,KAAR,0FAA+BrD,GAAG,CAAC8S,QAAnC;AACA1P,UAAAA,OAAO,CAACC,KAAR,0FAA+BrD,GAAG,CAAC+S,cAAnC;AACA3P,UAAAA,OAAO,CAACC,KAAR,0EAA8BrD,GAAG,CAACgT,IAAlC;AACA,eAAKC,qBAAL;AACH;AAGD;;;AACAC,QAAAA,aAAa,GAAW;AACpB,iBAAO7I,IAAI,CAACpH,GAAL,EAAP;AACH;AACD;;;AACAkQ,QAAAA,kBAAkB,GAAW;AACzB,iBAAOrD,IAAI,CAACC,KAAL,CAAW1F,IAAI,CAACpH,GAAL,KAAa,IAAxB,CAAP,CADyB,CACa;AACzC;AACD;;;AACAmQ,QAAAA,uBAAuB,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAA2B;AAC9C,cAAMC,IAAI,GAAG,IAAInJ,IAAJ,CAASgJ,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0BC,GAA1B,CAAb,CAD8C,CACD;;AAC7C,iBAAOC,IAAI,CAACC,OAAL,EAAP,CAF8C,CAEvB;AAC1B;AACD;;;AACAC,QAAAA,mBAAmB,CAACC,eAAD,EAA0BC,eAA1B,EAA2D;AAC1E,iBAAOA,eAAe,GAAGD,eAAzB,CAD0E,CAChC;AAC7C;AACD;;;AACAE,QAAAA,gBAAgB,GAAW;AACvB,iBAAO,IAAIxJ,IAAJ,GAAWyJ,WAAX,EAAP,CADuB,CACU;AACpC;AACD;;;AACAC,QAAAA,iBAAiB,GAAW;AACxB,iBAAO,IAAI1J,IAAJ,GAAW2J,QAAX,KAAwB,CAA/B,CADwB,CACU;AACrC;AACD;;;AACAC,QAAAA,gBAAgB,GAAW;AACvB,iBAAO,IAAI5J,IAAJ,GAAW6J,OAAX,EAAP;AACH;AACD;;;AACAC,QAAAA,gBAAgB,GAAW;AACvB,iBAAO,IAAI9J,IAAJ,GAAW+J,QAAX,EAAP;AACH;AACD;;;AACAC,QAAAA,kBAAkB,GAAW;AACzB,iBAAO,IAAIhK,IAAJ,GAAWiK,UAAX,EAAP;AACH;AACD;;;AACAC,QAAAA,kBAAkB,GAAW;AACzB,iBAAO,IAAIlK,IAAJ,GAAWmK,UAAX,EAAP;AACH;AACD;;;AACAC,QAAAA,uBAAuB,GAAW;AAC9B,iBAAO,IAAIpK,IAAJ,GAAWqK,eAAX,EAAP;AACH;AACD;;;AACAC,QAAAA,eAAe,GAAW;AACtB,cAAI,IAAItK,IAAJ,GAAWuK,MAAX,MAAuB,CAA3B,EAA8B,OAAO,CAAP;AAC9B,iBAAO,IAAIvK,IAAJ,GAAWuK,MAAX,EAAP;AACH;AACD;;;AACA3B,QAAAA,qBAAqB,GASnB;AACE,cAAM4B,YAAY,GAAG;AACjBC,YAAAA,IAAI,EAAE,KAAKjB,gBAAL,EADW;AAEjBkB,YAAAA,KAAK,EAAE,KAAKhB,iBAAL,EAFU;AAGjB1J,YAAAA,IAAI,EAAE,KAAK4J,gBAAL,EAHW;AAIjBe,YAAAA,IAAI,EAAE,KAAKb,gBAAL,EAJW;AAKjBc,YAAAA,MAAM,EAAE,KAAKZ,kBAAL,EALS;AAMjBa,YAAAA,MAAM,EAAE,KAAKX,kBAAL,EANS;AAOjBY,YAAAA,WAAW,EAAE,KAAKV,uBAAL,EAPI;AAQjBW,YAAAA,GAAG,EAAE,KAAKT,eAAL;AARY,WAArB;AAUAvR,UAAAA,OAAO,CAACC,KAAR,CAAiBwR,YAAY,CAACC,IAA9B,cAAsCD,YAAY,CAACE,KAAnD,cAA4DF,YAAY,CAACxK,IAAzE,6BAAsFwK,YAAY,CAACO,GAAnG,WAA4GP,YAAY,CAACG,IAAzH,cAAiIH,YAAY,CAACI,MAA9I,cAAwJJ,YAAY,CAACK,MAArK,cAA+KL,YAAY,CAACM,WAA5L;AACA,iBAAON,YAAP;AACH;;AAzwCuC,O,UAEjB1P,Q,GAAW,IAAI9D,OAAJ,E;;;;;iBAmDE,M;;;;;;;iBAIH,M;;;;;;;iBAOI,I","sourcesContent":["import { _decorator, Component, Node, Prefab, AudioClip, director, resources, AudioSource, sys, Label, find, CCBoolean, CCInteger, v3, Vec3, debug, PhysicsSystem2D, Sprite, color, LabelOutline, log, SpriteFrame, EPhysics2DDrawFlags, v2, SpriteAtlas, view, game, Game, Vec2, assetManager, Texture2D, isValid, macro, Material, JsonAsset, Font, AnimationClip, AssetManager, Constructor, ImageAsset, Scene, UITransform, SceneAsset, ProgressBar } from 'cc';\nimport { Tool_Event } from './Tool_Event';\nimport { Tool_Other } from './Tool_Other';\nimport { Tool_UI } from './Tool_UI';\nimport { PlatformApi } from '../Other/SDK/PlatformApi';\n\nconst { ccclass, property } = _decorator;\n\n/**游戏模式 */\nexport enum Game_Mode {\n    /**成语 */\n    Idiom,\n    /**影视 */\n    Film,\n    /**普通 */\n    Normal,\n    /**无尽 */\n    Endless,\n    /**教程 */\n    Tutorial,\n}\n\n/**场景改变类型 */\nexport enum Scene_Change_Type {\n    /**自动 */\n    Automatic,\n    /**手动 */\n    Manual,\n    /**结束 */\n    Finish,\n}\n\nexport interface Interface {\n    Interface: number,\n}\n\nexport type Type = {\n    Type: number;\n}\n\n\n@ccclass('Resoure_Data')\nexport class Resoure_Data extends Component {\n\n    public static readonly instance = new Resoure_Data();\n\n    //--------------------------------------------------------------------------------------------\n\n    /**缓存 Bundles */\n    private Bundles: AssetManager.Bundle = null;\n    /**缓存 Scene */\n    private _Cache_Scene: Object = {};\n    /**缓存 Prefab */\n    private _Cache_Prefab: Object = {};\n    /**缓存 SpriteFrame */\n    private _Cache_SpriteFrame: Object = {};\n    /**缓存 Texture2D */\n    private _Cache_Texture2D: Object = {};\n    /**缓存 AudioClip */\n    private _Cache_AudioClip: Object = {};\n    /**缓存 Material */\n    private _Cache_Material: Object = {};\n    /**缓存 Json */\n    private _Cache_Json: Object = {};\n    /**缓存 AnimationClip */\n    private _Cache_AnimationClip: Object = {};\n    /**缓存 Font */\n    private _Cache_Font: Object = {};\n\n    //--------------------------------------------------------------------------------------------\n\n    /**震动开关 */\n    private Vibration_Switch: boolean = true;\n\n    /**声音开关 */\n    private Sound_Switch: boolean = true;\n    /**声音音量 */\n    private Sound_Volume: number = 1;\n    /**声音音频组件 */\n    private Sound_AudioSource: AudioSource = null;\n\n    /**音乐开关 */\n    private Music_Switch: boolean = true;\n    /**音乐音量 */\n    private Music_Volume: number = 1;\n    /**音乐音频组件 */\n    private Music_AudioSource: AudioSource = null;\n\n    /**长音效音频组件(可以手动停止的音效) */\n    private Sound_Long_AudioSource: AudioSource[] = [];\n\n    //--------------------------------------------------------------------------------------------\n\n    /**场景名字_当前 */\n    @property({ tooltip: \"场景名字_当前\" })\n    public Scene_Name_Current: string = \"Main\";\n\n    /**场景名字_下个 */\n    @property({ tooltip: \"场景名字_下个\" })\n    public Scene_Name_Next: string = \"Game\";\n\n    /**是否首次启动 */\n    private Is_First_Start: boolean = true;\n\n    /**@param {CCBoolean} 是否竖屏*/\n    @property(CCBoolean)\n    public Is_Vertical_Screen: boolean = true;\n\n    //--------------------------------------------------------------------------------------------\n\n    /**游戏模式 */\n    public Game_Mode: Game_Mode = Game_Mode.Tutorial;\n\n\n    //--------------------------------------------------------------------------------------------\n\n    private FrameRate: number = 0;\n    private LastTime: number = 0;\n    private FrameRate_Schedule: Function = null;\n\n    constructor() {\n        super();\n        this.FrameRate_Schedule = () => {\n            const Time_Current = performance.now();\n            const Time_Elapsed = (Time_Current - this.LastTime) / 1000;\n            const currentFrameRate = this.FrameRate / Time_Elapsed;\n            console.debug(`帧率: ${currentFrameRate.toFixed(0)}`);\n            this.FrameRate = 0;\n            this.LastTime = Time_Current;\n        };\n    }\n    /**查看帧率 */\n    Check_FrameRate() {\n        this.unschedule(this.FrameRate_Schedule);\n        this.FrameRate = 0;\n        this.LastTime = performance.now();\n        this.schedule(this.FrameRate_Schedule, 1);\n    }\n    update(Dt: number): void {\n        this.FrameRate++;\n    }\n    onEnable() {\n        console.debug(\"组件被启用\");\n    }\n    onDisable() {\n        console.debug(\"组件被禁用或节点变为无效\");\n    }\n    onDestroy() {\n        console.debug(\"组件被销毁\");\n    }\n\n    onLoad() {\n        this.Director_AddPersistRootNode(this.node);\n        this.Game_FrameRate_Set(120);\n        this.Director_Scheduler_TimeScale_Set(1);\n        // this.Check_FrameRate();\n\n\n        // 启用物理系统\n        // PhysicsSystem2D.instance.enable = true;\n\n        // PhysicsSystem2D.instance.debugDrawFlags =\n        //   EPhysics2DDrawFlags.Shape\n        // | EPhysics2DDrawFlags.Joint\n        // | EPhysics2DDrawFlags.Aabb\n        // | EPhysics2DDrawFlags.Pair\n        // | EPhysics2DDrawFlags.CenterOfMass\n\n\n\n\n        // 监听浏览器窗口大小变化事件\n        window.addEventListener('resize', (Event) => {\n            Screen_Update();\n        });\n        // 监听浏览器横屏竖屏变化事件\n        window.addEventListener(\"orientationchange\", (Event) => {\n            console.debug(Event);\n            Screen_Update();\n        });\n\n        // 更新屏幕尺寸\n        function Screen_Update() {\n\n            // 浏览器窗口可见区域尺寸\n            let Screen_Width = window.innerWidth;\n            let Screen_Height = window.innerHeight;\n            console.debug(`当前可见区域尺寸: ${Screen_Width} x ${Screen_Height}`);\n\n            // 浏览器窗口设计分辨率尺寸\n            // let Width_Design = view.getDesignResolutionSize().width;\n            // let Height_Design = view.getDesignResolutionSize().height;\n            // console.debug(`当前设计分辨率: ${Width_Design} x ${Height_Design}`);\n\n            // 可见区域尺寸\n            let Visible_Size = view.getVisibleSize();\n            let Visible_Width = Visible_Size.width;\n            let Visible_Height = Visible_Size.height;\n            console.debug(`当前可见分辨率: ${Visible_Width} x ${Visible_Height}`);\n\n            if (Visible_Width >= Visible_Height) {\n                console.error('当前为横屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Horizontal\");\n            } else {\n                console.error('当前为竖屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Vertical\");\n            }\n\n        }\n\n\n        game.on(Game.EVENT_HIDE, () => {\n            // 游戏窗口被隐藏时的处理逻辑\n            console.debug('Game window is hidden', \"游戏窗口被隐藏时的处理逻辑\",);\n        });\n        game.on(Game.EVENT_SHOW, () => {\n            // 游戏窗口被显示时的处理逻辑\n            console.debug('Game window is shown', \"游戏窗口被显示时的处理逻辑\");\n        });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'visible') {\n                // 屏幕解锁时的处理逻辑\n                console.debug('Screen is unlocked', \"屏幕解锁时的处理逻辑\");\n            } else {\n                // 屏幕锁定时的处理逻辑\n                console.debug('Screen is locked', \"屏幕锁定时的处理逻辑\");\n            }\n        });\n\n\n\n\n        this.Music_AudioSource = new Node(\"Music\").addComponent(AudioSource);\n        this.Sound_AudioSource = new Node(\"Sound\").addComponent(AudioSource);\n        this.Music_AudioSource.node.parent = this.node;\n        this.Sound_AudioSource.node.parent = this.node;\n\n    }\n\n    async start() {\n        PlatformApi.instance.onLoad();\n\n        this.Is_First_StartUp();\n        this.Information_Printing();\n        this.Bundles = await this.Load_Bundle(\"Load\");\n\n\n\n        // this.Music_Play(\"Audio/BGM1\");\n\n        //加载资源\n\n\n    }\n\n\n\n\n\n    /**是否首次启动 */\n    Is_First_StartUp() {\n        let First_Start = this.Data_Get(\"First_Start\");\n        console.debug(First_Start);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(First_Start)) {\n            this.Is_First_Start = true;\n            First_Start = this.Is_First_Start;\n            this.Data_Set(\"First_Start\", First_Start);\n        }\n        if (First_Start) {\n            console.debug(\"第一次开始\");\n            // First_Start = false;\n            // this.Data_Set(\"First_Start\", First_Start);\n        } else {\n            console.debug(\"不是第一次开始\");\n        }\n    }\n\n\n    /**请求数据 */\n    async Fetch_Data(Url: string) {\n        if (Tool_UI.instance.isWechatPlatform()) {\n            return this.Fetch_DataWX(Url);\n        } else {\n            try {\n                const Response = await fetch(Url);\n                console.log(\"请求回复:\", Response);\n                const Data = await Response.json();\n                console.debug(\"获取到的数据:\", Data);\n                return Data;\n            } catch (error) {\n                console.error(\"获取数据失败:\", error);\n            }\n        }\n    }\n\n    /**更新数据 (PUT请求) */\n    async Update_Data(Url: string, Data: any) {\n        if (Tool_UI.instance.isWechatPlatform()) {\n            return this.Update_DataWX(Url, Data);\n        } else {\n            try {\n                const Response = await fetch(Url, {\n                    method: 'PUT', // 或 'PATCH' 如果API支持部分更新\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(Data)\n                });\n                if (!Response.ok) {\n                    throw new Error(`HTTP错误! 状态: ${Response.status}`);\n                }\n                console.debug(\"更新数据成功\");\n                return await Response.json();\n            } catch (error) {\n                console.error(\"更新请求失败:\", error);\n                throw error;\n            }\n        }\n    }\n\n    /** \n     * 微信小游戏环境下的数据请求方法\n     * @param Url 请求地址\n     * @returns 返回解析后的数据\n     */\n    async Fetch_DataWX(Url: string) {\n        try {\n            const res = await new Promise<any>((resolve, reject) => {\n                wx.request({\n                    url: Url,\n                    method: 'GET',\n                    success: (res) => {\n                        console.log(\"请求成功:\", res);\n                        resolve(res.data); // 微信返回的数据在res.data中\n                    },\n                    fail: (err) => {\n                        console.error(\"请求失败:\", err);\n                        reject(err);\n                    }\n                });\n            });\n            console.debug(\"获取到的数据:\", res);\n            return res;\n        } catch (error) {\n            console.error(\"获取数据失败:\", error);\n            throw error;\n        }\n    }\n\n    /** \n     * 微信小游戏环境下的数据更新方法 (PUT请求)\n     * @param url 请求地址\n     * @param data 要更新的数据\n     * @returns 返回更新后的数据\n     */\n    async Update_DataWX(url: string, data: any) {\n        try {\n            const res = await new Promise<any>((resolve, reject) => {\n                wx.request({\n                    url: url,\n                    method: 'PUT',\n                    data: data, // 微信会自动序列化对象\n                    header: {\n                        'Content-Type': 'application/json'\n                    },\n                    success: (res) => {\n                        // 微信使用statusCode而不是status\n                        if (res.statusCode >= 200 && res.statusCode < 300) {\n                            console.debug(\"更新数据成功\");\n                            resolve(res.data);\n                        } else {\n                            reject(new Error(`HTTP错误! 状态: ${res.statusCode}`));\n                        }\n                    },\n                    fail: (err) => {\n                        reject(err);\n                    }\n                });\n            });\n            return res;\n        } catch (error) {\n            console.error(\"更新请求失败:\", error);\n            throw error;\n        }\n    }\n\n\n    /**\n    *数据保存本地\n    *@Data_Name 待保存数据的名字\n    *@Data_Name 待保存的数据\n    */\n    // Data_Set(Data_Name: string, Data: any) {\n    //     sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n    // }\n    /**\n     *读取本地数据\n     *@Data_Name 待读取数据的名字\n     */\n    // Data_Get(Data_Name: string) {\n    //     let Data = sys.localStorage.getItem(Data_Name);\n    //     return JSON.parse(Data);\n    // }\n\n    /**\n     * 安全保存数据到本地\n     * @param Data_Name 数据键名\n     * @param Data 要保存的数据（会自动JSON序列化）\n     */\n    Data_Set(Data_Name: string, Data: any): void {\n        try {\n            sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n        } catch (e) {\n            console.error(`[Storage] 保存 ${Data_Name} 失败:`, e);\n        }\n    }\n\n    /**\n     * 安全读取本地数据\n     * @param Data_Name 数据键名\n     * @param Default_Value 当数据不存在时的默认值\n     */\n    Data_Get(Data_Name: string, Default_Value: any = null): any {\n        try {\n            let Data_Value;\n            const Data_Raw = sys.localStorage.getItem(Data_Name);\n            Data_Value = Data_Raw ? JSON.parse(Data_Raw) : null;\n            // 返回数据或默认值\n            return Data_Value !== undefined ? Data_Value : Default_Value;\n        } catch (e) {\n            console.error(`[Storage] 读取 ${Data_Name} 失败:`, e);\n            return Default_Value;\n        }\n    }\n\n    /**\n     * @param Data_Name 待删除数据的名字\n     */\n    Data_Delete(Data_Name: string) {\n        sys.localStorage.removeItem(Data_Name);\n    }\n    /**\n     * @param Data_Name 待检查数据的名字\n     * @returns 是否存在该数据\n     */\n    Data_Is_Exist(Data_Name: string): boolean {\n        return sys.localStorage.getItem(Data_Name) !== null;\n    }\n    /**\n     * @param Data_Name 待更新数据的名字\n     * @param New_Data 新的数据\n     */\n    Data_Update(Data_Name: string, New_Data: any) {\n        if (this.Data_Is_Exist(Data_Name)) {\n            let Existing_Data = this.Data_Get(Data_Name);\n            // 根据需要合并或更新数据\n            let Updated_Data = { ...Existing_Data, ...New_Data };\n            this.Data_Set(Data_Name, Updated_Data);\n        } else {\n            console.error(`Data with name ${Data_Name} does not exist.`);\n        }\n    }\n    /**\n     * 获取所有本地存储数据的键\n     * @returns 所有键的数组\n     */\n    Data_Get_All_Keys(): string[] {\n        return Object.keys(sys.localStorage);\n    }\n    /**\n     * 获取所有本地存储的数据\n     * @returns 所有数据的对象\n     */\n    Data_Get_All(): object {\n        const Keys = this.Data_Get_All_Keys();\n        let All_Data = {};\n        Keys.forEach(Key => {\n            All_Data[Key] = this.Data_Get(Key);\n        });\n        return All_Data;\n    }\n    /**\n     * 清空所有本地存储数据\n     */\n    Clear_All_Data() {\n        sys.localStorage.clear();\n    }\n\n    /**\n     * 深拷贝\n     * @param Obj 需要拷贝的对象\n     * @param Cache 缓存已拷贝的对象（用于处理循环引用）\n     * @returns 拷贝后的对象\n     */\n    Copy_Deep<T>(Obj: T, Cache = new WeakMap()): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Cache.has(Obj)) {\n            return Cache.get(Obj);\n        }\n        if (Obj instanceof Date) {\n            return new Date(Obj) as T;\n        }\n        if (Obj instanceof RegExp) {\n            return new RegExp(Obj) as T;\n        }\n        if (Obj instanceof Map) {\n            const Copied_Map = new Map();\n            Cache.set(Obj, Copied_Map);\n            Obj.forEach((Value, Key) => {\n                Copied_Map.set(Key, this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Map as T;\n        }\n        if (Obj instanceof Set) {\n            const Copied_Set = new Set();\n            Cache.set(Obj, Copied_Set);\n            Obj.forEach((Value) => {\n                Copied_Set.add(this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Set as T;\n        }\n        if (Array.isArray(Obj)) {\n            const Copied_Array = Obj.map((Item) => this.Copy_Deep(Item, Cache));\n            Cache.set(Obj, Copied_Array);\n            return Copied_Array as T;\n        }\n        const Copied_Obj: Partial<T> = {};\n        Cache.set(Obj, Copied_Obj);\n        for (const Key in Obj) {\n            if (Object.prototype.hasOwnProperty.call(Obj, Key)) {\n                Copied_Obj[Key] = this.Copy_Deep(Obj[Key], Cache);\n            }\n        }\n        return Copied_Obj as T;\n    }\n    /**\n     * 浅拷贝\n     * @param Obj 需要拷贝的对象\n     * @returns 拷贝后的对象\n     */\n    Copy_Shallow<T>(Obj: T): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Array.isArray(Obj)) {\n            return Obj.slice() as T;\n        }\n        return { ...Obj };\n    }\n\n    /**震动开关设置 */\n    Vibration_Switch_Set(Switch: boolean = false) {\n        this.Vibration_Switch = Switch;\n    }\n\n    /**震动开关获取 */\n    Vibration_Switch_Get() {\n        return this.Vibration_Switch;\n    }\n\n    /**声音开关设置 */\n    Sound_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch = Switch;\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = this.Sound_Volume;\n            });\n        } else {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = 0;\n            });\n        }\n    }\n    /**声音开关获取 */\n    Sound_Switch_Get() {\n        return this.Sound_Switch;\n    }\n    /**声音音量设置 */\n    Sound_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume = Volume;\n        this.Sound_Long_AudioSource.forEach(element => {\n            element.volume = this.Sound_Volume;\n        });\n    }\n    /**音乐开关设置 */\n    Music_Switch_Set(Switch: boolean = false) {\n        this.Music_Switch = Switch;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n    }\n    /**音乐开关获取 */\n    Music_Switch_Get() {\n        return this.Music_Switch;\n    }\n    /**音乐音量设置 */\n    Music_Volume_Set(Volume: number = 0) {\n        this.Music_Volume = Volume;\n        this.Music_AudioSource.volume = this.Music_Volume;\n    }\n    /**音频开关设置 */\n    Audio_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch_Set(Switch);\n        this.Music_Switch_Set(Switch);\n    }\n    /**音频声音设置 */\n    Audio_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume_Set(Volume);\n        this.Music_Volume_Set(Volume);\n    }\n    /**音效播放 */\n    async Sound_Play(Path: string) {\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        if (this.Sound_Switch) {\n            this.Sound_AudioSource.volume = this.Sound_Volume;\n        } else {\n            this.Sound_AudioSource.volume = 0;\n        }\n        this.Sound_AudioSource.loop = false;\n        this.Sound_AudioSource.playOneShot(Res, this.Sound_Volume);\n    }\n    /**音乐播放 */\n    async Music_Play(Path: string, Call = () => { }) {\n        console.warn(Path);\n        \n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        Call && Call()\n        this.Music_AudioSource.enabled = true;\n        this.Music_AudioSource.stop();\n        this.Music_AudioSource.clip = Res;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n        this.Music_AudioSource.loop = true;\n        this.Music_AudioSource.play();\n    }\n    /**长音效播放 */\n    async Sound_Long_play(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) {\n            this.Sound_Long_AudioSource[Path].enabled = true;\n            this.Sound_Long_AudioSource[Path].stop();\n            if (this.Sound_Switch) {\n                this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n            } else {\n                this.Sound_Long_AudioSource[Path].volume = 0;\n            }\n            this.Sound_Long_AudioSource[Path].loop = true;\n            this.Sound_Long_AudioSource[Path].play();\n            return\n        }\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return//防止音乐还没加载完 场景就被销毁了\n        this.Sound_Long_AudioSource[Path] = new Node(Path).addComponent(AudioSource);\n        this.Sound_Long_AudioSource[Path].node.parent = this.node;\n        this.Sound_Long_AudioSource[Path].clip = Res;\n        this.Sound_Long_AudioSource[Path].enabled = true;\n        this.Sound_Long_AudioSource[Path].stop();\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n        } else {\n            this.Sound_Long_AudioSource[Path].volume = 0;\n        }\n        this.Sound_Long_AudioSource[Path].loop = true;\n        this.Sound_Long_AudioSource[Path].play();\n    }\n    /**音乐暂停 */\n    Music_Pause() {\n        this.Music_AudioSource.pause();\n    }\n    /**音乐恢复 */\n    Music_Resume() {\n        this.Music_AudioSource.play();\n    }\n    /**音乐停止 */\n    Music_Stop() {\n        this.Music_AudioSource.stop();\n    }\n    /**长音效暂停 */\n    Sound_Long_Pause(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].pause();\n    }\n    /**长音效恢复 */\n    Sound_Long_Resume(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].play();\n    }\n    /**长音效停止 */\n    Sound_Long_Stop(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].stop();\n    }\n    /**长音效停止所有 */\n    Sound_Long_Stop_All() {\n        if (this.Sound_AudioSource) this.Sound_AudioSource.stop();\n        for (let i = 0; i < this.Sound_Long_AudioSource.length; i++) {\n            this.Sound_Long_AudioSource[i].stop();\n        }\n    }\n\n    /**加载远程图片资源无后缀名\n     * @Path 远程路径\n     */\n    async Load_Remote_ImageAsset(Path: string): Promise<SpriteFrame> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, { ext: '.png' }, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程图片资源有后缀名\n    * @Path 远程/本地路径\n    */\n    async Load_Remote_ImageAsset_(Path: string): Promise<SpriteFrame> {\n\n        // try {\n        //     return new Promise((resolve, reject) => {\n        //         assetManager.loadRemote<ImageAsset>(Path, (err, imageAsset) => {\n        //             if (err) {\n        //                 console.error('加载远程图片失败:', err);\n        //                 return;\n        //             }\n        //             // 创建纹理\n        //             const texture = new Texture2D();\n        //             texture.image = imageAsset;\n        //             // 创建精灵帧\n        //             const spriteFrame = new SpriteFrame();\n        //             spriteFrame.texture = texture;\n        //             resolve(spriteFrame);\n        //         });\n        //     });\n        // } catch (Error) {\n        //     console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n        //     throw Error;\n        // }\n\n        // return\n\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程音频资源\n     * @Path 远程路径\n     */\n    async Load_Remote_audio(Path: string): Promise<AudioClip> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote(Path, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 AudioClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AudioClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AudioClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Bundle(Bundle_Name: string): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadBundle(Bundle_Name, (Err, Res) => {\n                    if (Err) {\n                        console.error(`加载 Bundle ${Bundle_Name} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Bundle ${Bundle_Name} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Bundle ${Bundle_Name} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载文件夹 */\n    async Load_Dir(Path: string, Type: any): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadDir(Path, Type, (finished, total, item) => {\n                    const onProgress: string = (finished / total).toFixed(2);\n                    console.debug(onProgress);\n                }, (Err, Res: any) => {\n                    if (Err) {\n                        console.error(\"加载 Dir 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Dir ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Dir ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Scene(Path: string, Progress_Bar: ProgressBar, Value_Label: Label = null): Promise<Scene> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Scene[Path]) {\n            console.debug(`Scene ${Path} 资源存在`);\n            return this._Cache_Scene[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadScene(Path, null, (Finished, Total, Item) => {\n                    let Schedule: number = Number((Finished / Total).toFixed(2));\n                    Progress_Bar.progress = Schedule;\n                    let Value: number = Math.floor(Schedule * 100);\n                    if (Value_Label != null) {\n                        Value_Label.string = Value + \"%\"\n                    }\n                    console.debug(`加载 Scene 进度: ${Finished}/${Total} (${Value}%)`);\n                }, (Err, Res: SceneAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Scene 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Scene[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Scene ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    this.Scene_Name_Current = Path;\n                    resolve(this._Cache_Scene[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Scene ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Prefab(Path: string): Promise<Prefab> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Prefab[Path]) {\n            console.debug(`Prefab ${Path} 资源存在`);\n            return this._Cache_Prefab[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Prefab, (Err, Res: Prefab) => {\n                    if (Err) {\n                        console.error(`加载 Prefab ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Prefab[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Prefab ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Prefab[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Prefab ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_SpriteFrame(Path: string): Promise<SpriteFrame> {\n        Path = Path + \"/spriteFrame\";\n        if (this._Cache_SpriteFrame[Path]) {\n            console.debug(`SpriteFrame ${Path} 资源存在`);\n            return this._Cache_SpriteFrame[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, SpriteFrame, (Err, Res: SpriteFrame) => {\n                    if (Err) {\n                        console.error(`加载 SpriteFrame ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_SpriteFrame[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 SpriteFrame ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_SpriteFrame[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 SpriteFrame ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Texture(Path: string): Promise<Texture2D> {\n        if (this._Cache_Texture2D[Path]) {\n            console.debug(`Texture ${Path} 资源存在`);\n            return this._Cache_Texture2D[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Texture2D, (Err, Res: Texture2D) => {\n                    if (Err) {\n                        console.error(`加载 Texture ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Texture2D[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Texture ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Texture2D[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Texture ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AudioClip(Path: string): Promise<AudioClip> {\n        if (this._Cache_AudioClip[Path]) {\n            console.debug(`Audio ${Path} 资源存在`);\n            return this._Cache_AudioClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AudioClip, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 Audio 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AudioClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Audio ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AudioClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Audio ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Material(Path: string): Promise<Material> {\n        if (this._Cache_Material[Path]) {\n            console.debug(`Material ${Path} 资源存在`);\n            return this._Cache_Material[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Material, (Err, Res: Material) => {\n                    if (Err) {\n                        console.error(\"加载 Material 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Material[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Material ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Material[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Material ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Json(Path: string): Promise<JsonAsset> {\n        if (this._Cache_Json[Path]) {\n            console.debug(`Json ${Path} 资源存在`);\n            return this._Cache_Json[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, JsonAsset, (Err, Res: JsonAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Json 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Json[Path] = Res.json!;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Json ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Json[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Json ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AnimationClip(Path: string): Promise<AnimationClip> {\n        if (this._Cache_AnimationClip[Path]) {\n            console.debug(`AnimationClip ${Path} 资源存在`);\n            return this._Cache_AnimationClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AnimationClip, (Err, Res: AnimationClip) => {\n                    if (Err) {\n                        console.error(\"加载 AnimationClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AnimationClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AnimationClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AnimationClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AnimationClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Font(Path: string): Promise<Font> {\n        if (this._Cache_Font[Path]) {\n            console.debug(`Font ${Path} 资源存在`);\n            return this._Cache_Font[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Font, (Err, Res: Font) => {\n                    if (Err) {\n                        console.error(\"加载 Font 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Font[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Font ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Font[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Font ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    /**释放资源 */\n    async Release_Resource(Path: string): Promise<void> {\n        if (this._Cache_Scene[Path]) {\n            delete this._Cache_Scene[Path];\n            console.debug(`释放 Scene ${Path} 资源`);\n        }\n        if (this._Cache_Prefab[Path]) {\n            delete this._Cache_Prefab[Path];\n            console.debug(`释放 Prefab ${Path} 资源`);\n        }\n        if (this._Cache_SpriteFrame[Path]) {\n            delete this._Cache_SpriteFrame[Path];\n            console.debug(`释放 SpriteFrame ${Path} 资源`);\n        }\n        if (this._Cache_Texture2D[Path]) {\n            delete this._Cache_Texture2D[Path];\n            console.debug(`释放 Texture ${Path} 资源`);\n        }\n        if (this._Cache_AudioClip[Path]) {\n            delete this._Cache_AudioClip[Path];\n            console.debug(`释放 Audio ${Path} 资源`);\n        }\n        if (this._Cache_Material[Path]) {\n            delete this._Cache_Material[Path];\n            console.debug(`释放 Material ${Path} 资源`);\n        }\n        if (this._Cache_Json[Path]) {\n            delete this._Cache_Json[Path];\n            console.debug(`释放 JSON ${Path} 资源`);\n        }\n        if (this._Cache_AnimationClip[Path]) {\n            delete this._Cache_AnimationClip[Path];\n            console.debug(`释放 AnimationClip ${Path} 资源`);\n        }\n        if (this._Cache_Font[Path]) {\n            delete this._Cache_Font[Path];\n            console.debug(`释放 Font ${Path} 资源`);\n        }\n    }\n    /**释放所有资源 */\n    async Release_Resource_All(): Promise<void> {\n        this._Cache_Scene = {};\n        this._Cache_Prefab = {};\n        this._Cache_SpriteFrame = {};\n        this._Cache_Texture2D = {};\n        this._Cache_AudioClip = {};\n        this._Cache_Material = {};\n        this._Cache_Json = {};\n        this._Cache_AnimationClip = {};\n        this._Cache_Font = {};\n        console.debug(`已释放所有资源`);\n    }\n\n    /** 游戏切换全屏模式 */\n    Game_Toggle_Fullscreen() {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen();\n            console.debug(`进入全屏`);\n        } else {\n            document.exitFullscreen();\n            console.debug(`退出全屏`);\n        }\n    }\n\n    /** 游戏界面缩放设置 */\n    Game_UIScale_Set(scale: number = 1) {\n        document.body.style.transform = `scale(${scale})`;\n    }\n\n    /**游戏重启$ */\n    Game_Restart() {\n        game.restart();\n    }\n    /**游戏恢复 */\n    Game_Resume() {\n        game.resume();\n    }\n    /**游戏暂停 */\n    Game_Pause() {\n        game.pause();\n    }\n    /**游戏停止 */\n    Game_End() {\n        game.end();\n    }\n    /**游戏帧率设置 */\n    Game_FrameRate_Set(FrameRate: number = 59) {\n        game.frameRate = FrameRate;\n    }\n\n\n    /**场景运行$ */\n    Director_Run(SceneAsset: Scene) {\n        director.runSceneImmediate(SceneAsset);\n    }\n    /**场景恢复$ */\n    Director_Resume() {\n        director.resume();\n    }\n    /**场景暂停$ */\n    Director_Pause() {\n        director.pause();\n    }\n    /**场景停止 */\n    Director_End() {\n        // director.end();\n    }\n    /**注册常驻根节点 */\n    Director_AddPersistRootNode(Node_Set: Node) {\n        director.addPersistRootNode(Node_Set);\n    }\n    /**注销常驻根节点 */\n    Director_RemovePersistRootNode(Node_Set: Node) {\n        director.removePersistRootNode(Node_Set);\n    }\n    /**场景调度间隔缩放设置 */\n    Director_Scheduler_TimeScale_Set(Scale: number = 1) {\n        director.getScheduler().setTimeScale(Scale);\n    }\n    /**场景调度间隔缩放获取 */\n    Director_Scheduler_TimeScale_Get(): number {\n        return director.getScheduler().getTimeScale();\n    }\n\n    /**信息打印 */\n    Information_Printing() {\n        console.debug(`当前平台是否是原生平台${sys.isNative}`);\n        console.debug(`当前平台是否是浏览器${sys.isBrowser}`);\n        console.debug(`当前运行平台是否是移动端平台${sys.isMobile}`);\n        console.debug(`当前平台字节顺序是否是小端序${sys.isLittleEndian}`);\n        console.debug(`当前运行平台是否是XR平台${sys.isXR}`);\n        this.Get_Current_Full_Time();\n    }\n\n\n    /**获取当前时间戳 */\n    Get_Timestamp(): number {\n        return Date.now();\n    }\n    /** 获取当前时间的 Unix 时间戳（秒） */\n    Get_Unix_Timestamp(): number {\n        return Math.floor(Date.now() / 1000); // 返回自1970年1月1日以来的秒数\n    }\n    /** 获取指定日期的时间戳 */\n    Get_Timestamp_From_Date(year, month, day): number {\n        const date = new Date(year, month - 1, day); // 注意月份从0开始\n        return date.getTime(); // 返回指定日期的时间戳\n    }\n    /** 获取两个时间戳之间的差值（毫秒） */\n    Get_Time_Difference(Start_Timestamp: number, Fnish_Timestamp: number): number {\n        return Fnish_Timestamp - Start_Timestamp; // 返回时间差\n    }\n    /** 获取当前年份 */\n    Get_Current_Year(): number {\n        return new Date().getFullYear(); // 返回当前年份\n    }\n    /** 获取当前月份 */\n    Get_Current_Month(): number {\n        return new Date().getMonth() + 1; // 返回当前月份\n    }\n    /** 获取当前日期 */\n    Get_Current_Date(): number {\n        return new Date().getDate();\n    }\n    /** 获取当前小时 */\n    Get_Current_Hour(): number {\n        return new Date().getHours();\n    }\n    /** 获取当前分钟 */\n    Get_Current_Minute(): number {\n        return new Date().getMinutes();\n    }\n    /** 获取当前秒 */\n    Get_Current_Second(): number {\n        return new Date().getSeconds();\n    }\n    /** 获取当前毫秒 */\n    Get_Current_Millisecond(): number {\n        return new Date().getMilliseconds();\n    }\n    /** 获取当前星期（0-6，0表示星期天） */\n    Get_Current_Day(): number {\n        if (new Date().getDay() == 0) return 7;\n        return new Date().getDay();\n    }\n    /** 获取完整的当前时间（包括年月日时分秒毫秒） */\n    Get_Current_Full_Time(): {\n        Year: number;\n        Month: number;\n        Date: number;\n        Hour: number;\n        Minute: number;\n        Second: number;\n        MilliSecond: number;\n        Day: number;\n    } {\n        const Current_Time = {\n            Year: this.Get_Current_Year(),\n            Month: this.Get_Current_Month(),\n            Date: this.Get_Current_Date(),\n            Hour: this.Get_Current_Hour(),\n            Minute: this.Get_Current_Minute(),\n            Second: this.Get_Current_Second(),\n            MilliSecond: this.Get_Current_Millisecond(),\n            Day: this.Get_Current_Day()\n        };\n        console.debug(`${Current_Time.Year}年${Current_Time.Month}月${Current_Time.Date}日 / 星期${Current_Time.Day} / ${Current_Time.Hour}时${Current_Time.Minute}分${Current_Time.Second}秒${Current_Time.MilliSecond}`);\n        return Current_Time;\n    }\n\n\n\n}\n\n\n"]}