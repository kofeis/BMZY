{"version":3,"sources":["file:///D:/Cocos/XHAT/BMZY/assets/Script/Tool/Tool_Animation.ts"],"names":["_decorator","Component","Animation","Sprite","Tween","tween","v3","Vec2","Vec3","Material","UIOpacity","color","isValid","Tool_Other","Tool_UI","ccclass","property","Tool_Animation","Async_Wait","Delay_Time","Promise","resolve","reject","scheduleOnce","Async_Function_Id","Id","Call","Obj_Start","num","Obj_End","to","progress","start","end","current","ratio","tag","call","Async_Function_Target","Async_Function_For","Count","Fun_Start","Fun_End","i","Timing","Obj_Timing","Time","console","debug","TimReset","Tween_Stop_Target","TimPause","Tween_Pause_Target","TimResume","Tween_Resume_Target","TimStop","Target","pauseAllByTarget","resumeAllByTarget","stopAllByTarget","Tween_Stop_Tag","stopAllByTag","Tween_Stop_All","stopAll","Animation_Num_Jump_Time","Component_Label","Value_Start","Value_Change","Lenth","Easing","easing","string","toFixed","Animation_Num_Jump_Speed","Speed","Length","Math","abs","Get_Move_Time","Start_Pos","Pos_Finish","Dis","Get_Distance","Number","Get_Angle","Pos_Start","Delta_X","x","Delta_Y","y","AngleIn_Degrees","atan2","PI","instance","Get_Type_Is_Abnormal","warn","distance","Get_Distance_Limited","Distance","clone","Direction","subtract","normalize","Intermediate_Position","add","multiplyScalar","Position_Restricted","Target_Position","Min_Position","Max_Position","Ortho_Height_Multiple","Design_Width","Get_Width_Design","Design_Height","Get_Height_Design","clamp","value","min","max","Animation_Node_Move_Speed","Node_Set","Position","Move_Time","position","Animation_Node_Move_Time","Animation_Nodes_Swap_Pos_Speed","Node_A","Node_B","Position_A","Position_B","Animation_Nodes_Move_Swap_Time","Animation_Node_Move_Bezier_Time","Target_Pos","PointA_Pos","PointB_Pos","Control_Point1","Control_Point2","End_Position","Bezier","t","pow","Animation_Node_Move_Bezier_Speed","Animation_Node_Move_Bezier_Time1","Animation_Node_Move_Parabola_Time","Control_Point","Animation_Nodes_Move_Speed","forEach","element","Pos","Animation_Nodes_Move_Time","index","length","Animation_Node_Move_Follow_Speed","Target_Node","Next_Pos","Animation_Hit","Hit_time","Color","Component_Sprite","getComponent","addComponent","Original_Color","a","g","b","log","Animation_Hit_Opacity","Min_Opacity","Max_Opacity","Component_UIOpacity","opacity","Animation_Death_Effect","Duration","Min_Scale","Max_Scale","Initial_Scale","scale","Initial_Opacity","parallel","Anim_Show_Node","Anim_Hide_Node","Anim_Show_Window","Scale_Current","z","Anim_Frame_Play","Anim","Name","error","play","once","EventType","FINISHED","Anim_Frame_Play_Plus","Min_Range","Max_Range","WrapMode","RepeatCount","Delay","defaultClip","name","State","getState","speed","wrapMode","repeatCount","playbackRange","delay","Anim_Frame_CrossFade","crossFade","Anim_Frame_Resume","isPlaying","isPaused","resume","Anim_Frame_Pause","Anim_Frame_Resume_Plus","pause","off","Anim_Frame_Stop","stop","Anim_Frame_Speed","Anim_Skeleton_Play","Skeleton","Skin","Track_Index","Anim_Name","Loop","setSkin","_updateSkeletonData","setAnimation","setCompleteListener","Animation_Heartbeat","repeatForever","Animation_Tip","angle","Anim_On","Component_Get","Anim_Off","Anim_Dissolve","Set_Material","res","Sp","customMaterial","copy","setProperty","Current_Num","Get_Min_Distance_Pos_Arr","Position_World","Target_Position_World_Arr","Min_Index","Min_Distance","MAX_VALUE","Index","Get_Min_Distance_Node","Target_Nodes","NodesToCheck","Array","isArray","children","Node","worldPosition","Child_Position"],"mappings":"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","sourcesContent":["import { __private, _decorator, AnimationState, Component, Animation, Node, sp, Sprite, Tween, tween, v3, Vec2, Vec3, Material, director, Skeleton, macro, UIOpacity, Color, color, Label, instantiate, easing, Widget, isValid, TweenEasing } from 'cc';\nimport { Tool_Other } from './Tool_Other';\nimport { Tool_UI } from './Tool_UI';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Tool_Animation')\nexport class Tool_Animation extends Component {\n\n    public static readonly instance = new Tool_Animation();\n\n    /**异步等待 */\n    Async_Wait(Delay_Time: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (Delay_Time <= 0) {\n                resolve();\n            } else {\n                this.scheduleOnce(() => {\n                    resolve();\n                }, Delay_Time);\n            }\n        })\n    }\n\n    /**\n     * 异步函数 Id \n     * @param Delay_Time 延时时间\n     * @param Id 缓动标签\n     * @param Call 回调函数\n     */\n    Async_Function_Id(Delay_Time: number, Id: number, Call: Function = () => { }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            let Obj_Start = { num: 0 };\n            const Obj_End = { num: 1 };\n            tween(Obj_Start)\n                .to(Delay_Time, Obj_End, {\n                    progress: (start: number, end: number, current: number, ratio: number): number => {\n                        return ratio;\n                    }\n                })\n                .tag(Id)\n                .call(() => {\n                    Call?.();\n                    resolve();\n                })\n                .start();\n            return Obj_Start;\n        });\n    }\n\n    /**\n     *  异步函数 Target\n     * @param Delay_Time 延时时间\n     * @param Obj_Start 开始对象\n     * @param Call 回调函数\n     */\n    Async_Function_Target(Delay_Time: number, Obj_Start: { num: number }, Call: Function = () => { }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const Obj_End = { num: 1 };\n            tween(Obj_Start)\n                .to(Delay_Time, Obj_End, {\n                    progress: (start: number, end: number, current: number, ratio: number): number => {\n                        return ratio;\n                    }\n                })\n                .call(() => {\n                    Call?.();\n                    resolve();\n                })\n                .start();\n        });\n    }\n\n\n    /**异步函数循环 */\n    Async_Function_For(Count: number, Fun_Start: Function = () => { }, Fun_End: Function = () => { }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            for (let i = 0; i < Count; i++) {\n                if (i == Count - 1) {\n                    Fun_End?.(i);\n                } else {\n                    Fun_Start?.(i);\n                }\n            }\n        });\n    }\n\n    /**倒计时开始 */\n    Timing(Obj_Timing: { num: number }, Time: number = 60, Call: Function = () => { }) {\n        Obj_Timing.num = 0;\n        this.Async_Function_Target(Time, Obj_Timing, () => {\n            console.debug(\"倒计时结束\");\n            Call?.();\n        });\n    }\n\n    /**倒计时重置 */\n    TimReset(Obj_Timing: { num: number }, Time: number = 60, Call: Function = () => { }) {\n        console.debug(\"倒计时重置\");\n        this.Tween_Stop_Target(Obj_Timing);\n        this.Timing(Obj_Timing, Time, Call);\n    }\n\n    /**倒计时暂停 */\n    TimPause(Obj_Timing: { num: number }, Time: number = 60, Call: Function = () => { }) {\n        console.debug(\"倒计时暂停\");\n        this.Tween_Pause_Target(Obj_Timing);\n    }\n\n    /**倒计时恢复 */\n    TimResume(Obj_Timing: { num: number }, Time: number = 60, Call: Function = () => { }) {\n        console.debug(\"倒计时暂停\");\n        this.Tween_Resume_Target(Obj_Timing);\n    }\n\n    /**倒计时停止 */\n    TimStop(Obj_Timing: { num: number }, Time: number = 60, Call: Function = () => { }) {\n        console.debug(\"倒计时停止\");\n        this.Tween_Stop_Target(Obj_Timing);\n    }\n\n    /**暂停缓动对象 */\n    Tween_Pause_Target(Target: object, Call = () => { }) {\n        Tween.pauseAllByTarget(Target);\n        Call?.();\n    }\n\n    /**恢复缓动对象 */\n    Tween_Resume_Target(Target: object, Call = () => { }) {\n        Tween.resumeAllByTarget(Target);\n        Call?.();\n    }\n\n    /**停止缓动对象 */\n    Tween_Stop_Target(Target: object, Call = () => { }) {\n        Tween.stopAllByTarget(Target);\n        Call?.();\n    }\n\n    /**停止缓动标签 */\n    Tween_Stop_Tag(Id: number, Call = () => { }) {\n        Tween.stopAllByTag(Id);\n        Call?.();\n    }\n\n    /**停止所有缓动 */\n    Tween_Stop_All() {\n        Tween.stopAll();\n    }\n\n    /**\n     * 数字跳动（基于时间）\n     * @param Label Label 组件\n     * @param Value_Start 初始值\n     * @param Value_Change 改变值\n     * @param Time 时间\n     * @param Obj_Start 开始对象\n     * @param Id ID\n     * @param Call 回调\n     * @param Lenth 小数位数\n     * @param Easing \"linear\" | \"smooth\" | \"fade\" | \"constant\" | \"quadIn\" | \"quadOut\" | \"quadInOut\" | \"quadOutIn\" | \"cubicIn\" | \"cubicOut\" | \"cubicInOut\" | \"cubicOutIn\" | \"quartIn\" | \"quartOut\" | \"quartInOut\" | \"quartOutIn\" | \"quintIn\" | \"quintOut\" | \"quintInOut\" | \"quintOutIn\" | \"sineIn\" | \"sineOut\" | \"sineInOut\" | \"sineOutIn\" | \"expoIn\" | \"expoOut\" | \"expoInOut\" | \"expoOutIn\" | \"circIn\" | \"circOut\" | \"circInOut\" | \"circOutIn\" | \"elasticIn\" | \"elasticOut\" | \"elasticInOut\" | \"elasticOutIn\" | \"backIn\" | \"backOut\" | \"backInOut\" | \"backOutIn\" | \"bounceIn\" | \"bounceOut\" | \"bounceInOut\" | \"bounceOutIn\";\n     */\n    Animation_Num_Jump_Time(\n        Component_Label: Label,\n        Value_Start: number,\n        Value_Change: number,\n        Time: number,\n        Obj_Start: { num: number },\n        Id: number, Call = () => { },\n        Lenth: number = 2, Easing: TweenEasing = \"linear\"\n    ) {\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                easing: Easing,\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    Component_Label.string = (Value_Start + ratio * Value_Change).toFixed(Lenth);\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => Call?.())\n            .start();\n    }\n    /**\n     * 数字跳动（基于速度）\n     * @param Component_Label Label 组件\n     * @param Value_Start 初始值\n     * @param Value_Change 改变值\n     * @param Speed 变化速度（值/秒）\n     * @param Obj_Start 开始对象\n     * @param Id ID\n     * @param Call 回调\n     * @param Length 小数位数\n     * @param Easing \"linear\" | \"smooth\" | \"fade\" | \"constant\" | \"quadIn\" | \"quadOut\" | \"quadInOut\" | \"quadOutIn\" | \"cubicIn\" | \"cubicOut\" | \"cubicInOut\" | \"cubicOutIn\" | \"quartIn\" | \"quartOut\" | \"quartInOut\" | \"quartOutIn\" | \"quintIn\" | \"quintOut\" | \"quintInOut\" | \"quintOutIn\" | \"sineIn\" | \"sineOut\" | \"sineInOut\" | \"sineOutIn\" | \"expoIn\" | \"expoOut\" | \"expoInOut\" | \"expoOutIn\" | \"circIn\" | \"circOut\" | \"circInOut\" | \"circOutIn\" | \"elasticIn\" | \"elasticOut\" | \"elasticInOut\" | \"elasticOutIn\" | \"backIn\" | \"backOut\" | \"backInOut\" | \"backOutIn\" | \"bounceIn\" | \"bounceOut\" | \"bounceInOut\" | \"bounceOutIn\";\n     */\n    Animation_Num_Jump_Speed(Component_Label: Label, Value_Start: number, Value_Change: number, Speed: number, Obj_Start: { num: number }, Id: number, Call = () => { }, Length: number = 2, Easing: TweenEasing = \"linear\") {\n        // 计算动画时间（时间 = 变化量 / 速度）\n        const Time = (Math.abs(Value_Change) / Speed) * 1000; // 转为毫秒\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                easing: Easing,\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    Component_Label.string = (Value_Start + ratio * Value_Change).toFixed(Length);\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n    /**获得移动时间 */\n    Get_Move_Time(Speed: number, Start_Pos: Vec3, Pos_Finish: Vec3) {\n        if (Speed <= 0) {\n            return;\n        }\n        let Dis = this.Get_Distance(Start_Pos, Pos_Finish);\n        let Time = Number((Dis / Speed).toFixed(2));\n        return Time;\n    }\n\n    /**获取两点角度\n    *@param Pos_Start 起点坐标\n    *@param Pos_Finish 终点坐标\n    */\n    Get_Angle(Pos_Start: Vec3, Pos_Finish: Vec3): number {\n        const Delta_X = Pos_Finish.x - Pos_Start.x;\n        const Delta_Y = Pos_Finish.y - Pos_Start.y;\n        const AngleIn_Degrees = Math.atan2(Delta_Y, Delta_X) * (180 / Math.PI);\n        return AngleIn_Degrees;\n    }\n\n    /**获取两点距离\n    *@param Pos_Start 起点坐标\n    *@param Pos_Finish 终点坐标\n    */\n    Get_Distance(Pos_Start: Vec3, Pos_Finish: Vec3) {\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Pos_Start) || !Tool_Other.instance.Get_Type_Is_Abnormal(Pos_Finish)) {\n            console.warn(\"类型异常\");\n            return;\n        }\n        return Number(Vec2.distance(Pos_Start, Pos_Finish).toFixed(2));\n    }\n\n    /**\n     *根据两点坐标和距离,计算距离开始位置Dis的坐标\n     *@param p1 起始点坐标\n     *@param p2 目标点坐标\n     *@param dis 距离起始点的距离\n     *@returns 中间位置坐标\n     */\n    Get_Distance_Limited(Pos_Start: Vec3, Pos_Finish: Vec3, Dis: number): Vec3 {\n        // 计算两点之间的距离\n        const Distance = this.Get_Distance(Pos_Start.clone(), Pos_Finish.clone());\n        // 如果两点之间的距离小于或等于目标距离,则返回目标点坐标\n        if (Distance <= Dis) {\n            return Pos_Finish.clone();\n        }\n        // 计算方向向量并归一化\n        const Direction = Pos_Finish.clone().subtract(Pos_Start.clone()).normalize();\n        // 计算中间位置坐标\n        const Intermediate_Position = Pos_Start.clone().add(Direction.multiplyScalar(Dis));\n        return Intermediate_Position;\n    }\n\n\n    /**\n     * 位置限制\n     * @param {Vec3} Target_Position - 目标坐标\n     * @param {Vec3} Min_Position - 最小坐标\n     * @param {Vec3} Max_Position - 最大坐标\n     * @param {number} Ortho_Height_Multiple - 正交高度倍数\n     * @returns {Vec3} - 限制后的目标坐标       \n     */\n    Position_Restricted(Target_Position: Vec3, Min_Position: Vec3, Max_Position: Vec3, Ortho_Height_Multiple: number = 1) {\n        /** 设计分辨率 */\n        const Design_Width = Tool_UI.instance.Get_Width_Design() * Ortho_Height_Multiple;\n        const Design_Height = Tool_UI.instance.Get_Height_Design() * Ortho_Height_Multiple;\n        // 调整最小和最大坐标\n        Min_Position = v3(Min_Position.x + Design_Width, Min_Position.y + Design_Height, 0);\n        Max_Position = v3(Max_Position.x - Design_Width, Max_Position.y - Design_Height, 0);\n        // 限制坐标的辅助函数\n        const clamp = (value: number, min: number, max: number) => Math.max(min, Math.min(value, max));\n        // 限制目标坐标\n        Target_Position.x = clamp(Target_Position.x, Min_Position.x, Max_Position.x);\n        Target_Position.y = clamp(Target_Position.y, Min_Position.y, Max_Position.y);\n\n        return Target_Position;\n    }\n\n\n\n\n    /**动画_节点_移动_速度\n    *@Node 节点\n    *@Position 坐标\n    *@Speed 速度\n    *@Call 回调函数\n    *@Easing \"linear\" | \"smooth\" | \"fade\" | \"constant\" | \"quadIn\" | \"quadOut\" | \"quadInOut\" | \"quadOutIn\" | \"cubicIn\" | \"cubicOut\" | \"cubicInOut\" | \"cubicOutIn\" | \"quartIn\" | \"quartOut\" | \"quartInOut\" | \"quartOutIn\" | \"quintIn\" | \"quintOut\" | \"quintInOut\" | \"quintOutIn\" | \"sineIn\" | \"sineOut\" | \"sineInOut\" | \"sineOutIn\" | \"expoIn\" | \"expoOut\" | \"expoInOut\" | \"expoOutIn\" | \"circIn\" | \"circOut\" | \"circInOut\" | \"circOutIn\" | \"elasticIn\" | \"elasticOut\" | \"elasticInOut\" | \"elasticOutIn\" | \"backIn\" | \"backOut\" | \"backInOut\" | \"backOutIn\" | \"bounceIn\" | \"bounceOut\" | \"bounceInOut\" | \"bounceOutIn\";\n    */\n    Animation_Node_Move_Speed(Node_Set: Node, Position: Vec3, Speed: number = 1000, Call: Function = () => { }, Easing: TweenEasing = \"linear\") {\n        if (Speed <= 0) {\n            return;\n        }\n        let Move_Time: number = this.Get_Move_Time(Speed, Node_Set.position, Position);\n        this.Tween_Stop_Target(Node_Set);\n        tween(Node_Set)\n            .to(Move_Time, { position: Position }, { easing: Easing })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n    /**动画_节点_移动_时间\n    *@Node 节点\n    *@Position 坐标\n    *@Time 时间\n    *@Call 回调函数\n    *@Easing \"linear\" | \"smooth\" | \"fade\" | \"constant\" | \"quadIn\" | \"quadOut\" | \"quadInOut\" | \"quadOutIn\" | \"cubicIn\" | \"cubicOut\" | \"cubicInOut\" | \"cubicOutIn\" | \"quartIn\" | \"quartOut\" | \"quartInOut\" | \"quartOutIn\" | \"quintIn\" | \"quintOut\" | \"quintInOut\" | \"quintOutIn\" | \"sineIn\" | \"sineOut\" | \"sineInOut\" | \"sineOutIn\" | \"expoIn\" | \"expoOut\" | \"expoInOut\" | \"expoOutIn\" | \"circIn\" | \"circOut\" | \"circInOut\" | \"circOutIn\" | \"elasticIn\" | \"elasticOut\" | \"elasticInOut\" | \"elasticOutIn\" | \"backIn\" | \"backOut\" | \"backInOut\" | \"backOutIn\" | \"bounceIn\" | \"bounceOut\" | \"bounceInOut\" | \"bounceOutIn\";\n    */\n    async Animation_Node_Move_Time(Node_Set: Node, Position: Vec3, Time: number = 1, Call: Function = () => { }, Easing: TweenEasing = \"linear\"): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (Time < 0) {\n                return;\n            }\n            // this.Tween_Stop_Target(Node_Set);\n            tween(Node_Set)\n                .to(Time, { position: Position }, { easing: Easing })\n                .call(() => {\n                    Call?.();\n                    resolve();\n                })\n                .start();\n\n        });\n    }\n\n    /**动画_节点_交换_坐标_速度 */\n    Animation_Nodes_Swap_Pos_Speed(Node_A: Node, Node_B: Node, Speed: number = 1000, Call: Function = () => { }, Easing: TweenEasing = \"linear\") {\n        if (Speed <= 0) {\n            return;\n        }\n        const Position_A = Node_A.position.clone();\n        const Position_B = Node_B.position.clone();\n        this.Animation_Node_Move_Speed(Node_A, Position_B, Speed, null, Easing);\n        this.Animation_Node_Move_Speed(Node_B, Position_A, Speed, () => {\n            Call?.();\n        }, Easing);\n    }\n    /**动画_节点_交换_坐标_时间 */\n    Animation_Nodes_Move_Swap_Time(Node_A: Node, Node_B: Node, Time: number = 1, Call: Function = () => { }, Easing: TweenEasing = \"linear\") {\n        if (Time < 0) {\n            return;\n        }\n        const Position_A = Node_A.position.clone();\n        const Position_B = Node_B.position.clone();\n        this.Animation_Node_Move_Time(Node_A, Position_B, Time, null, Easing);\n        this.Animation_Node_Move_Time(Node_B, Position_A, Time, () => {\n            Call?.();\n        }, Easing);\n    }\n\n    /**动画_节点_移动_贝塞尔_时间\n    *@Node 节点\n    *@Target_Pos 目标坐标\n    *@Id 缓动标签\n    *@PointA_Pos 控制点坐标\n    *@PointB_Pos 控制点坐标\n    *@Time 时间\n    *@Call 回调函数\n    */\n    Animation_Node_Move_Bezier_Time(Node_Set: Node, Target_Pos: Vec3, Id: number, PointA_Pos: Vec3, PointB_Pos: Vec3, Time: number = 1, Call: Function = () => { }) {\n        if (Time < 0) {\n            return;\n        }\n        // 定义贝塞尔曲线的控制点\n        /**开始坐标 */\n        const Pos_Start = Node_Set.position.clone();\n        /**控制点1坐标 */\n        const Control_Point1 = Pos_Start.clone().add(PointA_Pos); // 控制点1\n        /**控制点2坐标 */\n        const Control_Point2 = Target_Pos.clone().add(PointB_Pos); // 控制点2\n        const End_Position = Target_Pos.clone();\n        // 创建贝塞尔曲线函数\n        const Bezier = (t) => {\n            return Pos_Start.clone().multiplyScalar(Math.pow(1 - t, 3))\n                .add(Control_Point1.clone().multiplyScalar(3 * Math.pow(1 - t, 2) * t))\n                .add(Control_Point2.clone().multiplyScalar(3 * (1 - t) * Math.pow(t, 2)))\n                .add(End_Position.clone().multiplyScalar(Math.pow(t, 3)));\n        };\n        let Obj_Start = { num: 0 };\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    if (isValid(Node_Set, true)) {\n                        Node_Set.position = Bezier(ratio);\n                    } else {\n                        this.Tween_Stop_Target(Obj_Start);\n                    }\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n    /**\n     * 动画_节点_移动_贝塞尔_速度\n     * @Node 节点\n     * @Target_Pos 目标坐标\n     * @PointA_Pos 控制点坐标\n     * @PointB_Pos 控制点坐标\n     * @Speed 速度\n     * @Call 回调函数\n     */\n    Animation_Node_Move_Bezier_Speed(Node_Set: Node, Target_Pos: Vec3, Id: number, PointA_Pos: Vec3, PointB_Pos: Vec3, Speed: number = 520, Call: Function = () => { }) {\n        // 获取当前节点位置\n        const Pos_Start = Node_Set.position.clone();\n        const End_Position = Target_Pos.clone();\n        let Time = this.Get_Move_Time(Speed, Pos_Start, End_Position);\n        if (Time < 0) {\n            return;\n        }\n        // 定义贝塞尔曲线的控制点\n        const Control_Point1 = Pos_Start.clone().add(PointA_Pos); // 控制点1\n        const Control_Point2 = Target_Pos.clone().add(PointB_Pos); // 控制点2\n        // 创建贝塞尔曲线函数\n        const Bezier = (t) => {\n            return Pos_Start.clone().multiplyScalar(Math.pow(1 - t, 3))\n                .add(Control_Point1.clone().multiplyScalar(3 * Math.pow(1 - t, 2) * t))\n                .add(Control_Point2.clone().multiplyScalar(3 * (1 - t) * Math.pow(t, 2)))\n                .add(End_Position.clone().multiplyScalar(Math.pow(t, 3)));\n        };\n        let Obj_Start = { num: 0 };\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    if (isValid(Node_Set, true)) {\n                        Node_Set.position = Bezier(ratio);\n                    } else {\n                        this.Tween_Stop_Target(Obj_Start);\n                    }\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n    /**动画_节点_移动_贝塞尔_时间\n    *@Node 节点\n    *@Target_Pos 目标坐标\n    *@Id 缓动标签\n    *@PointA_Pos 控制点坐标\n    *@PointB_Pos 控制点坐标\n    *@Time 时间\n    *@Call 回调函数\n    */\n    Animation_Node_Move_Bezier_Time1(Node_Set: Node, Target_Pos: Vec3, Obj_Start: { num: number }, Id: number, PointA_Pos: Vec3, PointB_Pos: Vec3, Time: number = 1, Call: Function = () => { }) {\n        if (Time < 0) {\n            return;\n        }\n        // 定义贝塞尔曲线的控制点\n        /**开始坐标 */\n        const Pos_Start = Node_Set.position.clone();\n        /**控制点1坐标 */\n        const Control_Point1 = Pos_Start.clone().add(PointA_Pos); // 控制点1\n        /**控制点2坐标 */\n        const Control_Point2 = Target_Pos.clone().add(PointB_Pos); // 控制点2\n        const End_Position = Target_Pos.clone();\n        // 创建贝塞尔曲线函数\n        const Bezier = (t) => {\n            return Pos_Start.clone().multiplyScalar(Math.pow(1 - t, 3))\n                .add(Control_Point1.clone().multiplyScalar(3 * Math.pow(1 - t, 2) * t))\n                .add(Control_Point2.clone().multiplyScalar(3 * (1 - t) * Math.pow(t, 2)))\n                .add(End_Position.clone().multiplyScalar(Math.pow(t, 3)));\n        };\n        // let Obj_Start = { num: 0 };\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    if (isValid(Node_Set, true)) {\n                        Node_Set.position = Bezier(ratio);\n                    } else {\n                        this.Tween_Stop_Target(Obj_Start);\n                    }\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n    /**\n     * 动画_节点_移动_抛物线_时间\n     * @param Node_Set 节点\n     * @param Target_Pos 目标坐标\n     * @param Time 时间\n     * @param Obj_Start 开始对象 let Obj_Start = { num: 0 };\n     * @param Id 缓动标签\n     * @param Call 回调函数\n     * @returns\n     */\n    Animation_Node_Move_Parabola_Time(Node_Set: Node, Target_Pos: Vec3, Time: number = 1, Obj_Start: { num: number }, Id: number, Call: Function = () => { }) {\n        if (Time < 0) {\n            return;\n        }\n        // 定义起始坐标和目标坐标\n        const Pos_Start = Node_Set.position.clone();\n        const End_Position = Target_Pos.clone();\n        // 计算控制点，形成抛物线\n        const Control_Point = new Vec3(\n            (Pos_Start.x + End_Position.x) / 2,\n            Math.max(Pos_Start.y, End_Position.y) + Math.abs(Target_Pos.y - Pos_Start.y) * 0.5, // 向上偏移\n            0\n        );\n        // 创建贝塞尔曲线函数\n        const Bezier = (t) => {\n            return Pos_Start.clone().multiplyScalar(Math.pow(1 - t, 2))\n                .add(Control_Point.clone().multiplyScalar(2 * (1 - t) * t))\n                .add(End_Position.clone().multiplyScalar(Math.pow(t, 2)));\n        };\n        const Obj_End = { num: 1 };\n        tween(Obj_Start)\n            .to(Time, Obj_End, {\n                progress: (start: number, end: number, current: number, ratio: number): number => {\n                    if (isValid(Node_Set, true)) {\n                        Node_Set.position = Bezier(ratio);\n                    } else {\n                        this.Tween_Stop_Target(Obj_Start);\n                    }\n                    return ratio;\n                }\n            })\n            .tag(Id)\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n    /**动画_节点数组_移动_速度\n     *@Node 节点\n     *@Position 坐标\n     *@Time 速度\n     *@Call 回调函数\n     */\n    Animation_Nodes_Move_Speed(Node_Set: Node[], Position: Vec3, Speed: number = 1000, Call: Function = () => { }) {\n        if (Speed <= 0) {\n            return;\n        }\n        Node_Set.forEach(element => {\n            let Pos = element.position.clone().add(Position)\n            this.Animation_Node_Move_Speed(element, Pos, Speed);\n        });\n    }\n    /**动画_节点数组_移动_时间\n     *@Node 节点\n     *@Position 坐标\n     *@Time 速度\n     *@Call 回调函数\n     */\n    Animation_Nodes_Move_Time(Node_Set: Node[], Position: Vec3, Time: number = 1, Call: Function = () => { }) {\n        Node_Set.forEach((element, index) => {\n            let Pos = element.position.clone().add(Position)\n            if (index === Node_Set.length - 1) {\n                this.Animation_Node_Move_Time(element, Pos, Time, Call, \"smooth\");\n            } else {\n                this.Animation_Node_Move_Time(element, Pos, Time, null, \"smooth\");\n            }\n        });\n\n    }\n\n\n\n\n\n    /**动画_节点数组_移动_跟随\n     * \n     */\n    Animation_Node_Move_Follow_Speed(Node_Set: Node, Target_Node: Node, Speed: number = 1000, Call: Function = () => { }) {\n        let Next_Pos = this.Get_Distance_Limited(Node_Set.position, Target_Node.position, 25);\n        /**修正坐标 */\n        if (this.Get_Distance(Next_Pos, Target_Node.position) <= 25) {\n            Next_Pos = Target_Node.position.clone();\n            this.Animation_Node_Move_Speed(Node_Set, Next_Pos, Speed, Call);\n        } else {\n            this.Animation_Node_Move_Speed(Node_Set, Next_Pos, Speed, () => {\n                this.Animation_Node_Move_Follow_Speed(Node_Set, Target_Node, Speed, Call);\n            });\n        }\n    }\n\n\n\n\n    /**动画_受击效果\n     *@pNode 节点\n     *@Hit_time 受击时间\n     *@Original_Color 初始颜色\n     */\n    Animation_Hit(Node_Set: Node, Hit_time: number, Call: Function = () => { }, Color: Color = color(255, 255, 255, 255)) {\n        let Component_Sprite = Node_Set.getComponent(Sprite);\n        if (!Component_Sprite) {\n            Node_Set.addComponent(Sprite);\n            Component_Sprite = Node_Set.getComponent(Sprite);\n        }\n        let Original_Color: Color = color(Component_Sprite.color.a, Component_Sprite.color.g, Component_Sprite.color.b, Component_Sprite.color.a);\n        console.log(Original_Color);\n        tween(Component_Sprite)\n            .to(Hit_time, { color: color(255, 0, 0, 255) })\n            .call(() => {\n                if (Color == null) {\n                    Component_Sprite.color = Original_Color;\n                } else {\n                    Component_Sprite.color = Color;\n                }\n                Call?.();\n            })\n            .start();\n    }\n\n\n\n\n    Animation_Hit_Opacity(Node_Set: Node, Hit_time: number, Call: Function = () => { }, Min_Opacity: number = 155, Max_Opacity: number = 255) {\n        let Component_UIOpacity = Node_Set.getComponent(UIOpacity);\n        if (!Component_UIOpacity) {\n            Component_UIOpacity = Node_Set.addComponent(UIOpacity);\n        }\n        Component_UIOpacity.opacity = Max_Opacity;\n        tween(Component_UIOpacity)\n            .to(Hit_time / 2, { opacity: Min_Opacity })\n            .to(Hit_time / 2, { opacity: Max_Opacity })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n    /**\n * 实现节点的死亡效果（缩放 + 透明度 + 爆炸效果）\n * @param Node_Set 目标节点\n * @param Duration 动画总时长\n * @param Call 动画完成后的回调函数\n * @param Min_Scale 最小缩放值（默认 0）\n * @param Max_Scale 最大缩放值（默认 1.5，用于爆炸效果）\n * @param Min_Opacity 最小透明度（默认 0）\n * @param Max_Opacity 最大透明度（默认 255）\n */\n    Animation_Death_Effect(Node_Set: Node, Duration: number, Call: Function = () => { }, Min_Scale: number = 0, Max_Scale: number = 1.5, Min_Opacity: number = 0, Max_Opacity: number = 255) {\n        // 获取或添加 UIOpacity 组件\n        let Component_UIOpacity = Node_Set.getComponent(UIOpacity);\n        if (!Component_UIOpacity) {\n            Component_UIOpacity = Node_Set.addComponent(UIOpacity);\n        }\n        // 初始状态\n        const Initial_Scale = Node_Set.scale.clone();\n        const Initial_Opacity = Max_Opacity;\n\n        // 设置初始透明度\n        Component_UIOpacity.opacity = Initial_Opacity;\n\n        // 缩放 + 透明度 + 爆炸效果\n        tween(Node_Set)\n            .to(Duration * 0.3, { scale: v3(Max_Scale, Max_Scale, 1) }) // 爆炸效果：快速放大\n            .to(Duration * 0.2, { scale: v3(Min_Scale, Min_Scale, 1) }) // 缩小到最小\n            .parallel( // 并行动画：透明度变化\n                tween(Component_UIOpacity)\n                    .to(Duration * 0.5, { opacity: Min_Opacity }) // 透明度逐渐降低\n            )\n            .call(() => {\n                // 恢复初始状态（可选）\n                Node_Set.scale = Initial_Scale;\n                Component_UIOpacity.opacity = Initial_Opacity;\n                console.log(555);\n                // 动画完成后调用回调函数\n                Call?.();\n            })\n            .start();\n    }\n\n    //Easing \"linear\" | \"smooth\" | \"fade\" | \"constant\" | \"quadIn\" | \"quadOut\" | \"quadInOut\" | \"quadOutIn\" | \"cubicIn\" | \"cubicOut\" | \"cubicInOut\" | \"cubicOutIn\" | \"quartIn\" | \"quartOut\" | \"quartInOut\" | \"quartOutIn\" | \"quintIn\" | \"quintOut\" | \"quintInOut\" | \"quintOutIn\" | \"sineIn\" | \"sineOut\" | \"sineInOut\" | \"sineOutIn\" | \"expoIn\" | \"expoOut\" | \"expoInOut\" | \"expoOutIn\" | \"circIn\" | \"circOut\" | \"circInOut\" | \"circOutIn\" | \"elasticIn\" | \"elasticOut\" | \"elasticInOut\" | \"elasticOutIn\" | \"backIn\" | \"backOut\" | \"backInOut\" | \"backOutIn\" | \"bounceIn\" | \"bounceOut\" | \"bounceInOut\" | \"bounceOutIn\";\n\n    /**动画显示节点 */\n    Anim_Show_Node(Node_Set: Node, Time: number = 0.5, Call: Function = () => { }) {\n        let Component = Node_Set.getComponent(UIOpacity);\n        if (!Component) {\n            Node_Set.addComponent(UIOpacity);\n            Component = Node_Set.getComponent(UIOpacity);\n        }\n        Component.opacity = 0;\n        tween(Component)\n            .to(Time, { opacity: 255 }, { easing: \"smooth\" })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n    /**动画_隐藏节点 */\n    Anim_Hide_Node(Node_Set: Node, Time: number = 0.5, Call: Function = () => { }) {\n        let Component = Node_Set.getComponent(UIOpacity);\n        if (!Component) {\n            Node_Set.addComponent(UIOpacity);\n            Component = Node_Set.getComponent(UIOpacity);\n        }\n        Component.opacity = 255;\n        tween(Component)\n            .to(Time, { opacity: 0 }, { easing: \"smooth\" })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n\n    /**动画弹窗 */\n    Anim_Show_Window(Node_Set: Node, Time: number = 0.5, Call: Function = () => { }) {\n        let Scale_Current: Vec3 = v3(Node_Set.scale.x, Node_Set.scale.y, Node_Set.scale.z);\n        Node_Set.scale = v3(0, 0, 1);\n        tween(Node_Set)\n            .to(Time, { scale: Scale_Current }, { easing: \"backOut\" })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n\n\n\n    /**播放帧动画 */\n    Anim_Frame_Play(Anim: Animation, Name: string = null, Speed: number = 1, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        // if (Name == null || Name == \"\") {\n        //     if (Anim.defaultClip) {\n        //         Name = Anim.defaultClip.name;\n        //     } else {\n        //         console.error(\"动画缺失\");\n        //         return;\n        //     }\n        // }\n        // let State: AnimationState = Anim.getState(Name);\n        // State.speed = Speed;\n        Anim.play(Name);\n        Anim.once(Animation.EventType.FINISHED, () => {\n            Call?.();\n        });\n    }\n    /**播放帧动画\n     * @param Name 动画组件\n     * @param Name 动画名字\n     * @param Speed 播放速率\n     * @param Min_Range 播放范围\n     * @param Max_Range 播放范围\n     * @param WrapMode 循环方式\n     * @param RepeatCount 重复次数\n     * @param Delay 延时时间\n     * @param Call 回调\n     *  Tool_Animation.instance.Anim_Frame_Play( Animation, null, 1, null, null, null, null, null, () => {\n     \n        })\n     */\n    Anim_Frame_Play_Plus(Anim: Animation, Name: string = null, Speed: number = 1, Min_Range: number = null, Max_Range: number = null, WrapMode: __private._cocos_animation_types__WrapMode = null, RepeatCount: number = null, Delay: number = 0, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        if (Name == null || Name == \"\") {\n            if (Anim.defaultClip) {\n                Name = Anim.defaultClip.name;\n            } else {\n                console.error(\"动画缺失\");\n                return;\n            }\n        }\n        let State: AnimationState = Anim.getState(Name);\n        if (Speed != null) {\n            State.speed = Speed;\n        }\n        if (WrapMode != null) {\n            State.wrapMode = WrapMode;\n        }\n        if (RepeatCount != null) {\n            State.repeatCount = RepeatCount;\n        }\n        if (Min_Range != null && Max_Range != null && Min_Range <= Max_Range) {\n            State.playbackRange = {\n                min: Min_Range,\n                max: Max_Range\n            }\n        }\n\n        if (Delay != null) {\n            State.delay = Delay;\n        }\n\n        Anim.play(Name);\n        Anim.once(Animation.EventType.FINISHED, () => {\n            Call?.();\n        });\n    }\n    /**切换帧动画 */\n    Anim_Frame_CrossFade(Anim: Animation, Name: string = null, Duration: number = 0, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        Anim.crossFade(Name, Duration);\n        Anim.once(Animation.EventType.FINISHED, () => {\n            Call?.();\n        });\n    }\n    /**恢复帧动画 */\n    Anim_Frame_Resume(Anim: Animation, Name: string = null, Speed: number = 1, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        if (Name == null) {\n            if (Anim.defaultClip) {\n                Name = Anim.defaultClip.name;\n            } else {\n                console.error(\"动画缺失\");\n                return;\n            }\n        }\n        let State: AnimationState = Anim.getState(Name);\n        State.speed = Speed;\n        if (State.isPlaying) {\n            if (State.isPaused) {\n                Anim.resume();\n                Anim.once(Animation.EventType.FINISHED, () => {\n                    Call?.();\n                });\n            } else {\n                this.Anim_Frame_Pause(Anim);\n            }\n        } else {\n            this.Anim_Frame_Play(Anim, Name, Speed, Call);\n        }\n    }\n    /**恢复帧动画 */\n    Anim_Frame_Resume_Plus(Anim: Animation, Name: string = null, Speed: number = 1, Min_Range: number = null, Max_Range: number = null, WrapMode: __private._cocos_animation_types__WrapMode = null, RepeatCount: number = null, Delay: number = 0, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        if (Name == null) {\n            if (Anim.defaultClip) {\n                Name = Anim.defaultClip.name;\n            } else {\n                console.error(\"动画缺失\");\n                return;\n            }\n        }\n        let State: AnimationState = Anim.getState(Name);\n        // console.log(\"是否已被暂停或停止:\", State.isMotionless);\n        // console.log(\"是否已被暂停:\", State.isPaused);\n        // console.log(\" 是否正在播放状态\", State.isPlaying);\n        if (WrapMode != null) {\n            State.wrapMode = WrapMode;\n        }\n        if (RepeatCount != null) {\n            State.repeatCount = RepeatCount;\n        }\n        if (Min_Range != null && Max_Range != null && Min_Range <= Max_Range) {\n            State.playbackRange = {\n                min: Min_Range,\n                max: Max_Range\n            }\n        }\n        State.delay = Delay;\n        State.speed = Speed;\n        if (State.isPlaying) {\n            if (State.isPaused) {\n                Anim.resume();\n                Anim.once(Animation.EventType.FINISHED, () => {\n                    Call?.();\n                });\n            } else {\n                this.Anim_Frame_Pause(Anim);\n            }\n        } else {\n            this.Anim_Frame_Play_Plus(Anim, Name, Speed, Min_Range, Max_Range, WrapMode, RepeatCount, Delay, Call);\n        }\n    }\n    /**暂停帧动画 */\n    Anim_Frame_Pause(Anim: Animation, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        Anim.pause();\n        Anim.off(Animation.EventType.FINISHED);\n        Call?.();\n    }\n    /**停止帧动画 */\n    Anim_Frame_Stop(Anim: Animation, Call: Function = () => { }) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        Anim.stop();\n        Anim.off(Animation.EventType.FINISHED);\n        Call?.();\n    }\n    /**帧动画速度修改 */\n    Anim_Frame_Speed(Anim: Animation, Name: string = null, Speed: number = 1) {\n        if (Anim == null) {\n            console.error(\"动画缺失\");\n            return;\n        }\n        if (Name == null || Name == \"\") {\n            if (Anim.defaultClip) {\n                Name = Anim.defaultClip.name;\n            } else {\n                console.error(\"动画缺失\");\n                return;\n            }\n        }\n        let State: AnimationState = Anim.getState(Name);\n        State.speed = Speed;\n    }\n\n\n    /**播放骨骼动画 */\n    Anim_Skeleton_Play(Skeleton: sp.Skeleton, Skin: \"default\" | (string & {}), Track_Index: number, Anim_Name: string, Loop: boolean, Call: Function = () => { }) {\n        Skeleton.setSkin(Skin);\n        //@ts-ignore\n        Skeleton._updateSkeletonData();\n        Skeleton.setAnimation(Track_Index, Anim_Name, Loop);\n        Skeleton.setCompleteListener(() => {\n            Skeleton.setCompleteListener(null);\n            Call?.();\n        })\n    }\n\n\n    /**动画_心跳效果 */\n    Animation_Heartbeat(Node_Set: Node) {\n        tween(Node_Set)\n            .repeatForever(\n                tween()\n                    .to(0.5, { scale: v3(0.8, 0.8, 1) })\n                    .to(0.3, { scale: v3(0.9, 0.9, 1) })\n                    .to(0.45, { scale: v3(0.75, 0.75, 1) })\n                    .to(0.3, { scale: v3(1, 1, 1) })\n            )\n            .start()\n    }\n\n    /**动画_提示效果 */\n    Animation_Tip(Node_Set: Node) {\n        tween(Node_Set)\n            .repeatForever(\n                tween()\n                    .to(0.3, { scale: v3(0.8, 0.8, 1) })\n                    .to(0.3, { scale: v3(1, 1, 1) })\n                    .to(0.1, { angle: 10 })\n                    .to(0.1, { angle: -20 })\n                    .to(0.1, { angle: 20 })\n                    .to(0.1, { angle: -20 })\n                    .to(0.1, { angle: 10 })\n                    .to(0.1, { angle: 0 })\n                    .delay(1)\n            )\n            .start()\n    }\n\n    Anim_On(Node_Set: Node, Call: Function = () => { }) {\n        let Component_UIOpacity = Tool_UI.instance.Component_Get(Node_Set, UIOpacity);\n        // let Time = 0.25;\n        // tween(Node_Set)\n        //     .to(Time, { scale: v3(0.8, 0.8, 1) })\n        //     .start();\n        // tween(Component_UIOpacity)\n        //     .to(Time, { opacity: 100 })\n        //     .call(() => {\n        //         Call?.();\n        //     })\n        //     .start();\n\n        let Time = 0.15;\n        tween(Node_Set)\n            .to(Time, { scale: v3(0.95, 0.95, 1) })\n            .start();\n        tween(Component_UIOpacity)\n            .to(Time, { opacity: 200 })\n            .call(() => {\n                Call?.();\n            })\n            .start();\n    }\n\n    Anim_Off(Node_Set: Node) {\n        let Component_UIOpacity = Tool_UI.instance.Component_Get(Node_Set, UIOpacity);\n        // tween(Node_Set)\n        //     .to(0.17, { scale: v3(1.05, 1.05, 1) })\n        //     .to(0.08, { scale: v3(1, 1, 1) })\n        //     .start();\n        // tween(Component_UIOpacity)\n        //     .to(0.25, { opacity: 255 })\n        //     .start();\n\n        tween(Node_Set)\n            .to(0.1, { scale: v3(1.05, 1.05, 1) })\n            .to(0.05, { scale: v3(1, 1, 1) })\n            .start();\n        tween(Component_UIOpacity)\n            .to(0.15, { opacity: 255 })\n            .start();\n    }\n\n\n\n    /**\n     * 溶解动画\n     * @param Node_Set 溶解节点\n     * @param Set_Material 溶解材质 let Set_Material = await this.Resoure_Data.Load_Material(\"Effect/dissolve\");\n     * @param Time 时间\n     * @param Call 回调\n     */\n    async Anim_Dissolve(Node_Set: Node, Set_Material: Material, Time: number = 1, Call: Function = () => { }) {\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Set_Material)) {\n            return;\n        }\n        return new Promise<void>(res => {\n            const Sp = Node_Set.getComponent(Sprite);\n            // 确保为每个节点创建独立的材质实例\n            if (!Sp.customMaterial) {\n                Sp.customMaterial = new Material();// 克隆材质\n                Sp.customMaterial.copy(Set_Material);\n            } else {\n                Sp.customMaterial.copy(Set_Material); // 如果已经存在，重新复制\n            }\n            Sp.customMaterial.setProperty('dissolveThreshold', 0);\n            let Obj_Start = { num: 0 };\n            const Obj_End = { num: 1 };\n            tween(Obj_Start)\n                .to(Time, Obj_End, {\n                    progress: (start: number, end: number, current: number, ratio: number): number => {\n                        const Current_Num = 1 * ratio;//1 * ratio     0.3 + 0.7 * ratio\n                        Sp.customMaterial.setProperty('dissolveThreshold', Current_Num);\n                        return Current_Num;\n                    }\n                })\n                .call(() => {\n                    res();\n                    Call?.();\n                })\n                .start();\n        });\n    }\n\n\n    /**\n     * 获取距离目标坐标最近的点的索引和距离\n     * @param Position_World 世界坐标\n     * @param Target_Position_World_Arr 目标世界坐标数组\n     * @returns 返回最近点的索引和距离，如果数组为空则返回 null\n     */\n    Get_Min_Distance_Pos_Arr(Position_World: Vec3, Target_Position_World_Arr: Vec3[]): { Index: number; Distance: number } | null {\n        // 参数校验\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(Position_World) || !Tool_Other.instance.Get_Type_Is_Abnormal(Target_Position_World_Arr)) {\n            console.warn(\"类型异常\");\n            return null;\n        }\n        // 检查数组是否为空\n        if (Target_Position_World_Arr.length === 0) {\n            return null;\n        }\n        // 初始化最小距离和索引\n        let Min_Index = 0;\n        let Min_Distance = Number.MAX_VALUE;\n        // 遍历数组，找到距离最小的点\n        for (let i = 0; i < Target_Position_World_Arr.length; i++) {\n            const Distance = this.Get_Distance(Position_World, Target_Position_World_Arr[i]);\n            if (Distance < Min_Distance) {\n                Min_Distance = Distance;\n                Min_Index = i;\n            }\n        }\n        return {\n            Index: Min_Index,\n            Distance: Min_Distance\n        };\n    }\n    // /**\n    //  * 获取距离目标坐标最近的点的索引和距离\n    //  * @param Position_World 世界坐标\n    //  * @param Target_Parent_Node 父节点\n    //  * @returns 返回最近子节点的索引和距离，如果没有子节点则返回 null\n    //  */\n    // Get_Min_Distance_Node(Position_World: Vec3, Target_Parent_Node: Node): { Index: number; Distance: number } | null {\n    //     // 参数校验\n    //     if (!Tool_Other.instance.Get_Type_Is_Abnormal(Position_World) || !Tool_Other.instance.Get_Type_Is_Abnormal(Target_Parent_Node)) {\n    //         console.warn(\"类型异常\");\n    //         return null;\n    //     }\n    //     // 检查子节点数量\n    //     const Children = Target_Parent_Node.children;\n    //     if (Children.length === 0) {\n    //         return null;\n    //     }\n    //     // 初始化最小距离和索引\n    //     let Min_Index = 0;\n    //     let Min_Distance = Number.MAX_VALUE;\n    //     // 遍历子节点，找到距离最小的节点\n    //     for (let i = 0; i < Children.length; i++) {\n    //         const Child_Position = Children[i].worldPosition;\n    //         const Distance = this.Get_Distance(Position_World, Child_Position);\n    //         if (Distance < Min_Distance) {\n    //             Min_Distance = Distance;\n    //             Min_Index = i;\n    //         }\n    //     }\n    //     return {\n    //         Index: Min_Index,\n    //         Distance: Min_Distance\n    //     };\n    // }\n\n    /**\n     * 查找距离给定世界坐标最近的子节点\n     * @param Position_World - 目标世界坐标(Vec3类型)\n     * @param Target_Nodes - 要搜索的父节点或节点数组(Node|Node[])\n     * @returns 返回包含最近节点索引和距离的对象，若无有效节点则返回null\n     */\n    Get_Min_Distance_Node(Position_World: Vec3, Target_Nodes: Node | Node[]): { Index: number; Distance: number } | null {\n        // 参数有效性检查\n        if (!Position_World || !Target_Nodes) {\n            console.warn(\"参数无效:必须提供Position_World和Target_Nodes\");\n            return null;\n        }\n        // 统一处理为要遍历的节点数组\n        let NodesToCheck: Node[] = [];\n        if (Array.isArray(Target_Nodes)) {\n            NodesToCheck = Target_Nodes;\n        } else if (Target_Nodes.isValid && Target_Nodes.children) {\n            NodesToCheck = Target_Nodes.children;\n        } else {\n            return null;\n        }\n        // 检查空数组情况\n        if (NodesToCheck.length === 0) {\n            return null;\n        }\n        // 初始化结果\n        let Min_Index = -1;\n        let Min_Distance = Number.MAX_VALUE;\n        // 遍历查找最近节点\n        for (let i = 0; i < NodesToCheck.length; i++) {\n            const Node = NodesToCheck[i];\n            // 检查节点有效性\n            if (!Node?.isValid || !Node.worldPosition) continue;\n            // 计算距离\n            const Child_Position = NodesToCheck[i].worldPosition;\n            const Distance = this.Get_Distance(Position_World, Child_Position);\n            // 更新最近节点\n            if (Distance < Min_Distance) {\n                Min_Index = i;\n                Min_Distance = Distance;\n            }\n        }\n        return Min_Index >= 0 ? { Index: Min_Index, Distance: Min_Distance } : null;\n    }\n\n\n}\n\n\n"]}