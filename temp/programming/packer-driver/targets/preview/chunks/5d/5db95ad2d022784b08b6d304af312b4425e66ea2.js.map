{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/framework/manager/DesignManager.ts"],"names":["DesignManager","JsonAsset","resManager","constructor","tb2Arr","tb2Obj","tbType2Arr","config","instance","_instance","loadAllDesignTables","bundleName","path","onProgress","onComplete","loadAsset","percent","err","asset","json","tbName","tbData","initTable","releaseAsset","console","info","i","row","id","hasOwnProperty","type","tmpArr","push","name","val","val2","getTable","tableName","getRowById","getRowsByType","getLastRow","tb","length","getFirstIdByType","designManager"],"mappings":"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","sourcesContent":["import { JsonAsset } from \"cc\";\nimport { resManager } from \"./ResManager\";\n\nclass DesignManager {\n\n    // 单例\n    private static _instance: DesignManager;\n    private constructor() { };\n    public static get instance(): DesignManager {\n        if (!this._instance) {\n            this._instance = new DesignManager();\n        }\n        return this._instance;\n    }\n\n    // 原始对象 {表名:[记录1]]}\n    private tb2Arr: object = {};\n    // id索引(唯一)对象 {表名:{id:记录}}\n    private tb2Obj: object = {};\n    // type索引(一对多) {表名:{type:[记录]}\n    private tbType2Arr: object = {};\n\n    // 零散数据表\n    public config: any = {};\n\n    loadAllDesignTables(bundleName: string, path: string, onProgress?: Function, onComplete?: Function) {\n        resManager.loadAsset(bundleName, path, JsonAsset, (percent: number) => {\n            if (onProgress) {\n                onProgress(percent);\n            }\n        }, (err, asset) => {\n            if (err) {\n                return;\n            }\n            this.tb2Arr = asset.json;\n\n            // 数据格式化\n            for (let tbName in this.tb2Arr) {\n                let tbData = this.tb2Arr[tbName];\n                this.initTable(tbName, tbData);\n            }\n\n            // 释放资源\n            resManager.releaseAsset(asset);\n\n            if (onComplete) {\n                onComplete();\n            }\n        });\n    }\n\n    initTable(tbName: string, tbData: object) {\n        console.info(\"init table\", tbName);\n        this.tb2Obj[tbName] = {};\n        for (let i in tbData) {\n            let row = tbData[i];\n            // id索引\n            this.tb2Obj[tbName][row.id] = row;\n            if (row.hasOwnProperty(\"type\") && row.type != \"\" && row.type != null) {\n                // type索引\n                if (!this.tbType2Arr[tbName]) {\n                    this.tbType2Arr[tbName] = {};\n                }\n                if (!this.tbType2Arr[tbName][row.type]) {\n                    this.tbType2Arr[tbName][row.type] = [];\n                }\n                let tmpArr = this.tbType2Arr[tbName][row.type];\n                tmpArr.push(row);\n            }\n            if (tbName == \"config\") {\n                this.config[row.name] = row.val || row.val2 ;\n            }\n        }\n    }\n\n    getTable(tableName: string) {\n        return this.tb2Arr[tableName];\n    }\n\n    getRowById(tableName: string, id: number) {\n        return this.tb2Obj[tableName][id];\n    }\n\n    getRowsByType(tableName: string, type: number | string) {\n        if (this.tbType2Arr[tableName] && this.tbType2Arr[tableName][type]) {\n            return this.tbType2Arr[tableName][type];\n        }\n        return [];\n    }\n\n    getLastRow(tableName: string) {\n        let tb = this.getTable(tableName);\n        return tb[tb.length - 1];\n    }\n\n    getFirstIdByType(type: number) {\n        return type * 10 + 1;\n    }\n\n}\n\nexport const designManager = DesignManager.instance;\n"]}