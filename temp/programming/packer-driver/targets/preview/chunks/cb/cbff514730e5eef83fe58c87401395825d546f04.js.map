{"version":3,"sources":["file:///D:/CYDW/WoChengYuTeNiu/assets/Script/UI/Bg.ts"],"names":["_decorator","Component","find","UITransform","v3","Tool_Event","ccclass","property","Bg","start","instance","Event_On","Screen_Change","Screen_Update_Vertical","Event_Name","Screen_Mode","scheduleOnce","Screen_Update_Horizontal","H_Canvas","getComponent","height","H","M","node","scale","console","log","onDestroy","Event_Off"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,E,OAAAA,E;;AAChDC,MAAAA,U,iBAAAA,U;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;oBAGjBQ,E,WADZF,OAAO,CAAC,IAAD,C,gBAAR,MACaE,EADb,SACwBP,SADxB,CACkC;AAG9BQ,QAAAA,KAAK,GAAG;AACJ;AAAA;AAAA,wCAAWC,QAAX,CAAoBC,QAApB,CAA6B,eAA7B,EAA8C,KAAKC,aAAnD,EAAkE,IAAlE;AACA,eAAKC,sBAAL;AACH;;AAEDD,QAAAA,aAAa,CAACE,UAAD,EAAaC,WAAb,EAA0B;AACnC,eAAKC,YAAL,CAAkB,MAAM;AACpB,gBAAID,WAAW,IAAI,YAAnB,EAAiC;AAC7B,mBAAKE,wBAAL;AACH,aAFD,MAEO;AACH,mBAAKJ,sBAAL;AACH;AACJ,WAND;AAOH;;AAGDI,QAAAA,wBAAwB,GAAG;AACvB,cAAIC,QAAQ,GAAGhB,IAAI,CAAC,QAAD,CAAJ,CAAeiB,YAAf,CAA4BhB,WAA5B,EAAyCiB,MAAxD;AACA,cAAIC,CAAC,GAAG,IAAR,CAFuB,CAEX;;AACZ,cAAIC,CAAC,GAAGJ,QAAQ,GAAGG,CAAnB;AAGA,eAAKE,IAAL,CAAUC,KAAV,GAAkBpB,EAAE,CAACkB,CAAD,EAAIA,CAAJ,EAAO,CAAP,CAApB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,IAAL,CAAUC,KAAtB;AACH;;AAEDX,QAAAA,sBAAsB,GAAG;AACrB,cAAIK,QAAQ,GAAGhB,IAAI,CAAC,QAAD,CAAJ,CAAeiB,YAAf,CAA4BhB,WAA5B,EAAyCiB,MAAxD;AACA,cAAIC,CAAC,GAAG,IAAR,CAFqB,CAET;;AACZ,cAAIC,CAAC,GAAGJ,QAAQ,GAAGG,CAAnB;AACA,eAAKE,IAAL,CAAUC,KAAV,GAAkBpB,EAAE,CAACkB,CAAD,EAAIA,CAAJ,EAAO,CAAP,CAApB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,IAAL,CAAUC,KAAtB,EALqB,CAOrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,SA5C6B,CA8C9B;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;;;AAEAG,QAAAA,SAAS,GAAG;AACRF,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA;AAAA;AAAA,wCAAWhB,QAAX,CAAoBkB,SAApB,CAA8B,eAA9B,EAA+C,KAAKhB,aAApD,EAAmE,IAAnE;AACH;;AAlE6B,O","sourcesContent":["import { _decorator, Component, find, Node, UITransform, v3 } from 'cc';\r\nimport { Tool_Event } from '../Tool/Tool_Event';\r\nimport { Tool_UI } from '../Tool/Tool_UI';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Bg')\r\nexport class Bg extends Component {\r\n\r\n\r\n    start() {\r\n        Tool_Event.instance.Event_On(\"Screen_Update\", this.Screen_Change, this);\r\n        this.Screen_Update_Vertical();\r\n    }\r\n\r\n    Screen_Change(Event_Name, Screen_Mode) {\r\n        this.scheduleOnce(() => {\r\n            if (Screen_Mode == \"Horizontal\") {\r\n                this.Screen_Update_Horizontal();\r\n            } else {\r\n                this.Screen_Update_Vertical();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    Screen_Update_Horizontal() {\r\n        let H_Canvas = find(\"Canvas\").getComponent(UITransform).height\r\n        let H = 1138//this.node.getComponent(UITransform).height\r\n        let M = H_Canvas / H;\r\n\r\n\r\n        this.node.scale = v3(M, M, 1);\r\n        console.log(this.node.scale);\r\n    }\r\n\r\n    Screen_Update_Vertical() {\r\n        let H_Canvas = find(\"Canvas\").getComponent(UITransform).height\r\n        let H = 1138//this.node.getComponent(UITransform).height\r\n        let M = H_Canvas / H;\r\n        this.node.scale = v3(M, M, 1);\r\n        console.log(this.node.scale);\r\n\r\n        // /**游戏画布高度 */\r\n        // let Width_Canvas = Tool_UI.instance.Get_Width_Canvas();\r\n        // /**游戏设计高度 */\r\n        // let Width_Design = Tool_UI.instance.Get_Width_Design();\r\n        // let Size = Width_Canvas / Width_Design;\r\n        // this.node.scale = v3(Size, Size, 1);\r\n        // console.log(\"竖屏游戏背景适配\",Size);\r\n\r\n    }\r\n\r\n    // update(deltaTime: number) {\r\n\r\n    //     // let W_Canvas=find(\"Canvas\").getComponent(UITransform).width;\r\n    //     // let W = this.node.getComponent(UITransform).width;\r\n    //     // let M = W_Canvas / W;\r\n\r\n    //     let H_Canvas = find(\"Canvas\").getComponent(UITransform).height\r\n    //     let H = 1138//this.node.getComponent(UITransform).height\r\n    //     let M = H_Canvas / H;\r\n\r\n\r\n    //     this.node.scale = v3(M, M, 1);\r\n    //     console.log(M);\r\n\r\n    // }\r\n\r\n    onDestroy() {\r\n        console.log(\"销毁\");\r\n\r\n        Tool_Event.instance.Event_Off(\"Screen_Update\", this.Screen_Change, this);\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}