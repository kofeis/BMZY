{"version":3,"sources":["file:///D:/Ugit_Project/ZhiShangGouBuDao/assets/Script/Other/GeSdk/GravityPlatform.ts"],"names":["GravityPlatform","sys","GravityAnalyticsAPI","geInstance","Data_Get","Data_Name","Default_Value","Data_Value","Data_Raw","localStorage","getItem","JSON","parse","undefined","e","console","error","Data_Set","Data","setItem","stringify","initGeSdk","clientId","log","config","name","debugMode","autoTrack","appLaunch","appShow","appHide","accessToken","setupAndStart","initialize","version","openid","enable_sync_attribution","then","res","catch","err","onLevelStart","properties","track","onLevelSuccess","onLevelFail","onLevelGiveUp","onAdRequest","onAdCancel","onAdFinish","platform","Platform","WECHAT_GAME","videoAdId","adShowEvent","custom_param","instance"],"mappings":"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","sourcesContent":["import { sys } from \"cc\";\r\nimport GravityAnalyticsAPI from \"./gravityengine.mg.cocoscreator.min.js\";\r\n// import { Resoure_Data } from \"../../Tool/Resoure_Data\";\r\ndeclare global {\r\n    interface Window {\r\n        ge: GravityPlatform;\r\n    }\r\n}\r\nexport class GravityPlatform {\r\n\r\n    public static readonly instance = new GravityPlatform();\r\n\r\n    private geInstance: GravityAnalyticsAPI = null;\r\n\r\n    Data_Get(Data_Name: string, Default_Value: any = null): any {\r\n        try {\r\n            let Data_Value;\r\n            const Data_Raw = sys.localStorage.getItem(Data_Name);\r\n            Data_Value = Data_Raw ? JSON.parse(Data_Raw) : null;\r\n            // 返回数据或默认值\r\n            return Data_Value !== undefined ? Data_Value : Default_Value;\r\n        } catch (e) {\r\n            console.error(`[Storage] 读取 ${Data_Name} 失败:`, e);\r\n            return Default_Value;\r\n        }\r\n    }\r\n\r\n    Data_Set(Data_Name: string, Data: any): void {\r\n        try {\r\n            sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\r\n        } catch (e) {\r\n            console.error(`[Storage] 保存 ${Data_Name} 失败:`, e);\r\n        }\r\n    }\r\n\r\n    // 初始化\r\n    initGeSdk(clientId: string) {\r\n        console.log(\"初始化initGeSdk\");\r\n\r\n        let config: any = {\r\n            clientId: clientId,\r\n            name: \"ge\",\r\n            debugMode: \"none\", // \"debug\";\r\n            autoTrack: {\r\n                appLaunch: true,\r\n                appShow: true,\r\n                appHide: true\r\n            },\r\n            accessToken: \"Jlfx3rqA6jew02Ywtx7iq8HG1QfmpOCZ\", // 微信\r\n        };\r\n\r\n        this.geInstance = new GravityAnalyticsAPI(config);\r\n        this.geInstance.setupAndStart();\r\n\r\n        if (this.Data_Get(\"IsGaInitialize\") != false) {\r\n            this.geInstance.initialize({\r\n                name: clientId,\r\n                version: 1,\r\n                openid: clientId,\r\n                enable_sync_attribution: false,\r\n            })\r\n            .then((res) => {\r\n                console.log(\"GravityAnalyticsAPI initialize success\", res);\r\n                this.Data_Set(\"IsGaInitialize\", true);\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"GravityAnalyticsAPI initialize failed\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 上报关卡开始事件\r\n     * @param properties { \"$user_level\": 1 }\r\n     */\r\n    onLevelStart(properties: any) {\r\n        this.geInstance.track(\"LevelStart\", properties);\r\n        console.log(\"上报关卡开始事件\");\r\n    }\r\n\r\n    /**\r\n     * 上报通关事件\r\n     * @param properties { \"$user_level\": 1 }\r\n     */\r\n    onLevelSuccess(properties: any) {\r\n        this.geInstance.track(\"LevelSuccess\", properties);\r\n        console.log(\"上报通关事件\");\r\n    }\r\n\r\n    /**\r\n     * 上报关卡失败事件\r\n     * @param properties { \"$user_level\": 1 }\r\n     */\r\n    onLevelFail(properties: any) {\r\n        this.geInstance.track(\"LevelFail\", properties);\r\n        console.log(\"上报关卡失败事件\");\r\n    }\r\n\r\n    /**\r\n     * 上报放弃关卡事件\r\n     * @param properties { \"$user_level\": 1 }\r\n     */\r\n    onLevelGiveUp(properties: any) {\r\n        this.geInstance.track(\"LevelGiveUp\", properties);\r\n        console.log(\"上报放弃关卡事件\");\r\n    }\r\n\r\n    onAdRequest(properties: any) {\r\n    }\r\n\r\n    onAdCancel(properties: any) {\r\n    }\r\n\r\n    onAdFinish() {\r\n        // 只有微信小游戏需要上报，抖音小游戏引力引擎会自动拉取\r\n        if (sys.platform == sys.Platform.WECHAT_GAME) {\r\n            console.log(\"微信上报广告结束事件\");\r\n            let videoAdId = \"adunit-c6a790cad3e75438\";\r\n            this.geInstance.adShowEvent(\"reward\", videoAdId, {\r\n                custom_param: \"激励视频\"\r\n            });\r\n        }\r\n    };\r\n}\r\n"]}