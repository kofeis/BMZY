{"version":3,"sources":["file:///D:/CYDW/WoChengYuTeNiu/assets/Script/Other/OpenContext.ts"],"names":["_decorator","Component","sys","ccclass","property","OpenContext","openContext","onLoad","start","platform","Platform","WECHAT_GAME","WECHAT_MINI_PROGRAM","wx","getOpenDataContext","testLevel","console","error","_reportUserLevel","postMessage","type","event","update","deltaTime","level","listener","target","setUserCloudStorage","KVDataList","key","value","success","apply","fail","err","log"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiCC,MAAAA,G,OAAAA,G;;;;;;;;;OAChD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;6BAGjBK,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb,SACiCJ,SADjC,CAC2C;AAAA;AAAA;AAAA,eAE/BK,WAF+B;AAAA;;AAEb;AAG1BC,QAAAA,MAAM,GAAG,CAER;;AAEDC,QAAAA,KAAK,GAAG;AAGJ,cAAIN,GAAG,CAACO,QAAJ,KAAiBP,GAAG,CAACQ,QAAJ,CAAaC,WAA9B,IAA6CT,GAAG,CAACO,QAAJ,KAAiBP,GAAG,CAACQ,QAAJ,CAAaE,mBAA/E,EAAoG;AAChG;AACA,iBAAKN,WAAL,GAAmBO,EAAE,CAACC,kBAAH,EAAnB,CAFgG,CAEpD;;AAE5C,gBAAIC,SAAS,GAAG,CAAhB,CAJgG,CAI7E;;AACnBC,YAAAA,OAAO,CAACC,KAAR,CAAc,MAAd;;AACA,iBAAKC,gBAAL,CAAsBH,SAAtB,EAAiC,MAAM;AACnCC,cAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACA,mBAAKX,WAAL,CAAiBa,WAAjB,CAA6B;AAAEC,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eAA7B,EAFmC,CAE+B;AACrE,aAHD;AAIH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEOL,QAAAA,gBAAgB,CAACM,KAAD,EAAgBC,QAAhB,EAAqCC,MAArC,EAAmD;AAGvE;AACAb,UAAAA,EAAE,CAACc,mBAAH,CAAuB;AAAE;AACrBC,YAAAA,UAAU,EAAE,CACR;AAAEC,cAAAA,GAAG,EAAE,OAAP;AAAgBC,cAAAA,KAAK,OAAKN;AAA1B,aADQ,CADO;AAKnBO,YAAAA,OAAO,EAAE,MAAM;AACXN,cAAAA,QAAQ,QAAR,IAAAA,QAAQ,CAAEO,KAAV,CAAgBN,MAAhB;AACH,aAPkB;AASnBO,YAAAA,IAAI,EAAGC,GAAD,IAAc;AAChBlB,cAAAA,OAAO,CAACmB,GAAR,CAAY,qBAAZ,EAAmCD,GAAnC;AACH;AAXkB,WAAvB;AAaH;;AA9CsC,O","sourcesContent":["import { _decorator, Component, Node, SubContextView, sys } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('OpenContext')\r\nexport class OpenContext extends Component {\r\n\r\n    private openContext: any; // 子域对象\r\n\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n\r\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\r\n            // @ts-ignore\r\n            this.openContext = wx.getOpenDataContext(); // 调用微信接口获取子域句柄，使用时需要检查\r\n\r\n            let testLevel = 5; // 测试数据\r\n            console.error(\"测试数据\");\r\n            this._reportUserLevel(testLevel, () => {\r\n                console.error(\"测试数据完成\");\r\n                this.openContext.postMessage({ type: 'engine', event: 'level' }); // level为自定义key，如果没有特殊需求，建议直接用。否则你的变动比较大，调整wx-sub-project/index.js的对应的key和this._reportUserLevel的key都需要对齐\r\n            });\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    private _reportUserLevel(level: number, listener?: Function, target?: any) {\r\n\r\n\r\n        // @ts-ignore\r\n        wx.setUserCloudStorage({ //调用微信接口上报关卡等级信息，用于好友圈排行\r\n            KVDataList: [\r\n                { key: 'level', value: `${level}` }\r\n            ],\r\n\r\n            success: () => {\r\n                listener?.apply(target);\r\n            },\r\n\r\n            fail: (err: any) => {\r\n                console.log('report level error:', err);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}