{"version":3,"sources":["file:///D:/Cocos/Project/XH/assets/Script/Tool/Resoure_Data.ts"],"names":["_decorator","Component","Node","Prefab","AudioClip","director","AudioSource","sys","v3","SpriteFrame","view","game","Game","assetManager","Texture2D","isValid","Material","JsonAsset","Font","AnimationClip","UITransform","Tool_Event","Tool_Other","PlatformApi","ccclass","property","Scene_Change_Type","ScreenMode","Resoure_Data","tooltip","constructor","Bundles","_Cache_Scene","_Cache_Prefab","_Cache_SpriteFrame","_Cache_Texture2D","_Cache_AudioClip","_Cache_Material","_Cache_Json","_Cache_AnimationClip","_Cache_Font","Url","Game_Data","Account","Password","Game_Versions","Game_Mode","Is_FirstStartUp","Is_NewDay","Login_Time","Login_Days","Login_ConsecutiveDays","GameTime_Total","GameTime_Today","Save_Slot","Save_Time","Save_Data","关卡进度","关卡分数","关卡时间","关卡星级","Vibration_Switch","Sound_Switch","Sound_Volume","Sound_AudioSource","Music_Switch","Music_Volume","Music_AudioSource","Sound_Long_AudioSource","FrameRate","LastTime","FrameRate_Schedule","Time_Current","performance","now","Time_Elapsed","console","debug","toFixed","Check_FrameRate","unschedule","schedule","update","Dt","onEnable","onDisable","onDestroy","onLoad","log","Director_AddPersistRootNode","node","Game_FrameRate_Set","Director_Scheduler_TimeScale_Set","window","addEventListener","Event","Screen_Update","Screen_Width","innerWidth","Screen_Height","innerHeight","Visible_Size","getVisibleSize","Visible_Width","width","Visible_Height","height","error","instance","Event_Dispatch","on","EVENT_HIDE","EVENT_SHOW","document","visibilityState","addComponent","parent","start","Save_Get","Is_First_StartUp","Information_Printing","Load_Bundle","First_Start","Data_Get","Get_Type_Is_Abnormal","Data_Set","Fetch_Data","Response","fetch","cache","method","headers","Status","status","Data","json","Post_Data","body","JSON","stringify","Update_Data","Update_Data_All","Params","UpdateData","QueryString","URLSearchParams","toString","ItemsToUpdate","Array","isArray","Error","UpdateResults","Promise","all","map","item","id","Delete_Data","Delete_Data_All","ItemsToDelete","DeleteResults","then","success","catch","Save_Set","undefined","Data_Name","localStorage","setItem","e","Default_Value","Data_Value","Data_Raw","getItem","parse","Data_Delete","removeItem","Data_Is_Exist","Data_Update","New_Data","Existing_Data","Updated_Data","Data_Get_All_Keys","Object","keys","Data_Get_All","Keys","All_Data","forEach","Key","Clear_All_Data","clear","Copy_Deep","Obj","Cache","WeakMap","has","get","Date","RegExp","Map","Copied_Map","set","Value","Set","Copied_Set","add","Copied_Array","Item","Copied_Obj","prototype","hasOwnProperty","call","Copy_Shallow","slice","Vibration_Switch_Set","Switch","Vibration_Switch_Get","Sound_Switch_Set","element","volume","Sound_Switch_Get","Sound_Volume_Set","Volume","Music_Switch_Set","Music_Switch_Get","Music_Volume_Set","Audio_Switch_Set","Audio_Volume_Set","Sound_Play","Path","Res","Load_AudioClip","loop","playOneShot","Music_Play","Call","warn","enabled","stop","clip","play","Sound_Long_play","Music_Pause","pause","Music_Resume","Music_Stop","Sound_Long_Pause","Sound_Long_Resume","Sound_Long_Stop","Sound_Long_Stop_All","i","length","Load_Remote_ImageAsset","Time_Start","resolve","reject","loadRemote","ext","Err","Time_Finish","Time_Total","Texture","image","Sprite_Frame","texture","Load_Remote_ImageAsset_","Load_Remote_audio","Bundle_Name","loadBundle","Load_Dir","Type","loadDir","finished","total","onProgress","Load_Scene","Progress_Mask","Progress_Bar","Value_Label","Mode","Horizontal","W_PM","getComponent","H_PM","W_PB","H_PB","position","Math","floor","loadScene","Finished","Total","Schedule","Number","string","Scene_Name_Current","Load_Prefab","load","Load_SpriteFrame","Load_Texture","Load_Material","Load_Json","Load_AnimationClip","Load_Font","Release_Resource","Release_Resource_All","Game_Toggle_Fullscreen","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","Game_UIScale_Set","scale","style","transform","Game_Restart","restart","Game_Resume","resume","Game_Pause","Game_End","end","frameRate","Director_Run","SceneAsset","runSceneImmediate","Director_Resume","Director_Pause","Director_End","Node_Set","addPersistRootNode","Director_RemovePersistRootNode","removePersistRootNode","Scale","getScheduler","setTimeScale","Director_Scheduler_TimeScale_Get","getTimeScale","isNative","isBrowser","isMobile","isLittleEndian","isXR","Get_Current_Full_Time","Get_Timestamp","Get_Unix_Timestamp","Get_Timestamp_From_Date","year","month","day","date","getTime","Get_Time_Difference","Start_Timestamp","Fnish_Timestamp","Get_Current_Year","getFullYear","Get_Current_Month","getMonth","Get_Current_Date","getDate","Get_Current_Hour","getHours","Get_Current_Minute","getMinutes","Get_Current_Second","getSeconds","Get_Current_Millisecond","getMilliseconds","Get_Current_Day","getDay","Current_Time","Year","Month","Hour","Minute","Second","MilliSecond","Day"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, AudioClip, director, resources, AudioSource, sys, Label, find, CCBoolean, CCInteger, v3, Vec3, debug, PhysicsSystem2D, Sprite, color, LabelOutline, log, SpriteFrame, EPhysics2DDrawFlags, v2, SpriteAtlas, view, game, Game, Vec2, assetManager, Texture2D, isValid, macro, Material, JsonAsset, Font, AnimationClip, AssetManager, Constructor, ImageAsset, Scene, UITransform, SceneAsset, ProgressBar } from 'cc';\nimport { Tool_Event } from './Tool_Event';\nimport { Tool_Other } from './Tool_Other';\nimport { Tool_UI } from './Tool_UI';\nimport { PlatformApi } from '../Other/SDK/PlatformApi';\n\nconst { ccclass, property } = _decorator;\n\n\n\n/**场景改变类型 */\nexport enum Scene_Change_Type {\n    /**自动 */\n    Automatic,\n    /**手动 */\n    Manual,\n    /**结束 */\n    Finish,\n}\n\n\n/**屏幕模式 */\nexport enum ScreenMode {\n    /**横屏 */\n    Horizontal,\n    /**竖屏 */\n    Vertical,\n}\n\nexport interface Interface {\n    Interface: number,\n}\n\nexport type Type = {\n    Type: number;\n}\n\n\n/**游戏数据 */\nexport interface Interface_GameData {\n\n    /**账户 */\n    Account: \"None\" | \"Visitors\" | (string & {}),\n\n    /**密码 */\n    Password: \"666666\" | (string & {}),\n\n    /**游戏版本 */\n    Game_Versions: \"0.0.1\" | (string & {});\n\n    /**游戏模式 */\n    Game_Mode: \"Default\" | \"Easy\" | \"Normal\" | \"Hard\" | (string & {});\n\n    /**是否首次启动 */\n    Is_FirstStartUp: boolean;\n    /**是否新的一天 */\n    Is_NewDay: boolean;\n\n    /**登录时间 */\n    Login_Time: number;\n    /**登录天数 */\n    Login_Days: number;\n    /**连续登录天数 */\n    Login_ConsecutiveDays: number;\n\n    /**总共游戏时长 */\n    GameTime_Total: number;\n    /**今日游戏时长 */\n    GameTime_Today: number;\n\n    /**存档槽 */\n    Save_Slot: number;\n    /**存档时间 */\n    Save_Time: number;\n    /**存档数据 */\n    Save_Data:\n    {\n        关卡进度: number;\n        关卡分数: number[];\n        关卡时间: number[];\n        关卡星级: number[];\n    }[];\n\n}\n\n\n@ccclass('Resoure_Data')\nexport class Resoure_Data extends Component {\n\n    public static readonly instance = new Resoure_Data();\n\n    //--------------------------------------------------------------------------------------------\n\n    /**缓存 Bundles */\n    private Bundles: AssetManager.Bundle = null;\n    /**缓存 Scene */\n    private _Cache_Scene: Object = {};\n    /**缓存 Prefab */\n    private _Cache_Prefab: Object = {};\n    /**缓存 SpriteFrame */\n    private _Cache_SpriteFrame: Object = {};\n    /**缓存 Texture2D */\n    private _Cache_Texture2D: Object = {};\n    /**缓存 AudioClip */\n    private _Cache_AudioClip: Object = {};\n    /**缓存 Material */\n    private _Cache_Material: Object = {};\n    /**缓存 Json */\n    private _Cache_Json: Object = {};\n    /**缓存 AnimationClip */\n    private _Cache_AnimationClip: Object = {};\n    /**缓存 Font */\n    private _Cache_Font: Object = {};\n\n    //--------------------------------------------------------------------------------------------\n\n    Url: string = \"https://6808403a942707d722ddad99.mockapi.io/Data\";\n\n    private Game_Data: Interface_GameData = {\n\n        Account: \"None\",\n        Password: \"666666\",\n\n        /**游戏版本 */\n        Game_Versions: \"0.0.1\",\n        Game_Mode: \"Default\",\n\n        /**是否首次启动 */\n        Is_FirstStartUp: true,\n        /**是否新的一天 */\n        Is_NewDay: true,\n\n        /**登录时间 */\n        Login_Time: 0,\n        /**登录天数 */\n        Login_Days: 0,\n        /**连续登录天数 */\n        Login_ConsecutiveDays: 0,\n\n        /**总共游戏时长 */\n        GameTime_Total: 0,\n        /**今日游戏时长 */\n        GameTime_Today: 0,\n\n        /**存档槽 */\n        Save_Slot: 0,\n        /**存档时间 */\n        Save_Time: 0,\n        /**存档数据 */\n        Save_Data: [\n            {\n                关卡进度: 0,\n                关卡分数: [],\n                关卡时间: [],\n                关卡星级: [],\n            }\n        ],\n    }\n\n    //--------------------------------------------------------------------------------------------\n\n    /**震动开关 */\n    private Vibration_Switch: boolean = true;\n\n    /**声音开关 */\n    private Sound_Switch: boolean = true;\n    /**声音音量 */\n    private Sound_Volume: number = 1;\n    /**声音音频组件 */\n    private Sound_AudioSource: AudioSource = null;\n\n    /**音乐开关 */\n    private Music_Switch: boolean = true;\n    /**音乐音量 */\n    private Music_Volume: number = 1;\n    /**音乐音频组件 */\n    private Music_AudioSource: AudioSource = null;\n\n    /**长音效音频组件(可以手动停止的音效) */\n    private Sound_Long_AudioSource: AudioSource[] = [];\n\n    //--------------------------------------------------------------------------------------------\n\n    /**场景名字_当前 */\n    @property({ tooltip: \"场景名字_当前\" })\n    public Scene_Name_Current: string = \"\";\n\n    /**场景名字_下个 */\n    @property({ tooltip: \"场景名字_下个\" })\n    public Scene_Name_Next: string = \"\";\n\n\n\n    //--------------------------------------------------------------------------------------------\n\n    private FrameRate: number = 0;\n    private LastTime: number = 0;\n    private FrameRate_Schedule: Function = null;\n\n    constructor() {\n        super();\n        this.FrameRate_Schedule = () => {\n            const Time_Current = performance.now();\n            const Time_Elapsed = (Time_Current - this.LastTime) / 1000;\n            const FrameRate = this.FrameRate / Time_Elapsed;\n            console.debug(`帧率: ${FrameRate.toFixed(0)}`);\n            this.FrameRate = 0;\n            this.LastTime = Time_Current;\n        };\n    }\n\n\n    /**查看帧率 */\n    Check_FrameRate() {\n        this.unschedule(this.FrameRate_Schedule);\n        this.FrameRate = 0;\n        this.LastTime = performance.now();\n        this.schedule(this.FrameRate_Schedule, 1);\n    }\n    update(Dt: number): void {\n        this.FrameRate++;\n    }\n    onEnable() {\n        console.debug(\"组件被启用\");\n    }\n    onDisable() {\n        console.debug(\"组件被禁用或节点变为无效\");\n    }\n    onDestroy() {\n        console.debug(\"组件被销毁\");\n    }\n\n    onLoad() {\n        console.log(\"onLoad\");\n\n        this.Director_AddPersistRootNode(this.node);\n        this.Game_FrameRate_Set(120);\n        this.Director_Scheduler_TimeScale_Set(1);\n        // this.Check_FrameRate();\n\n\n        // 启用物理系统\n        // PhysicsSystem2D.instance.enable = true;\n\n        // PhysicsSystem2D.instance.debugDrawFlags =\n        //   EPhysics2DDrawFlags.Shape\n        // | EPhysics2DDrawFlags.Joint\n        // | EPhysics2DDrawFlags.Aabb\n        // | EPhysics2DDrawFlags.Pair\n        // | EPhysics2DDrawFlags.CenterOfMass\n\n\n\n        // 监听浏览器窗口大小变化事件\n        window.addEventListener('resize', (Event) => {\n            Screen_Update();\n        });\n        // 监听浏览器横屏竖屏变化事件\n        window.addEventListener(\"orientationchange\", (Event) => {\n            console.debug(Event);\n            Screen_Update();\n        });\n\n        // 更新屏幕尺寸\n        function Screen_Update() {\n\n            // 浏览器窗口可见区域尺寸\n            let Screen_Width = window.innerWidth;\n            let Screen_Height = window.innerHeight;\n            console.debug(`当前可见区域尺寸: ${Screen_Width} x ${Screen_Height}`);\n\n            // 浏览器窗口设计分辨率尺寸\n            // let Width_Design = view.getDesignResolutionSize().width;\n            // let Height_Design = view.getDesignResolutionSize().height;\n            // console.debug(`当前设计分辨率: ${Width_Design} x ${Height_Design}`);\n\n            // 可见区域尺寸\n            let Visible_Size = view.getVisibleSize();\n            let Visible_Width = Visible_Size.width;\n            let Visible_Height = Visible_Size.height;\n            console.debug(`当前可见分辨率: ${Visible_Width} x ${Visible_Height}`);\n\n            if (Visible_Width >= Visible_Height) {\n                console.error('当前为横屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Horizontal\");\n            } else {\n                console.error('当前为竖屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Vertical\");\n            }\n\n        }\n\n\n        game.on(Game.EVENT_HIDE, () => {\n            // 游戏窗口被隐藏时的处理逻辑\n            console.debug('Game window is hidden', \"游戏窗口被隐藏时的处理逻辑\",);\n        });\n        game.on(Game.EVENT_SHOW, () => {\n            // 游戏窗口被显示时的处理逻辑\n            console.debug('Game window is shown', \"游戏窗口被显示时的处理逻辑\");\n        });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'visible') {\n                // 屏幕解锁时的处理逻辑\n                console.debug('Screen is unlocked', \"屏幕解锁时的处理逻辑\");\n            } else {\n                // 屏幕锁定时的处理逻辑\n                console.debug('Screen is locked', \"屏幕锁定时的处理逻辑\");\n            }\n        });\n\n\n\n\n        this.Music_AudioSource = new Node(\"Music\").addComponent(AudioSource);\n        this.Sound_AudioSource = new Node(\"Sound\").addComponent(AudioSource);\n        this.Music_AudioSource.node.parent = this.node;\n        this.Sound_AudioSource.node.parent = this.node;\n\n    }\n\n    async start() {\n\n        PlatformApi.instance.onLoad();\n\n\n        this.Save_Get()\n\n        this.Is_First_StartUp();\n        this.Information_Printing();\n        this.Bundles = await this.Load_Bundle(\"Load\");\n\n        // this.Music_Play(\"Audio/BGM1\");\n\n        //加载资源\n\n        // await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\")\n        // await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\")\n        // await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\")\n        // await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\")\n        // await this.Load_Json(\"Json/mathmatch\");\n        // await this.Load_Prefab(\"Prefab/PanelMathMatch/Icon\");\n\n    }\n\n\n\n\n\n    /**是否首次启动 */\n    Is_First_StartUp() {\n        let First_Start = this.Data_Get(\"First_Start\");\n        console.debug(First_Start);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(First_Start)) {\n            this.Game_Data.Is_FirstStartUp = true;\n            First_Start = this.Game_Data.Is_FirstStartUp;\n            this.Data_Set(\"First_Start\", First_Start);\n        }\n        if (First_Start) {\n            console.debug(\"第一次开始\");\n            // First_Start = false;\n            // this.Data_Set(\"First_Start\", First_Start);\n        } else {\n            console.debug(\"不是第一次开始\");\n        }\n    }\n\n\n\n    /**请求数据 */\n    async Fetch_Data(Url: string) {\n        try {\n            const Response = await fetch(Url, {\n                cache: 'no-cache', // 或 'reload'\n                method: 'GET',\n                headers: {\n                    'Cache-Control': 'no-cache'\n                }\n            });\n            let Status = Response.status;\n            console.log(\"请求回复:\", Status, Response);\n            switch (Status) {\n                case 200:\n                    const Data = await Response.json();\n                    console.debug(\"200 OK\t请求成功 GET/PUT 请求成功\");\n                    return Data;\n                case 400:\n                    console.debug(\"400 Bad Request  请求错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden    无权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found    资源不存在\");\n                    return null;\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(\"获取数据失败:\", error);\n        }\n    }\n\n    /**\n     * 向 MockAPI 提交数据（POST 请求）\n     * @param Url API 地址\n     * @param Data 要提交的数据\n     */\n    async Post_Data(Url: string, Data: any) {\n        try {\n            const Response = await fetch(Url, {\n                method: 'POST', // 指定为 POST 请求\n                headers: {\n                    'Content-Type': 'application/json', // 声明 JSON 格式\n                },\n                body: JSON.stringify(Data), // 将对象转为 JSON 字符串\n            });\n            let Status = Response.status;\n            console.log(\"请求回复:\", Status, Response);\n            switch (Status) {\n                case 201:\n                    const Data = await Response.json();\n                    console.debug(\"201 Created\t资源创建成功 POST 请求成功(新增数据)\");\n                    return Data;\n                case 400:\n                    console.debug(\"400 Bad Request  请求错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden    无权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found    资源不存在\");\n                    return null;\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(\"提交数据失败:\", error);\n            throw error; // 抛出错误以便外部捕获\n        }\n    }\n\n    /**\n     * 更新数据（PUT请求）\n     * @param Url - 要更新的资源API地址\n     * @param Data - 要更新的数据对象\n     * @returns 更新后的数据 或 null (如果失败)\n     */\n    async Update_Data(Url: string, Data: any) {\n        try {\n            const Response = await fetch(Url, {\n                method: 'PUT', // 或 'PATCH' 如果API支持部分更新\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(Data)\n            });\n            let Status = Response.status;\n            console.log(\"请求回复:\", Status, Response);\n            switch (Status) {\n                case 200:\n                    const Data = await Response.json();\n                    console.debug(\"200 OK\t请求成功 GET/PUT 请求成功\");\n                    return Data;\n                case 400:\n                    console.debug(\"400 Bad Request  请求错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden    无权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found    资源不存在\");\n                    return null;\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(\"更新请求失败:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * 批量更新符合条件的数据\n     * @param Url - 资源基础地址\n     * @param Params - 查询条件对象\n     * @param UpdateData - 要更新的数据内容\n     * @returns 返回每个更新操作的结果数组\n     * @throws 当查询或更新过程中出现错误时抛出\n     * @example\n     * await this.Resoure_Data.Update_Data_All(this.Resoure_Data.Url , {Key:\"Value\"},Data);\n     */\n    async Update_Data_All(Url: string, Params: Record<string, string>, UpdateData: any) {\n        try {\n            // 1. 构建查询字符串并获取待更新数据\n            const QueryString = new URLSearchParams(Params).toString();\n            const Response = await fetch(`${Url}?${QueryString}`, {\n                method: 'GET',\n                headers: {\n                    'Cache-Control': 'no-cache',\n                    'Content-Type': 'application/json'\n                }\n            });\n            const Status = Response.status;\n            console.log(\"查询请求响应:\", Status, Response);\n            switch (Status) {\n                case 200:\n                    const ItemsToUpdate = await Response.json();\n                    if (!Array.isArray(ItemsToUpdate)) {\n                        throw new Error(\"API返回数据格式错误：期望数组\");\n                    }\n                    // 2. 并行执行批量更新\n                    const UpdateResults = await Promise.all(\n                        ItemsToUpdate.map(item => this.Update_Data(`${Url}/${item.id}`, UpdateData)));\n                    console.debug(\"批量更新完成，结果:\", UpdateResults);\n                    return UpdateResults;\n                case 400:\n                    console.debug(\"400 Bad Request - 查询参数错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden - 无查询权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found - 查询资源不存在\");\n                    return null;\n                default:\n                    console.debug(`未处理的查询状态码: ${Status}`);\n                    return null;\n            }\n        } catch (error) {\n            console.error(\"批量更新流程失败:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * 删除数据 (DELETE 请求)\n     * @param Url 要删除的资源API地址\n     */\n    async Delete_Data(Url: string) {\n        try {\n            const Response = await fetch(Url, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            let Status = Response.status;\n            console.log(\"请求回复:\", Status, Response);\n            switch (Status) {\n                case 204:\n                    const Data = await Response.json();\n                    console.debug(\"204 No Content\t成功但无返回内容\tDELETE 请求成功\");\n                    return Data;\n                case 400:\n                    console.debug(\"400 Bad Request  请求错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden    无权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found    资源不存在\");\n                    return null;\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(\"删除请求失败:\", error);\n            throw error; // 抛出错误以便外部处理\n        }\n    }\n\n    /**\n     * 删除符合条件的数据\n     * @param Url 请求地址\n     * @param Params 查询条件\n     * @example\n     * await this.Resoure_Data.Delete_Data_All(this.Resoure_Data.Url , {Key:\"Value\"});\n     */\n    async Delete_Data_All(Url: string, Params: Record<string, string>) {\n        try {\n            // 查询符合条件的数据\n            const QueryString = new URLSearchParams(Params).toString();\n            const Response = await fetch(`${Url}?${QueryString}`, {\n                cache: 'no-cache',\n                method: 'GET',\n                headers: {\n                    'Cache-Control': 'no-cache'\n                }\n            });\n            const Status = Response.status;\n            console.log(\"查询请求回复:\", Status, Response);\n            switch (Status) {\n                case 200:\n                    const ItemsToDelete = await Response.json();\n                    if (!Array.isArray(ItemsToDelete)) {\n                        throw new Error(\"查询结果不是数组\");\n                    }\n                    // 批量删除\n                    const DeleteResults = await Promise.all(\n                        ItemsToDelete.map(item =>\n                            this.Delete_Data(`${Url}/${item.id}`)\n                                .then(() => ({ id: item.id, success: true }))\n                                .catch(error => {\n                                    console.error(`删除 ${item.id} 时出错:`, error);\n                                    return { id: item.id, success: false, error };\n                                })));\n                    console.debug(\"批量删除结果:\", DeleteResults);\n                    return DeleteResults;\n                case 400:\n                    console.debug(\"400 Bad Request  查询请求错误\");\n                    return null;\n                case 403:\n                    console.debug(\"403 Forbidden    无查询权限\");\n                    return null;\n                case 404:\n                    console.debug(\"404 Not Found    查询资源不存在\");\n                    return null;\n                default:\n                    console.debug(`未处理的状态码: ${Status}`);\n                    return null;\n            }\n        } catch (error) {\n            console.error(\"批量删除失败:\", error);\n            throw error;\n        }\n    }\n\n\n    /**存档设置 */\n    Save_Set() {\n        this.Data_Set(\"Game_Data\", this.Game_Data);\n    }\n    /**存档获取 */\n    Save_Get() {\n        let Game_Data = this.Data_Get(\"Game_Data\");\n        if (Game_Data == null || Game_Data == undefined) {\n            this.Save_Set();\n            Game_Data = this.Data_Get(\"Game_Data\");\n        }\n        this.Game_Data = Game_Data;\n        return this.Game_Data;\n    }\n\n    /**\n    *数据保存本地\n    *@Data_Name 待保存数据的名字\n    *@Data_Name 待保存的数据\n    */\n    // Data_Set(Data_Name: string, Data: any) {\n    //     sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n    // }\n    /**\n     *读取本地数据\n     *@Data_Name 待读取数据的名字\n     */\n    // Data_Get(Data_Name: string) {\n    //     let Data = sys.localStorage.getItem(Data_Name);\n    //     return JSON.parse(Data);\n    // }\n\n    /**\n     * 安全保存数据到本地\n     * @param Data_Name 数据键名\n     * @param Data 要保存的数据（会自动JSON序列化）\n     */\n    Data_Set(Data_Name: string, Data: any): void {\n        try {\n            sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n        } catch (e) {\n            console.error(`[Storage] 保存 ${Data_Name} 失败:`, e);\n        }\n    }\n\n    /**\n     * 安全读取本地数据\n     * @param Data_Name 数据键名\n     * @param Default_Value 当数据不存在时的默认值\n     */\n    Data_Get(Data_Name: string, Default_Value: any = null): any {\n        try {\n            let Data_Value;\n            const Data_Raw = sys.localStorage.getItem(Data_Name);\n            Data_Value = Data_Raw ? JSON.parse(Data_Raw) : null;\n            // 返回数据或默认值\n            return Data_Value !== undefined ? Data_Value : Default_Value;\n        } catch (e) {\n            console.error(`[Storage] 读取 ${Data_Name} 失败:`, e);\n            return Default_Value;\n        }\n    }\n\n    /**\n     * @param Data_Name 待删除数据的名字\n     */\n    Data_Delete(Data_Name: string) {\n        sys.localStorage.removeItem(Data_Name);\n    }\n    /**\n     * @param Data_Name 待检查数据的名字\n     * @returns 是否存在该数据\n     */\n    Data_Is_Exist(Data_Name: string): boolean {\n        return sys.localStorage.getItem(Data_Name) !== null;\n    }\n    /**\n     * @param Data_Name 待更新数据的名字\n     * @param New_Data 新的数据\n     */\n    Data_Update(Data_Name: string, New_Data: any) {\n        if (this.Data_Is_Exist(Data_Name)) {\n            let Existing_Data = this.Data_Get(Data_Name);\n            // 根据需要合并或更新数据\n            let Updated_Data = { ...Existing_Data, ...New_Data };\n            this.Data_Set(Data_Name, Updated_Data);\n        } else {\n            console.error(`Data with name ${Data_Name} does not exist.`);\n        }\n    }\n    /**\n     * 获取所有本地存储数据的键\n     * @returns 所有键的数组\n     */\n    Data_Get_All_Keys(): string[] {\n        return Object.keys(sys.localStorage);\n    }\n    /**\n     * 获取所有本地存储的数据\n     * @returns 所有数据的对象\n     */\n    Data_Get_All(): object {\n        const Keys = this.Data_Get_All_Keys();\n        let All_Data = {};\n        Keys.forEach(Key => {\n            All_Data[Key] = this.Data_Get(Key);\n        });\n        return All_Data;\n    }\n    /**\n     * 清空所有本地存储数据\n     */\n    Clear_All_Data() {\n        sys.localStorage.clear();\n    }\n\n    /**\n     * 深拷贝\n     * @param Obj 需要拷贝的对象\n     * @param Cache 缓存已拷贝的对象（用于处理循环引用）\n     * @returns 拷贝后的对象\n     */\n    Copy_Deep<T>(Obj: T, Cache = new WeakMap()): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Cache.has(Obj)) {\n            return Cache.get(Obj);\n        }\n        if (Obj instanceof Date) {\n            return new Date(Obj) as T;\n        }\n        if (Obj instanceof RegExp) {\n            return new RegExp(Obj) as T;\n        }\n        if (Obj instanceof Map) {\n            const Copied_Map = new Map();\n            Cache.set(Obj, Copied_Map);\n            Obj.forEach((Value, Key) => {\n                Copied_Map.set(Key, this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Map as T;\n        }\n        if (Obj instanceof Set) {\n            const Copied_Set = new Set();\n            Cache.set(Obj, Copied_Set);\n            Obj.forEach((Value) => {\n                Copied_Set.add(this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Set as T;\n        }\n        if (Array.isArray(Obj)) {\n            const Copied_Array = Obj.map((Item) => this.Copy_Deep(Item, Cache));\n            Cache.set(Obj, Copied_Array);\n            return Copied_Array as T;\n        }\n        const Copied_Obj: Partial<T> = {};\n        Cache.set(Obj, Copied_Obj);\n        for (const Key in Obj) {\n            if (Object.prototype.hasOwnProperty.call(Obj, Key)) {\n                Copied_Obj[Key] = this.Copy_Deep(Obj[Key], Cache);\n            }\n        }\n        return Copied_Obj as T;\n    }\n    /**\n     * 浅拷贝\n     * @param Obj 需要拷贝的对象\n     * @returns 拷贝后的对象\n     */\n    Copy_Shallow<T>(Obj: T): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Array.isArray(Obj)) {\n            return Obj.slice() as T;\n        }\n        return { ...Obj };\n    }\n    /**震动开关设置 */\n    Vibration_Switch_Set(Switch: boolean = false) {\n        this.Vibration_Switch = Switch;\n        this.Data_Set(\"Vibration_Switch\", this.Vibration_Switch);\n    }\n    /**震动开关获取 */\n    Vibration_Switch_Get() {\n        this.Vibration_Switch = this.Data_Get(\"Vibration_Switch\");\n        if (this.Vibration_Switch === null || this.Vibration_Switch === undefined) {\n            this.Vibration_Switch = true;\n        }\n        return this.Vibration_Switch;\n    }\n    /**声音开关设置 */\n    Sound_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch = Switch;\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = this.Sound_Volume;\n            });\n        } else {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = 0;\n            });\n        }\n        this.Data_Set(\"Sound_Switch\", this.Sound_Switch);\n    }\n    /**声音开关获取 */\n    Sound_Switch_Get() {\n        this.Sound_Switch = this.Data_Get(\"Sound_Switch\");\n        if (this.Sound_Switch === null || this.Sound_Switch === undefined) {\n            this.Sound_Switch = true;\n        }\n        return this.Sound_Switch;\n    }\n    /**声音音量设置 */\n    Sound_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume = Volume;\n        this.Sound_Long_AudioSource.forEach(element => {\n            element.volume = this.Sound_Volume;\n        });\n    }\n    /**音乐开关设置 */\n    Music_Switch_Set(Switch: boolean = false) {\n        this.Music_Switch = Switch;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n        this.Data_Set(\"Music_Switch\", this.Music_Switch);\n    }\n    /**音乐开关获取 */\n    Music_Switch_Get() {\n        this.Music_Switch = this.Data_Get(\"Music_Switch\");\n        if (this.Music_Switch === null || this.Music_Switch === undefined) {\n            this.Music_Switch = true;\n        }\n        return this.Music_Switch;\n    }\n    /**音乐音量设置 */\n    Music_Volume_Set(Volume: number = 0) {\n        this.Music_Volume = Volume;\n        this.Music_AudioSource.volume = this.Music_Volume;\n    }\n    /**音频开关设置 */\n    Audio_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch_Set(Switch);\n        this.Music_Switch_Set(Switch);\n    }\n    /**音频声音设置 */\n    Audio_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume_Set(Volume);\n        this.Music_Volume_Set(Volume);\n    }\n    /**音效播放 */\n    async Sound_Play(Path: string) {\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        if (this.Sound_Switch) {\n            this.Sound_AudioSource.volume = this.Sound_Volume;\n        } else {\n            this.Sound_AudioSource.volume = 0;\n        }\n        this.Sound_AudioSource.loop = false;\n        this.Sound_AudioSource.playOneShot(Res, this.Sound_Volume);\n    }\n    /**音乐播放 */\n    async Music_Play(Path: string, Call = () => { }) {\n        console.warn(Path);\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        Call && Call()\n        this.Music_AudioSource.enabled = true;\n        this.Music_AudioSource.stop();\n        this.Music_AudioSource.clip = Res;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n        this.Music_AudioSource.loop = true;\n        this.Music_AudioSource.play();\n    }\n    /**长音效播放 */\n    async Sound_Long_play(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) {\n            this.Sound_Long_AudioSource[Path].enabled = true;\n            this.Sound_Long_AudioSource[Path].stop();\n            if (this.Sound_Switch) {\n                this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n            } else {\n                this.Sound_Long_AudioSource[Path].volume = 0;\n            }\n            this.Sound_Long_AudioSource[Path].loop = true;\n            this.Sound_Long_AudioSource[Path].play();\n            return\n        }\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return//防止音乐还没加载完 场景就被销毁了\n        this.Sound_Long_AudioSource[Path] = new Node(Path).addComponent(AudioSource);\n        this.Sound_Long_AudioSource[Path].node.parent = this.node;\n        this.Sound_Long_AudioSource[Path].clip = Res;\n        this.Sound_Long_AudioSource[Path].enabled = true;\n        this.Sound_Long_AudioSource[Path].stop();\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n        } else {\n            this.Sound_Long_AudioSource[Path].volume = 0;\n        }\n        this.Sound_Long_AudioSource[Path].loop = true;\n        this.Sound_Long_AudioSource[Path].play();\n    }\n    /**音乐暂停 */\n    Music_Pause() {\n        this.Music_AudioSource.pause();\n    }\n    /**音乐恢复 */\n    Music_Resume() {\n        this.Music_AudioSource.play();\n    }\n    /**音乐停止 */\n    Music_Stop() {\n        this.Music_AudioSource.stop();\n    }\n    /**长音效暂停 */\n    Sound_Long_Pause(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].pause();\n    }\n    /**长音效恢复 */\n    Sound_Long_Resume(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].play();\n    }\n    /**长音效停止 */\n    Sound_Long_Stop(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].stop();\n    }\n    /**长音效停止所有 */\n    Sound_Long_Stop_All() {\n        if (this.Sound_AudioSource) this.Sound_AudioSource.stop();\n        for (let i = 0; i < this.Sound_Long_AudioSource.length; i++) {\n            this.Sound_Long_AudioSource[i].stop();\n        }\n    }\n\n    /**加载远程图片资源无后缀名\n     * @Path 远程路径\n     */\n    async Load_Remote_ImageAsset(Path: string): Promise<SpriteFrame> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, { ext: '.png' }, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程图片资源有后缀名\n    * @Path 远程/本地路径\n    */\n    async Load_Remote_ImageAsset_(Path: string): Promise<SpriteFrame> {\n\n        // try {\n        //     return new Promise((resolve, reject) => {\n        //         assetManager.loadRemote<ImageAsset>(Path, (err, imageAsset) => {\n        //             if (err) {\n        //                 console.error('加载远程图片失败:', err);\n        //                 return;\n        //             }\n        //             // 创建纹理\n        //             const texture = new Texture2D();\n        //             texture.image = imageAsset;\n        //             // 创建精灵帧\n        //             const spriteFrame = new SpriteFrame();\n        //             spriteFrame.texture = texture;\n        //             resolve(spriteFrame);\n        //         });\n        //     });\n        // } catch (Error) {\n        //     console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n        //     throw Error;\n        // }\n\n        // return\n\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程音频资源\n     * @Path 远程路径\n     */\n    async Load_Remote_audio(Path: string): Promise<AudioClip> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote(Path, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 AudioClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AudioClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AudioClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Bundle(Bundle_Name: string): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadBundle(Bundle_Name, (Err, Res) => {\n                    if (Err) {\n                        console.error(`加载 Bundle ${Bundle_Name} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Bundle ${Bundle_Name} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Bundle ${Bundle_Name} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载文件夹 */\n    async Load_Dir(Path: string, Type: any): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadDir(Path, Type, (finished, total, item) => {\n                    const onProgress: string = (finished / total).toFixed(2);\n                    console.debug(onProgress);\n                }, (Err, Res: any) => {\n                    if (Err) {\n                        console.error(\"加载 Dir 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Dir ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Dir ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Scene(Path: string, Progress_Mask?: Node, Progress_Bar?: Node, Value_Label?: Label, Mode: ScreenMode = ScreenMode.Horizontal): Promise<Scene> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Scene[Path]) {\n            console.debug(`Scene ${Path} 资源存在`);\n            return this._Cache_Scene[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            if (Progress_Mask && Progress_Bar) {\n                let W_PM = Progress_Mask.getComponent(UITransform).width;\n                let H_PM = Progress_Mask.getComponent(UITransform).height;\n                let W_PB = Progress_Bar.getComponent(UITransform).width;\n                let H_PB = Progress_Bar.getComponent(UITransform).height;\n                if (Mode == ScreenMode.Horizontal) {\n                    Progress_Mask.position = v3(Math.floor(-W_PM * 1), 0, 0);\n                    Progress_Bar.position = v3(Math.floor(W_PB * 1), 0, 0);\n                } else {\n                    Progress_Mask.position = v3(0, Math.floor(-H_PM * 1), 0);\n                    Progress_Bar.position = v3(0, Math.floor(H_PB * 1), 0);\n                }\n                Progress_Mask.position = v3(Math.floor(-W_PM), Math.floor(-H_PM), 0);\n                Progress_Bar.position = v3(Math.floor(-W_PB), Math.floor(H_PB), 0);\n            }\n\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadScene(Path, null, (Finished, Total, Item) => {\n                    let Schedule: number = Number((Finished / Total).toFixed(2));\n                    if (Progress_Mask && Progress_Bar) {\n                        let W_PM = Progress_Mask.getComponent(UITransform).width;\n                        let H_PM = Progress_Mask.getComponent(UITransform).height;\n                        let W_PB = Progress_Bar.getComponent(UITransform).width;\n                        let H_PB = Progress_Bar.getComponent(UITransform).height;\n                        if (Mode == ScreenMode.Horizontal) {\n                            Progress_Mask.position = v3(Math.floor(-W_PM * (1 - Schedule)), 0, 0);\n                            Progress_Bar.position = v3(Math.floor(W_PB * (1 - Schedule)), 0, 0);\n                        } else {\n                            Progress_Mask.position = v3(0, Math.floor(-H_PM * (1 - Schedule)), 0);\n                            Progress_Bar.position = v3(0, Math.floor(H_PB * (1 - Schedule)), 0);\n                        }\n                        let Value: number = Math.floor(Schedule * 100);\n                        if (Value_Label) {\n                            Value_Label.string = Value + \"%\"\n                        }\n                    }\n                    // console.debug(`加载 Scene 进度: ${Finished}/${Total} (${Value}%)`);\n                }, (Err, Res: SceneAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Scene 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Scene[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Scene ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    this.Scene_Name_Current = Path;\n                    resolve(this._Cache_Scene[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Scene ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Prefab(Path: string): Promise<Prefab> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Prefab[Path]) {\n            console.debug(`Prefab ${Path} 资源存在`);\n            return this._Cache_Prefab[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Prefab, (Err, Res: Prefab) => {\n                    if (Err) {\n                        console.error(`加载 Prefab ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Prefab[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Prefab ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Prefab[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Prefab ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_SpriteFrame(Path: string): Promise<SpriteFrame> {\n        Path = Path + \"/spriteFrame\";\n        if (this._Cache_SpriteFrame[Path]) {\n            // console.debug(`SpriteFrame ${Path} 资源存在`);\n            return this._Cache_SpriteFrame[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, SpriteFrame, (Err, Res: SpriteFrame) => {\n                    if (Err) {\n                        console.error(`加载 SpriteFrame ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_SpriteFrame[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 SpriteFrame ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_SpriteFrame[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 SpriteFrame ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Texture(Path: string): Promise<Texture2D> {\n        if (this._Cache_Texture2D[Path]) {\n            console.debug(`Texture ${Path} 资源存在`);\n            return this._Cache_Texture2D[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Texture2D, (Err, Res: Texture2D) => {\n                    if (Err) {\n                        console.error(`加载 Texture ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Texture2D[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Texture ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Texture2D[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Texture ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AudioClip(Path: string): Promise<AudioClip> {\n        if (this._Cache_AudioClip[Path]) {\n            console.debug(`Audio ${Path} 资源存在`);\n            return this._Cache_AudioClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AudioClip, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 Audio 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AudioClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Audio ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AudioClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Audio ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Material(Path: string): Promise<Material> {\n        if (this._Cache_Material[Path]) {\n            console.debug(`Material ${Path} 资源存在`);\n            return this._Cache_Material[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Material, (Err, Res: Material) => {\n                    if (Err) {\n                        console.error(\"加载 Material 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Material[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Material ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Material[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Material ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Json(Path: string): Promise<JsonAsset> {\n        if (this._Cache_Json[Path]) {\n            console.debug(`Json ${Path} 资源存在`);\n            return this._Cache_Json[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, JsonAsset, (Err, Res: JsonAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Json 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Json[Path] = Res.json!;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Json ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Json[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Json ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AnimationClip(Path: string): Promise<AnimationClip> {\n        if (this._Cache_AnimationClip[Path]) {\n            console.debug(`AnimationClip ${Path} 资源存在`);\n            return this._Cache_AnimationClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AnimationClip, (Err, Res: AnimationClip) => {\n                    if (Err) {\n                        console.error(\"加载 AnimationClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AnimationClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AnimationClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AnimationClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AnimationClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Font(Path: string): Promise<Font> {\n        if (this._Cache_Font[Path]) {\n            console.debug(`Font ${Path} 资源存在`);\n            return this._Cache_Font[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Font, (Err, Res: Font) => {\n                    if (Err) {\n                        console.error(\"加载 Font 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Font[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Font ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Font[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Font ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    /**释放资源 */\n    async Release_Resource(Path: string): Promise<void> {\n        if (this._Cache_Scene[Path]) {\n            delete this._Cache_Scene[Path];\n            console.debug(`释放 Scene ${Path} 资源`);\n        }\n        if (this._Cache_Prefab[Path]) {\n            delete this._Cache_Prefab[Path];\n            console.debug(`释放 Prefab ${Path} 资源`);\n        }\n        if (this._Cache_SpriteFrame[Path]) {\n            delete this._Cache_SpriteFrame[Path];\n            console.debug(`释放 SpriteFrame ${Path} 资源`);\n        }\n        if (this._Cache_Texture2D[Path]) {\n            delete this._Cache_Texture2D[Path];\n            console.debug(`释放 Texture ${Path} 资源`);\n        }\n        if (this._Cache_AudioClip[Path]) {\n            delete this._Cache_AudioClip[Path];\n            console.debug(`释放 Audio ${Path} 资源`);\n        }\n        if (this._Cache_Material[Path]) {\n            delete this._Cache_Material[Path];\n            console.debug(`释放 Material ${Path} 资源`);\n        }\n        if (this._Cache_Json[Path]) {\n            delete this._Cache_Json[Path];\n            console.debug(`释放 JSON ${Path} 资源`);\n        }\n        if (this._Cache_AnimationClip[Path]) {\n            delete this._Cache_AnimationClip[Path];\n            console.debug(`释放 AnimationClip ${Path} 资源`);\n        }\n        if (this._Cache_Font[Path]) {\n            delete this._Cache_Font[Path];\n            console.debug(`释放 Font ${Path} 资源`);\n        }\n    }\n    /**释放所有资源 */\n    async Release_Resource_All(): Promise<void> {\n        this._Cache_Scene = {};\n        this._Cache_Prefab = {};\n        this._Cache_SpriteFrame = {};\n        this._Cache_Texture2D = {};\n        this._Cache_AudioClip = {};\n        this._Cache_Material = {};\n        this._Cache_Json = {};\n        this._Cache_AnimationClip = {};\n        this._Cache_Font = {};\n        console.debug(`已释放所有资源`);\n    }\n\n    /** 游戏切换全屏模式 */\n    Game_Toggle_Fullscreen() {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen();\n            console.debug(`进入全屏`);\n        } else {\n            document.exitFullscreen();\n            console.debug(`退出全屏`);\n        }\n    }\n\n    /** 游戏界面缩放设置 */\n    Game_UIScale_Set(scale: number = 1) {\n        document.body.style.transform = `scale(${scale})`;\n    }\n\n    /**游戏重启$ */\n    Game_Restart() {\n        game.restart();\n    }\n    /**游戏恢复 */\n    Game_Resume() {\n        game.resume();\n    }\n    /**游戏暂停 */\n    Game_Pause() {\n        game.pause();\n    }\n    /**游戏结束 */\n    Game_End() {\n        game.end();\n    }\n    /**游戏帧率设置 */\n    Game_FrameRate_Set(FrameRate: number = 59) {\n        game.frameRate = FrameRate;\n    }\n\n\n    /**场景运行$ */\n    Director_Run(SceneAsset: Scene) {\n        director.runSceneImmediate(SceneAsset);\n    }\n    /**场景恢复$ */\n    Director_Resume() {\n        director.resume();\n    }\n    /**场景暂停$ */\n    Director_Pause() {\n        director.pause();\n    }\n    /**场景停止 */\n    Director_End() {\n        // director.end();\n    }\n    /**注册常驻根节点 */\n    Director_AddPersistRootNode(Node_Set: Node) {\n        director.addPersistRootNode(Node_Set);\n    }\n    /**注销常驻根节点 */\n    Director_RemovePersistRootNode(Node_Set: Node) {\n        director.removePersistRootNode(Node_Set);\n    }\n    /**场景调度间隔缩放设置 */\n    Director_Scheduler_TimeScale_Set(Scale: number = 1) {\n        director.getScheduler().setTimeScale(Scale);\n    }\n    /**场景调度间隔缩放获取 */\n    Director_Scheduler_TimeScale_Get(): number {\n        return director.getScheduler().getTimeScale();\n    }\n\n    /**信息打印 */\n    Information_Printing() {\n        console.debug(`当前平台是否是原生平台${sys.isNative}`);\n        console.debug(`当前平台是否是浏览器${sys.isBrowser}`);\n        console.debug(`当前运行平台是否是移动端平台${sys.isMobile}`);\n        console.debug(`当前平台字节顺序是否是小端序${sys.isLittleEndian}`);\n        console.debug(`当前运行平台是否是XR平台${sys.isXR}`);\n        this.Get_Current_Full_Time();\n    }\n\n\n    /**获取当前时间戳 */\n    Get_Timestamp(): number {\n        return Date.now();\n    }\n    /** 获取当前时间的 Unix 时间戳（秒） */\n    Get_Unix_Timestamp(): number {\n        return Math.floor(Date.now() / 1000); // 返回自1970年1月1日以来的秒数\n    }\n    /** 获取指定日期的时间戳 */\n    Get_Timestamp_From_Date(year, month, day): number {\n        const date = new Date(year, month - 1, day); // 注意月份从0开始\n        return date.getTime(); // 返回指定日期的时间戳\n    }\n    /** 获取两个时间戳之间的差值（毫秒） */\n    Get_Time_Difference(Start_Timestamp: number, Fnish_Timestamp: number): number {\n        return Fnish_Timestamp - Start_Timestamp; // 返回时间差\n    }\n    /** 获取当前年份 */\n    Get_Current_Year(): number {\n        return new Date().getFullYear(); // 返回当前年份\n    }\n    /** 获取当前月份 */\n    Get_Current_Month(): number {\n        return new Date().getMonth() + 1; // 返回当前月份\n    }\n    /** 获取当前日期 */\n    Get_Current_Date(): number {\n        return new Date().getDate();\n    }\n    /** 获取当前小时 */\n    Get_Current_Hour(): number {\n        return new Date().getHours();\n    }\n    /** 获取当前分钟 */\n    Get_Current_Minute(): number {\n        return new Date().getMinutes();\n    }\n    /** 获取当前秒 */\n    Get_Current_Second(): number {\n        return new Date().getSeconds();\n    }\n    /** 获取当前毫秒 */\n    Get_Current_Millisecond(): number {\n        return new Date().getMilliseconds();\n    }\n    /** 获取当前星期（0-6，0表示星期天） */\n    Get_Current_Day(): number {\n        if (new Date().getDay() == 0) return 7;\n        return new Date().getDay();\n    }\n    /** 获取完整的当前时间（包括年月日时分秒毫秒） */\n    Get_Current_Full_Time(): {\n        Year: number;\n        Month: number;\n        Date: number;\n        Hour: number;\n        Minute: number;\n        Second: number;\n        MilliSecond: number;\n        Day: number;\n    } {\n        const Current_Time = {\n            Year: this.Get_Current_Year(),\n            Month: this.Get_Current_Month(),\n            Date: this.Get_Current_Date(),\n            Hour: this.Get_Current_Hour(),\n            Minute: this.Get_Current_Minute(),\n            Second: this.Get_Current_Second(),\n            MilliSecond: this.Get_Current_Millisecond(),\n            Day: this.Get_Current_Day()\n        };\n        console.debug(`${Current_Time.Year}年${Current_Time.Month}月${Current_Time.Date}日 / 星期${Current_Time.Day} / ${Current_Time.Hour}时${Current_Time.Minute}分${Current_Time.Second}秒${Current_Time.MilliSecond}`);\n        return Current_Time;\n    }\n\n\n\n}\n\n\n"]}