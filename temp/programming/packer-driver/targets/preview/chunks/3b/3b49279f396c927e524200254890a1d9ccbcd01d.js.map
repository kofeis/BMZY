{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/framework/utils/UtilTools.ts"],"names":["String","prototype","format","str","i","arguments","replace","utilTools","getRandomSign","Math","random","radianToAngle","radian","PI","angleToRadian","angle","forArr","arr","cb","len","length","info","undefined","ret","waterfall","taskArr","callback","Array","isArray","taskIndex","result","loadNextTask","task","err","valToPercent","val","fixNum","floor","toFixed","getTimeStr","d","isM","hours","mins","seconds","getTimeStrChinese","isSce","isHour","timeStrToDate","obj","item","keyArr","Object","keys","key","endStr","substring","toLocaleLowerCase","Date","e","console","log","message","sortArr","compareFunc","j","item1","item2","isProb","randomArr","isOrign","JSON","parse","stringify","tmpArr","index","push","splice","getRandomFloat","min","max","isInt","dv","overDay","date","now","getDate","getTime","getRowsByWeightAndNum","num","canRepeat","copyObj","row","getRowByWeight","indexOf","totalWeight","weight","left","tmpRow","getRandomItemByArr","isRemove"],"mappings":"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","sourcesContent":["String.prototype.format = function () {\n    let str = this;\n    for (let i in arguments) {\n        str = str.replace(/\\%\\w/, arguments[i]);\n    }\n    return str;\n}\n\nexport const utilTools = {\n\n    getRandomSign() {\n        return Math.random() > 0.5 ? 1 : -1;\n    },\n\n    // 角度值与弧度制之间的转换\n    radianToAngle(radian: number) {\n        return radian / Math.PI * 180;\n    },\n    angleToRadian(angle: number) {\n        return angle / 180 * Math.PI;\n    },\n\n    // 数组遍历\n    forArr(arr: any, cb: Function) {\n        let len = arr.length;\n        if (len <= 0) {\n            return;\n        }\n        for (let i = 0; i < len; i++) {\n            let info = arr[i];\n            if (info == undefined) {\n                continue;\n            }\n            let ret = cb(info, i);\n            if (ret) {\n                break;\n            }\n        }\n    },\n\n    /**\n     * 模仿async.waterfall写得，按顺序执行各个方法\n     * @param taskArr 要顺序执行的方法数组\n     * @param callback 执行结果回调\n     */\n    waterfall(taskArr: any, callback?: any) {\n        if (!callback) {\n            callback = function () { };\n        }\n        if (!Array.isArray(taskArr) || taskArr.length <= 0) {\n            callback(\"taskArr is null\");\n            return;\n        }\n        let taskIndex = 0;\n        let result = {};\n        let loadNextTask = function () {\n            let task = taskArr[taskIndex];\n            if (task) {\n                task(result, function (err) {\n                    if (err) {\n                        callback(err, null);\n                        return;\n                    }\n                    taskIndex++;\n                    loadNextTask();\n                });\n                return;\n            }\n            callback(null, result);\n        };\n        loadNextTask();\n    },\n\n    // 数字转化为百分比显示\n    valToPercent(val: number, fixNum?: number) {\n        // 保证舍去不显示的那部分\n        val = Math.floor(val * 10000);\n        val = val / 10000;\n\n        if (fixNum == undefined) {\n            fixNum = 2;\n        }\n        let ret = (val * 100).toFixed(fixNum) + \"%\";\n\n        return ret;\n    },\n\n    /**\n     * 获取如下格式的时间\n     * 05:00:56\n     * @param d 单位：豪秒\n     * @param isM 是否强制只显示到分\n     * @returns {string}\n     */\n    getTimeStr(d: number, isM?: boolean) {\n        var ret = \"\";\n        if (d < 0) {\n            d = 0;\n        }\n\n        d = d / 1000;\n        var hours = Math.floor(d / 3600);\n        var mins = Math.floor((d - hours * 3600) / 60);\n        var seconds = Math.floor(d - hours * 3600 - mins * 60);\n\n        if (isM) {\n            mins = mins + hours * 60;\n        } else {\n            if (hours >= 10) {\n                ret = ret + hours + \":\";\n            } else {\n                ret = ret + \"0\" + hours + \":\";\n            }\n        }\n\n        if (mins >= 10) {\n            ret = ret + mins + \":\";\n        } else {\n            ret = ret + \"0\" + mins + \":\";\n        }\n        if (seconds >= 10) {\n            ret = ret + seconds;\n        } else {\n            ret = ret + \"0\" + seconds;\n        }\n\n        return ret;\n    },\n\n    /**\n       * 获取如下格式的时间\n       * 05:00:56\n       * @param d 单位：豪秒\n       * @param isM 是否强制只显示到分\n       * @returns {string}\n       */\n    getTimeStrChinese(d: number, isSce = true, isM = true, isHour = true) {\n        var ret = \"\";\n        if (d < 0) {\n            d = 0;\n        }\n\n        d = d / 1000;\n        var hours = Math.floor(d / 3600);\n        var mins = Math.floor((d - hours * 3600) / 60);\n        var seconds = Math.floor(d - hours * 3600 - mins * 60);\n\n\n        if (hours > 0) {\n            ret = ret + hours + \"时\";\n        }\n\n        if (mins >= 10) {\n            ret = ret + mins + \"分\";\n        } else {\n            ret = ret + \"0\" + mins + \"分\";\n        }\n        if (isSce) {\n            if (seconds >= 10) {\n                ret = ret + seconds + \"秒\";\n            } else {\n                ret = ret + \"0\" + seconds + \"秒\";\n            }\n        }\n\n        return ret;\n    },\n\n    /**\n     * 将对象obj中以time(不区分大小写)为结尾的key字符串值，转换为js时间对象Date\n     * @param obj\n     */\n    timeStrToDate(obj: any) {\n        if (typeof (obj) != \"object\" || obj == null) {\n            return obj;\n        }\n\n        if (Array.isArray(obj)) {\n            for (let i in obj) {\n                let item = obj[i];\n                if (item && typeof (item) == \"object\") {\n                    utilTools.timeStrToDate(item);\n                }\n            }\n        } else {\n            let keyArr = Object.keys(obj);\n            for (let i in keyArr) {\n                let key = keyArr[i] + \"\";\n                let val = obj[key];\n                if (val && typeof (val) == \"object\") {\n                    utilTools.timeStrToDate(val);\n                    continue;\n                }\n\n                try {\n                    let endStr = \"\";\n                    if (key.length >= 4) {\n                        endStr = key.substring(key.length - 4, key.length);\n                        if (endStr.toLocaleLowerCase() == \"time\" && val && typeof (val) == \"string\") {\n                            obj[key] = new Date(val);\n                        }\n                    }\n                } catch (e) {\n                    console.log(\"utilTools.timeStrToDate error:\" + e.message, e, obj);\n                }\n\n            }\n        }\n\n        return obj;\n    },\n\n    /**\n     * 数组排序\n     * @param arr \n     * @param compareFunc \n     */\n    sortArr(arr: any, compareFunc: Function) {\n        if (!arr || arr.length <= 1) {\n            return arr;\n        }\n        for (let i = 0; i < arr.length - 1; i++) {\n            for (let j = i + 1; j < arr.length; j++) {\n                let item1 = arr[i];\n                let item2 = arr[j];\n                if (compareFunc(item1, item2)) {\n                    arr[i] = item2;\n                    arr[j] = item1;\n                }\n            }\n        }\n    },\n\n    /**\n     * 概率是否满足\n     * @param val 概率值 0到1\n     */\n    isProb(val: number) {\n        if (!val) {\n            val = 0;\n        }\n        if (Math.random() < val) {\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * 打乱数组元素，默认不改变原有的数组，返回新的打乱后的数组\n     * @param arr \n     * @param isOrign true:原数组会被修改\n     */\n    randomArr(arr: any, isOrign: boolean = false): any {\n        if (!isOrign) {\n            arr = JSON.parse(JSON.stringify(arr));\n        }\n        let tmpArr = [];\n        while (arr.length > 0) {\n            let index = Math.floor(Math.random() * arr.length);\n            tmpArr.push(arr[index]);\n            arr.splice(index, 1);\n        }\n        return tmpArr;\n    },\n\n    /**\n     * 返回给定范围内的随机数值,整数包括左右边界\n     * @param min 最小值\n     * @param max 最大值\n     * @param isInt 是否整数化\n     * @returns {number}\n     */\n    getRandomFloat(min: number, max: number, isInt?: boolean) {\n        let dv = max - min;\n        if (dv == 0) {\n            return min;\n        }\n        if (dv < 0) {\n            return 0;\n        }\n        if (isInt) {\n            let val = min + Math.floor(Math.random() * (dv + 1));\n            return val;\n        }\n\n        let val = min + Math.random() * dv;\n        return val;\n    },\n\n    // 跨天判断\n    overDay(date: any, now?: any) {\n        if (!date) {\n            return true;\n        }\n\n        if (!now) {\n            now = new Date();\n        }\n        let overDay = false;\n        if (date.getDate() == now.getDate()) {\n            if (now.getTime() - date.getTime() >= 24 * 60 * 60 * 1000) {\n                overDay = true;\n            }\n        } else {\n            overDay = true;\n        }\n\n        return overDay;\n    },\n\n    /**\n     * 根据权重从数组中返回指定的个数元素\n     * @param arr 数组\n     * @param num 返回个数\n     * @param canRepeat 是否可以重复取，默认不可以\n     * @returns {Array} 返回结果数组\n     */\n    getRowsByWeightAndNum(arr: any, num: number, canRepeat?: boolean) {\n        if (!num) {\n            num = 1;\n        }\n        var ret = [];\n        arr = utilTools.copyObj(arr);\n        for (var i = 0; i < num; i++) {\n            if (arr.length <= 0) {\n                break;\n            }\n            var row = this.getRowByWeight(arr);\n            ret.push(row);\n            if (!canRepeat) {\n                var index = arr.indexOf(row);\n                arr.splice(index, 1);\n            }\n        }\n        return ret;\n    },\n\n    /**\n     * 根据权重从数组中返回一个元素\n     * @param arr\n     * @param totalWeight\n     */\n    getRowByWeight(arr: any, totalWeight?: number) {\n        if (!totalWeight) {\n            totalWeight = 0;\n            for (var i in arr) {\n                var weight = arr[i].weight;\n                if (!weight) {\n                    weight = 0;\n                }\n                totalWeight += weight;\n            }\n        }\n        var random = Math.random() * totalWeight;\n        var left = 0;\n        var row = null;\n        for (var i in arr) {\n            var tmpRow = arr[i];\n            var weight = tmpRow.weight;\n            if (!weight) {\n                weight = 0;\n            }\n            if (random >= left && random < left + weight) {\n                row = tmpRow;\n                break;\n            }\n            left += weight;\n        }\n\n        return row;\n    },\n\n    /**\n     * 从给定的数组中，随机取出一个元素\n     * @param arr 数组\n     * @param isRemove 是否将该元素从数组中移除\n     * @return {null|*} 返回随机到的元素\n     */\n    getRandomItemByArr(arr: any, isRemove: boolean = false) {\n        if (!arr || arr.length <= 0) {\n            return null;\n        }\n        let index = Math.floor(Math.random() * arr.length);\n        let item = arr[index];\n        if (isRemove) {\n            arr.splice(index, 1);\n        }\n\n        return item;\n    },\n\n    /**\n     * 深度拷贝对象\n     * @param obj 要拷贝的对象内容\n     */\n    copyObj(obj: object) {\n        return JSON.parse(JSON.stringify(obj));\n    },\n\n}\n"]}