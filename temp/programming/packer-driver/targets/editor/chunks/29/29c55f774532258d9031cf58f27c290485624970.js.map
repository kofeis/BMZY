{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/framework/common/BaseLayer.ts"],"names":["_decorator","Button","Component","find","Label","Node","ProgressBar","RichText","ScrollView","sp","Sprite","layerManager","ResLoader","resManager","eventManager","msgcmd","constants","cocosUtil","audioManager","ItemLayer","ScrollViewUtil","tweenUtil","ccclass","property","BaseLayer","layerName","layerData","layerCb","layerId","pathNodeObj","Map","resLoader","autoReleaseAsset","preLoadAssetConfigArr","eventArr","openUpdateSecond","updateSecondInterval","openAllBtnInteractive","openBtnLongPress","btnLongTrigTime","btnLognTrigTimeCount","btnLongTrigCount","btnLongNode","isShowBannerAd","onLoad","addPathNode","node","onEnable","addButtonListener","initUI","refreshRedPoint","clearInterval","setInterval","updateSecond","onDisable","removeEventArr","undefined","onDestroy","layers","HomeLayer","releaseAllAsset","path","set","chs","children","i","len","length","pNode","name","getNodeByPath","get","getComponent","on","preOnButtonClick","EventType","TOUCH_START","preOnButtonTouchStart","TOUCH_MOVE","preOnButtonTouchMove","TOUCH_END","preOnButtonTouchEnd","TOUCH_CANCEL","preOnButtonTouchCancel","indexOf","addComponent","max","ch","btn","console","info","first","substring","remain","key","toLocaleUpperCase","hasPlayAudio","preOnButtonLongClick","btnNode","top","event","target","touch","isShowingLayer","playAudioEffect","delayTime","isValid","scheduleOnce","playEffect","openLayer","data","cb","showCb","openSingleLayer","baseLayer","prefab","addAsset","forEach","assetConfig","asset","closeLayer","destroy","addEventArr","arr","val","register","preProcessEvent","remove","cmd","cmd2KeyObj","call","log","setProgressBar","progressBar","percent","progress","setNumString","num","formatNum","setString","setItemLayer","itemLayer","addComponentOnce","setNumItemLayer","push","itemUI","item","index","shakeScreen","tweenShakeNode","getPopLayerParentNode","label","string","rich","setSpriteFrame","bundleName1","bundles","ui","sprite","enabled","bundleName","d","split","loadSpriteFrame","err","spriteFrame","setSpriteFrame2","setSpineData","skeleton","Skeleton","spine","spinePath","loadSpineData","skeletonData","setSpineData2","scrollViewSetData","scrollViewNode","refreshItemFunc","resetPos","itemTween","scrollViewUtil","setData","scrollViewRefreshList","refreshList","update","dt","isGoOn"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, UITransform, EventTouch, find, Label, Node, Prefab, ProgressBar, ResolutionPolicy, RichText, ScrollView, sp, Sprite, SpriteFrame, v3, view, Widget } from 'cc';\nimport { layerManager } from '../manager/LayerManager';\nimport { AssetConfig, ResLoader, resManager } from '../manager/ResManager';\nimport { eventManager } from '../manager/EventManager';\nimport { msgcmd } from '../../game/data/MsgCmd'\nimport { constants } from '../../game/data/Constants';\nimport { cocosUtil } from '../utils/CocosUtil';\nimport { audioManager } from '../manager/AudioManager';\nimport { ItemLayer } from './ItemLayer';\nimport { ScrollViewUtil } from './ScrollViewUtil';\nimport { tweenUtil } from '../utils/TweenUtil';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('BaseLayer')\nexport class BaseLayer extends Component {\n\n    public layerName: string = \"DefaultLayer\";\n\n    // 展示界面携带的数据和回调\n    public layerData: any = {};\n    public layerCb: Function = null;\n    public layerId: number = -1;\n\n    // {路径:节点对象}\n    public pathNodeObj: Map<string, Node> = new Map();\n\n    // 资源管理类\n    private resLoader: ResLoader = new ResLoader();\n    // 是否开启内存管理\n    public autoReleaseAsset: boolean = false;\n\n    // 特定预加载的资源\n    public preLoadAssetConfigArr: AssetConfig[];\n\n    // 监听事件\n    private eventArr: any;\n\n    // 控制是否打开秒级的update\n    public openUpdateSecond: boolean = false;\n    private updateSecondInterval: any;\n\n    // 按钮是否响应点击\n    public openAllBtnInteractive: boolean = true;\n\n    // 按钮长按功能开关\n    public openBtnLongPress: boolean = false;\n    // 多长时间后开始触发\n    private btnLongTrigTime: number = 0.5;\n    private btnLognTrigTimeCount: number = 0;\n    // 触发次数统计\n    private btnLongTrigCount: number = 0;\n    // 长按按钮节点对象\n    private btnLongNode: Node = null;\n\n    // 控制是否显示banner广告\n    isShowBannerAd: boolean = false;\n\n    onLoad() {\n        this.addPathNode(this.node, \"\");\n    }\n\n    onEnable() {\n        this.addButtonListener(this.node);\n        this.initUI();\n        this.refreshRedPoint();\n\n        if (this.openUpdateSecond) {\n            if (this.updateSecondInterval) {\n                clearInterval(this.updateSecondInterval);\n            }\n            this.updateSecondInterval = setInterval(() => {\n                this.updateSecond();\n            }, 1000);\n            this.updateSecond();\n        }\n\n        if (this.isShowBannerAd) {\n            // adManager.showBannerAd()\n        }\n\n        // eventManager.register(msgcmd.refreshRedPoint, this.refreshRedPoint, this);\n    }\n\n    updateSecond() {\n\n    }\n\n    refreshRedPoint() {\n\n    }\n\n    initUI() {\n\n    }\n\n    onDisable() {\n        this.removeEventArr(this.eventArr);\n\n        if (this.updateSecondInterval) {\n            clearInterval(this.updateSecondInterval);\n            this.updateSecondInterval = undefined;\n        }\n\n        if (this.isShowBannerAd) {\n            // adManager.hideBannerAd()\n        }\n\n        // eventManager.remove(msgcmd.refreshRedPoint, this.refreshRedPoint, this);\n    }\n\n    onDestroy() {\n        switch (this.layerName) {\n            case constants.layers.HomeLayer:\n                // 这些UI不释放资源\n                return;\n            default:\n                break;\n        }\n        if (this.autoReleaseAsset) {\n            this.resLoader.releaseAllAsset();\n        }\n    }\n\n    // /**\n    //  * 缩放背景图，达到满屏显示，背景图部分内容超出屏幕也没事\n    //  * @param node 背景图节点\n    //  */\n    // screenAdapterBg(node: Node) {\n    //     if (!cocosUtil.isValid(node)) {\n    //         return;\n    //     }\n    //     let widget = node.getComponent(Widget);\n    //     if (widget) {\n    //         widget.enabled = false;\n    //     }\n    //     let scale = cocosUtil.getScreenBgAdapterScale();\n    //     let scaleX = node.getScale().x;\n    //     let scaleY = node.getScale().y;\n    //     node.setScale(v3(scaleX * scale, scaleY * scale, 1));\n    // }\n\n    addPathNode(node: Node, path: string) {\n        if (node != this.node) {\n            this.pathNodeObj.set(path, node);\n        }\n        if (path) {\n            path += \"/\";\n        }\n        let chs = node.children;\n        for (let i = 0, len = chs.length; i < len; i++) {\n            let pNode = chs[i];\n            this.addPathNode(pNode, path + pNode.name);\n        }\n    }\n\n    getNodeByPath(path: string): Node {\n        let node = this.pathNodeObj.get(path);\n        if (node) {\n            return node;\n        }\n\n        node = find(path, this.node);\n        if (node) {\n            this.pathNodeObj.set(path, node);\n            return node;\n        }\n\n        return null;\n    }\n\n    addButtonListener(node: Node) {\n        if (node.getComponent(Button)) {\n            node.on(\"click\", this.preOnButtonClick, this);\n            if (this.openBtnLongPress) {\n                node.on(Node.EventType.TOUCH_START, this.preOnButtonTouchStart, this);\n                node.on(Node.EventType.TOUCH_MOVE, this.preOnButtonTouchMove, this);\n                node.on(Node.EventType.TOUCH_END, this.preOnButtonTouchEnd, this);\n                node.on(Node.EventType.TOUCH_CANCEL, this.preOnButtonTouchCancel, this);\n            }\n        }\n        if (node.getComponent(ScrollView)) {\n            let name = node.name;\n            if (name.indexOf(\"NoUtil\") == -1 && !node.getComponent(ScrollViewUtil)) {\n                node.addComponent(ScrollViewUtil);\n            }\n        }\n\n        let chs = node.children;\n        for (let i = 0, max = chs.length; i < max; i++) {\n            let ch = chs[i];\n            this.addButtonListener(ch);\n        }\n    };\n\n    preOnButtonClick(btn: any) {\n        if (!this.openAllBtnInteractive) {\n            return;\n        }\n        if (this.openBtnLongPress && this.btnLongTrigCount > 0) {\n            this.btnLongTrigCount = 0;\n            return;\n        }\n\n        let node = btn.node;\n        let name = node.name;\n        console.info(this.layerName + \" onButtonClick \" + name);\n\n        if (name.length >= 2) {\n            let first = name.substring(0, 1);\n            let remain = name.substring(1, name.length);\n            let key = \"on\" + first.toLocaleUpperCase() + remain + \"Click\";\n            if (this[key]) {\n                this[key](node);\n            }\n        }\n\n        if (!node.hasPlayAudio) {\n            // 如果还没播放按钮音效，就播放通用按钮音效\n        }\n    }\n\n    preOnButtonLongClick(btnNode: Node) {\n        if (!this.openAllBtnInteractive) {\n            return;\n        }\n\n        let name = btnNode.name;\n        console.info(this.layerName + \" onButtonLongClick \" + name);\n        if (this[\"onButtonLongClick\"]) {\n            return this[\"onButtonLongClick\"](btnNode, name);\n        }\n\n        if (name.length >= 2) {\n            let top = name.substring(0, 1);\n            let remain = name.substring(1, name.length);\n            let key = \"onLongClick\" + top.toLocaleUpperCase() + remain;\n            if (this[key]) {\n                return this[key](btnNode);\n            }\n        }\n\n        return false;\n    }\n\n    preOnButtonTouchStart(event: EventTouch) {\n        let btnNode = event.target;\n        let touch = event.touch;\n        this.btnLongNode = btnNode;\n        this.btnLognTrigTimeCount = 0;\n        this.btnLongTrigCount = 0;\n    }\n\n    preOnButtonTouchMove(event: EventTouch) {\n\n    }\n\n    preOnButtonTouchEnd(event: EventTouch) {\n        this.btnLongNode = null;\n    }\n\n    preOnButtonTouchCancel(event: EventTouch) {\n        this.btnLongNode = null;\n    }\n\n    isShowingLayer(layerName: string) {\n        return layerManager.isShowingLayer(layerName);\n    }\n\n    playAudioEffect(name: string, btnNode?: any, delayTime?: number) {\n        if (!delayTime) {\n            delayTime = 0;\n        }\n        if (cocosUtil.isValid(btnNode)) {\n            btnNode.hasPlayAudio = true;\n        }\n        this.scheduleOnce(() => {\n            audioManager.playEffect(name);\n            if (cocosUtil.isValid(btnNode)) {\n                btnNode.hasPlayAudio = undefined;\n            }\n        }, delayTime)\n    }\n\n    openLayer(layerName: string, data?: any, cb?: Function, showCb?: Function) {\n        console.info(\"open layer\", layerName);\n        // 默认每个弹窗只允许同时显示一个\n        if (typeof (data) == \"function\") {\n            cb = data;\n            data = null;\n        }\n\n        layerManager.openSingleLayer(layerName, data, cb, (baseLayer: BaseLayer, prefab: Prefab) => {\n            if (baseLayer.autoReleaseAsset && baseLayer.resLoader) {\n                baseLayer.resLoader.addAsset(prefab);\n                if (baseLayer.preLoadAssetConfigArr) {\n                    baseLayer.preLoadAssetConfigArr.forEach((assetConfig: AssetConfig) => {\n                        if (assetConfig.asset) {\n                            baseLayer.resLoader.addAsset(assetConfig.asset);\n                        }\n                    });\n                }\n            }\n            if (showCb) {\n                showCb();\n            }\n        });\n    }\n\n    closeLayer(layerId?: number | string) {\n        if (!layerId) {\n            layerId = this.layerId;\n        }\n        if (layerId && layerId != -1) {\n            layerManager.closeLayer(layerId);\n            return;\n        }\n        this.node.destroy();\n    }\n\n    addEventArr(arr: any) {\n        this.eventArr = arr;\n        for (let i in arr) {\n            let val = arr[i];\n            if (!val) {\n                continue;\n            }\n            eventManager.register(val, this.preProcessEvent, this);\n        }\n    }\n\n    removeEventArr(arr: any) {\n        for (let i in arr) {\n            let val = arr[i];\n            if (!val) {\n                continue;\n            }\n            eventManager.remove(val, this.preProcessEvent, this);\n        }\n    }\n\n    preProcessEvent(event: any) {\n        let cmd = event.cmd;\n        let data = event.data;\n        let key = msgcmd.cmd2KeyObj[cmd] + \"EventCb\";\n        if (this[key]) {\n            this[key].call(this, data);\n        }\n        console.log(\"event callback function not found\", key, cmd, msgcmd.cmd2KeyObj);\n    }\n\n    // createNotice(content) {\n    //     layerManager.createNotice(content);\n    // }\n\n    setProgressBar(progressBar: Node | ProgressBar, percent: number) {\n        if (progressBar instanceof Node) {\n            progressBar = progressBar.getComponent(ProgressBar);\n        }\n        if (progressBar) {\n            progressBar.progress = percent;\n        }\n    }\n\n    setNumString(node: Node, num: any) {\n        num = cocosUtil.formatNum(num);\n        this.setString(node, num);\n    }\n\n    setItemLayer(node: Node, arr: any, cb?: Function) {\n        let itemLayer = cocosUtil.addComponentOnce(node, ItemLayer);\n        itemLayer.initUI(this, arr, cb);\n    }\n\n    setNumItemLayer(node: Node, num: number, cb?: Function) {\n        let arr = [];\n        for (let i = 0; i < num; i++) {\n            arr.push(i + 1);\n        }\n        let itemLayer = node.getComponent(ItemLayer);\n        if (!itemLayer) {\n            itemLayer = node.addComponent(ItemLayer);\n        }\n        itemLayer.initUI(this, arr, (itemUI: Node, item: any, index: number) => {\n            if (cb) {\n                cb(itemUI, item, index);\n            }\n        });\n    }\n\n    // 屏幕振动\n    shakeScreen() {\n        tweenUtil.tweenShakeNode(layerManager.getPopLayerParentNode());\n    }\n\n    setString(node: Node, info: any) {\n        if (!node) {\n            console.info(\"setString error: node is null\", info);\n            return;\n        }\n        info = info + \"\";\n        let label = node.getComponent(Label);\n        if (label) {\n            label.string = info;\n            return;\n        }\n\n        let rich = node.getComponent(RichText);\n        if (rich) {\n            rich.string = info;\n            return;\n        }\n    }\n\n    // name可以指定bundle\n    setSpriteFrame(node: Node, name: string, showCb?: Function, bundleName1 = constants.bundles.ui) {\n        if (!name) {\n            return;\n        }\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let sprite = node.getComponent(Sprite);\n        if (!cocosUtil.isValid(sprite)) {\n            return;\n        }\n        sprite.enabled = false;\n        node[\"loadName\"] = name;\n\n        let bundleName = bundleName1;\n        let d = name.split(\"_\");\n        let path = d[0] + \"/\" + name;\n        let arr = name.split(\"|\");\n        if (arr.length >= 2) {\n            bundleName = arr[0];\n            path = arr[1];\n        }\n\n        resManager.loadSpriteFrame(bundleName, path, (err, spriteFrame: SpriteFrame) => {\n            if (err) {\n                return;\n            }\n            if (!cocosUtil.isValid(node)) {\n                return;\n            }\n            if (!cocosUtil.isValid(sprite)) {\n                return;\n            }\n            if (node[\"loadName\"] != name) {\n                return;\n            }\n            if (this.autoReleaseAsset) {\n                this.resLoader.addAsset(spriteFrame);\n            }\n            sprite.enabled = true;\n            sprite.spriteFrame = spriteFrame;\n            if (showCb) {\n                showCb();\n            }\n        });\n    }\n\n    // name为路径参数\n    setSpriteFrame2(node: Node, name: string, showCb?: Function, bundleName1 = constants.bundles.ui) {\n        if (!name) {\n            return;\n        }\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let sprite = node.getComponent(Sprite);\n        if (!cocosUtil.isValid(sprite)) {\n            return;\n        }\n        sprite.enabled = false;\n        node[\"loadName\"] = name;\n\n        let bundleName = bundleName1;\n        let path = name\n\n        resManager.loadSpriteFrame(bundleName, path, (err, spriteFrame: SpriteFrame) => {\n            if (err) {\n                return;\n            }\n            if (!cocosUtil.isValid(node)) {\n                return;\n            }\n            if (!cocosUtil.isValid(sprite)) {\n                return;\n            }\n            if (node[\"loadName\"] != name) {\n                return;\n            }\n            if (this.autoReleaseAsset) {\n                this.resLoader.addAsset(spriteFrame);\n            }\n            sprite.enabled = true;\n            sprite.spriteFrame = spriteFrame;\n            if (showCb) {\n                showCb();\n            }\n        });\n    }\n\n\n    setSpineData(node: Node, name: string, showCb?: Function) {\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let skeleton = node.getComponent(sp.Skeleton);\n        if (!cocosUtil.isValid(skeleton)) {\n            return;\n        }\n        skeleton.enabled = false;\n        node[\"loadName\"] = name;\n        let bundleName = constants.bundles.spine;\n        let spinePath = name + \"/\" + name;\n\n        resManager.loadSpineData(bundleName, spinePath, (err, skeletonData: sp.SkeletonData) => {\n            if (err) {\n                return;\n            }\n            if (!cocosUtil.isValid(node)) {\n                return;\n            }\n            if (!cocosUtil.isValid(skeleton)) {\n                return;\n            }\n            if (node[\"loadName\"] != name) {\n                return;\n            }\n            if (this.autoReleaseAsset) {\n                this.resLoader.addAsset(skeletonData);\n            }\n            skeleton.enabled = true;\n            skeleton.skeletonData = skeletonData;\n            if (showCb) {\n                showCb(skeleton);\n            }\n        });\n    }\n\n\n    setSpineData2(node: Node, bundleName, name: string, showCb?: Function) {\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let skeleton = node.getComponent(sp.Skeleton);\n        if (!cocosUtil.isValid(skeleton)) {\n            return;\n        }\n        skeleton.enabled = false;\n        node[\"loadName\"] = name;\n        let spinePath = name\n\n        resManager.loadSpineData(bundleName, spinePath, (err, skeletonData: sp.SkeletonData) => {\n            if (err) {\n                return;\n            }\n            if (!cocosUtil.isValid(node)) {\n                return;\n            }\n            if (!cocosUtil.isValid(skeleton)) {\n                return;\n            }\n            if (node[\"loadName\"] != name) {\n                return;\n            }\n            if (this.autoReleaseAsset) {\n                this.resLoader.addAsset(skeletonData);\n            }\n            skeleton.enabled = true;\n            skeleton.skeletonData = skeletonData;\n            if (showCb) {\n                showCb(skeleton);\n            }\n        });\n    }\n\n    scrollViewSetData(scrollViewNode: Node, arr: any, refreshItemFunc?: Function, resetPos: boolean = true, itemTween: boolean = false) {\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\n        if (!scrollViewUtil) {\n            return;\n        }\n        scrollViewUtil.setData(arr, (itemUI: Node, item: any, index: number) => {\n            if (refreshItemFunc) {\n                refreshItemFunc(itemUI, item, index);\n            }\n            this.addButtonListener(itemUI);\n        }, resetPos, itemTween);\n    }\n\n    scrollViewRefreshList(scrollViewNode: Node) {\n        let scrollViewUtil = scrollViewNode.getComponent(ScrollViewUtil);\n        if (!scrollViewUtil) {\n            return;\n        }\n        scrollViewUtil.refreshList();\n    }\n\n    update(dt: number) {\n        if (this.openBtnLongPress && this.btnLongNode) {\n            this.btnLognTrigTimeCount += dt;\n            if (this.btnLognTrigTimeCount >= this.btnLongTrigTime) {\n                let isGoOn = this.preOnButtonLongClick(this.btnLongNode);\n                this.btnLongTrigCount++;\n                if (!isGoOn) {\n                    // 默认只会触发一次\n                    this.btnLongNode = null;\n                    this.btnLognTrigTimeCount = 0;\n                }\n            }\n        }\n    }\n\n}"]}