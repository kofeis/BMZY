{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/game/model/GameModel.ts"],"names":["GameModel","_decorator","Prefab","msgcmd","eventManager","resManager","constants","designManager","utilTools","ccclass","property","constructor","gameLayer","hexagonPrefabs","mapId","mapRecipeItemArr","mapFoodRow","instance","_instance","setCompoments","mapLeave","data","console","info","emit","enterMapWithMapId","createRecipeItemArr","getRowById","tableNames","food","getFirstIdByType","log","obj","mapEnter","arr","getRowsByType","material","forEach","row","recipeItem","id","targetClearNum","num","push","getRecipeItemById","index","findIndex","e","loadMapRes","progressCb","endCb","loadHexagonAndOtherRes","sum","onePercent","hexagonPercent","otherPercent","tmpFunc","p","tmpFunc2","loadHexagonRes","percent","loadOtherRes","pathArr","forArr","indexOf","prefab","loadAssetByPathArr","bundles","prefabArr","name","getHexagonPrefab","gameModel"],"mappings":"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","sourcesContent":["import { _decorator, Prefab } from 'cc';\nimport { audioManager } from '../../framework/manager/AudioManager';\nimport { GameLayer } from '../layer/GameLayer';\nimport { msgcmd } from '../data/MsgCmd';\nimport { eventManager } from '../../framework/manager/EventManager';\nimport { resManager } from '../../framework/manager/ResManager';\nimport { constants } from '../data/Constants';\nimport { designManager } from '../../framework/manager/DesignManager';\nimport { utilTools } from '../../framework/utils/UtilTools';\n\nconst { ccclass, property } = _decorator;\n\nexport class GameModel {\n    \n    // 单例\n    private static _instance: GameModel;\n    private constructor() {}\n    public static get instance(): GameModel {\n        if (!this._instance) {\n            this._instance = new GameModel();\n        }\n        return this._instance;\n    }\n\n    gameLayer: GameLayer;\n\n    // 六边形Prefab\n    hexagonPrefabs: any = {};\n\n    // 当前哪一关\n    mapId: number;\n    // 食材列表\n    mapRecipeItemArr: any[];\n    mapFoodRow: any;\n\n    setCompoments(gameLayer: GameLayer) {\n        this.gameLayer = gameLayer;\n    }\n\n    mapLeave(data: any) {\n        console.info(\"map leave\");\n        this.mapId = 0;\n        this.mapRecipeItemArr = [];\n        this.mapFoodRow = null;\n        eventManager.emit(msgcmd.mapLeave, data);\n    }\n\n    enterMapWithMapId(mapId: number) {\n        this.mapId = mapId;\n        this.createRecipeItemArr();\n        this.mapFoodRow = designManager.getRowById(constants.tableNames.food, designManager.getFirstIdByType(mapId));\n\n        console.log(\"mapId\", this.mapId, \"mapRecipeItemArr\", this.mapRecipeItemArr, \"mapFoodRow\", this.mapFoodRow);\n\n\n        let obj: any = {};\n        obj.mapId = mapId;\n        eventManager.emit(msgcmd.mapEnter, obj);\n    }\n\n    // 生成食材列表\n    private createRecipeItemArr() {\n        this.mapRecipeItemArr = [];\n\n        let arr = designManager.getRowsByType(constants.tableNames.material, this.mapId);\n        if (!arr) {\n            return;\n        }\n\n        arr.forEach((row: any) => {\n            let recipeItem: any = {};\n            recipeItem.id = row.id;\n            recipeItem.row = row;\n            recipeItem.targetClearNum = row.num;\n            this.mapRecipeItemArr.push(recipeItem);\n        });\n    }\n\n    getRecipeItemById(id: number): any {\n        let index = this.mapRecipeItemArr.findIndex((e: any) => {\n            return e.id == id;\n        })\n\n        return (index != -1) ? this.mapRecipeItemArr[index] : null;\n    }\n\n    // 进入关卡之前，加载必要的资源\n    loadMapRes(progressCb: Function, endCb: Function) {\n        this.loadHexagonAndOtherRes(progressCb, endCb);\n    }\n\n    // 统一处理加载进度    \n    loadHexagonAndOtherRes(progressCb: Function, endCb: Function) {\n        let sum = 2;\n        let onePercent = 1 / sum;\n        let hexagonPercent = 0;\n        let otherPercent = 0;\n\n        let tmpFunc = () => {\n            let p = hexagonPercent * onePercent + otherPercent * onePercent;\n            progressCb(p);\n        };\n        let tmpFunc2 = () => {\n            if (hexagonPercent + otherPercent == sum) {\n                endCb();\n            }\n        };\n\n        this.loadHexagonRes((percent: number) => {\n            hexagonPercent = percent;\n            tmpFunc();\n        }, () => {\n            hexagonPercent = 1;\n            tmpFunc2();\n        });\n        this.loadOtherRes((percent: number) => {\n            otherPercent = percent;\n            tmpFunc();\n        }, () => {\n            otherPercent = 1;\n            tmpFunc2();\n        });\n    }\n\n    // 加载六边形资源\n    loadHexagonRes(progressCb: Function, endCb: Function) {\n        this.hexagonPrefabs = {};\n\n        let pathArr = [];\n        let arr = designManager.getRowsByType(constants.tableNames.material, this.mapId);\n        utilTools.forArr(arr, (row: any) => {\n            if (pathArr.indexOf(row.prefab) == -1) {\n                pathArr.push(row.prefab);\n            }\n        });\n\n        resManager.loadAssetByPathArr(constants.bundles.prefab, pathArr, Prefab, progressCb, (prefabArr: [Prefab]) => {\n            prefabArr.forEach((prefab: any) => {\n                let name = prefab.name;\n                this.hexagonPrefabs[name] = prefab;\n                console.log(\"load hexagon prefab\", name);\n            });\n            endCb();\n        });\n    }\n\n    // 其他碎片资源\n    loadOtherRes(progressCb: Function, endCb: Function) {\n        endCb();\n    }\n\n    getHexagonPrefab(id: number): Prefab {\n        return this.hexagonPrefabs[\"Hexagon\"]\n    }\n    \n}\n\nexport const gameModel = GameModel.instance;\n"]}