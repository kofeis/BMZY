{"version":3,"sources":["file:///D:/CYDW/WoChengYuTeNiu/assets/Script/Mode/Jump_String/Jump_String_Script.ts"],"names":["_decorator","Component","color","CCFloat","Label","LabelOutline","tween","Layout","v3","Font","Prefab","instantiate","ccclass","property","Jump_String_Script","type","tooltip","start","node","addComponent","getComponent","Type","HORIZONTAL","resizeMode","ResizeMode","CONTAINER","i","str","length","labelNode","label","isOulin","labelOutLine","oulineColor","width","oulineWidth","font","lineHeight","fontSize","string","addChild","scheduleOnce","playStrJump","schedule","aniTime","jumpTime","strIndex","jumpStr","sequence","to","position","x","children"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, color, Color, CCFloat, Label, LabelOutline, tween, Layout, v3, Font, Prefab, instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Jump_String_Script')\r\nexport class Jump_String_Script extends Component {\r\n\r\n\r\n\r\n    @property({type:Prefab})\r\n    Prefab: Prefab = null;\r\n\r\n    @property({ tooltip: \"需要跳动的字符串\" })\r\n    str: String = \"\";\r\n\r\n    @property({ type: CCFloat, tooltip: \"字符大小\" })\r\n    fontSize: number = 0;\r\n\r\n    @property({ type: CCFloat, tooltip: \"单个字符跳动时间\" })\r\n    aniTime: number = 0;\r\n\r\n    @property({ tooltip: \"描边颜色\" })\r\n    oulineColor: Color = color(255, 255, 255);\r\n\r\n    @property({ type: CCFloat, tooltip: \"描边宽度\" })\r\n    oulineWidth: number = 1;\r\n\r\n    @property({ tooltip: \"是否打开描边\" })\r\n    isOulin: boolean = true;\r\n\r\n    @property({ type: Font, tooltip: \"单个字符跳动时间\" })\r\n    font: Font = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n        this.node.addComponent(Layout);\r\n\r\n        this.node.getComponent(Layout).type = Layout.Type.HORIZONTAL;\r\n        this.node.getComponent(Layout).resizeMode = Layout.ResizeMode.CONTAINER;\r\n\r\n        for (let i: number = 0; i < this.str.length; i++) {\r\n            let str = this.str[i];\r\n            let labelNode = instantiate(this.Prefab);\r\n\r\n            let label = labelNode.getComponent(Label);\r\n            if (this.isOulin) {\r\n                let labelOutLine = labelNode.addComponent(LabelOutline);\r\n                labelOutLine.color = this.oulineColor\r\n                labelOutLine.width = this.oulineWidth\r\n            }\r\n            label.font = this.font;\r\n            label.lineHeight = this.fontSize;\r\n            label.string = str;\r\n            label.fontSize = this.fontSize;\r\n            this.node.addChild(labelNode);\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            this.playStrJump();\r\n            this.schedule(() => {\r\n                this.playStrJump();\r\n            }, this.aniTime * this.str.length / 2 + 0.2);\r\n        })\r\n    }\r\n\r\n    playStrJump() {\r\n        let jumpTime = this.aniTime / 2;\r\n        let strIndex = 0;\r\n        let jumpStr = (labelNode: Node) => {\r\n            tween(labelNode)\r\n                .sequence(\r\n                    tween().to(jumpTime, { position: v3(labelNode.position.x, this.fontSize / 2) }),\r\n                    tween().to(jumpTime / 4 * 3, { position: v3(labelNode.position.x, -this.fontSize / 3) }),\r\n                    tween().to(jumpTime / 4, { position: v3(labelNode.position.x, 0) })\r\n                )\r\n                // .repeatForever()\r\n                .start();\r\n\r\n\r\n            if (strIndex < this.node.children.length - 1) { //未到最后一个字符\r\n                strIndex++;\r\n                this.scheduleOnce(() => {\r\n                    jumpStr(this.node.children[strIndex]);\r\n                }, jumpTime / 2);\r\n            }\r\n        }\r\n\r\n        jumpStr(this.node.children[strIndex]);\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n\r\n}\r\n\r\n\r\n"]}