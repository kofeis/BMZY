{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/framework/utils/CocosUtil.ts"],"names":["Button","Color","Input","input","instantiate","isValid","Node","Quat","sys","tween","UIOpacity","UIRenderer","UITransform","v3","Vec3","view","utilTools","Object","defineProperty","prototype","configurable","enumerable","get","op","cocosUtil","addComponentOnce","opacity","set","p","getAroundPos","node","minRadius","maxRadius","isWorld","radius","getRandomFloat","radian","Math","random","PI","pos","rotateZ","ZERO","getPosition","add","convertToWorldSpaceWithPos","getRectPos","minWidth","minHeight","maxWidth","maxHeight","arr","r1","x","y","width","height","weight","push","r2","r3","r4","r","getRowByWeight","vec2XAngle","rad","atan2","angle","radianToAngle","vec3CopyVal","outVec3","srcVec3","z","schedule","com","cb","interval","repeatNum","delayTime","isAtOnce","item","name","comp","getComponent","addComponent","getSectorDirectionArr","direction","num","clone","normalize","multiplyScalar","da","floor","angleToRadian","topArr","downArr","i","dir1","dr","dir2","concat","getCircleDirectionArr","p2","startRadian","isInScreenVisible","parent","orignPos","getVisibleOrigin","convertToWorldSpace","getVisibleSize","tf","anchorX","anchorY","waitTimeAsync","time","Promise","resolve","setTimeout","scheduleOnce","getScreenMidWorldPos","size","nodeChangeParent","convertToNodeSpace","setPosition","isAndroid","platform","Platform","ANDROID","isDesktopBrowser","DESKTOP_BROWSER","isIos","IOS","isWechatGame","WECHAT_GAME","addKeyDownListener","sender","on","EventType","KEY_DOWN","init","designSize","getDesignResolutionSize","frameSize","getFrameSize","safeAreaRect","getSafeAreaRect","safeAreaMarginTop","intiScreenAdapterWidthScale","initScreenBgAdapterWidthScale","fh","fw","scale","adapterWidth","retScale","screenAdapterScale","getScreenAdapterScale","screenBgAdapterScale","getScreenBgAdapterScale","transform","convertToWorldSpaceAR","convertToNodeSpaceAR","setRenderableColor","color","isRecursion","renderable","temp","ch","children","getRenderableColor","getColorByHEX","hex","setButtonEnabled","enabled","btn","getQuatByAngleZ","quat","fromEuler","formatNum","toFixed","formatNumString","setNodePositionX","setNodePositionY","drawCurvePath","start","end","curveness","percent","delay","cp","tweenArr","curx","cury","t","quadraticBezier","abs","to","position","sequence","p0","p1","k"],"mappings":"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","sourcesContent":["import { Button, Color, Component, Input, input, instantiate, isValid, Node, Quat, sys, tween, Tween, UIOpacity, UIRenderer, UITransform, v3, Vec2, Vec3, view } from \"cc\";\nimport { utilTools } from \"./UtilTools\";\n\nObject.defineProperty(Node.prototype, \"opacity\", {\n    // 表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性，默认值为false。\n    configurable: true,\n    // 表示能否通过for in循环访问属性，默认值为false\n    enumerable: true,\n    // 3.writable：表示能否修改属性的值。默认值为false。\n    // 4.value：包含这个属性的数据值。默认值为undefined。\n    get() {\n        let op = cocosUtil.addComponentOnce(this, UIOpacity);\n        return op.opacity;\n    },\n    set(p: number) {\n        let op = cocosUtil.addComponentOnce(this, UIOpacity);\n        op.opacity = p;\n    }\n});\n\n\nexport const cocosUtil = {\n\n    /**\n     * 以node为中心的圆环区域内的随机点\n     * @param minRadius 最小半径\n     * @param maxRadius 最大半径\n     * @param isWorld 是否转为世界坐标，默认：是node坐标系下\n     */\n    getAroundPos(node: Node, minRadius: number, maxRadius: number, isWorld: boolean = false) {\n        let radius = utilTools.getRandomFloat(minRadius, maxRadius, true);\n        let radian = Math.random() * Math.PI * 2;\n        let pos = v3(radius, 0, 0);\n        Vec3.rotateZ(pos, pos, Vec3.ZERO, radian);\n\n        pos = node.getPosition().add(pos);\n        if (isWorld) {\n            pos = cocosUtil.convertToWorldSpaceWithPos(node, pos);\n        }\n\n        return pos;\n    },\n\n    /**\n     * 以node为中心的矩形环区域内的随机点\n     * @param node 参考节点\n     * @param minWidth 最小宽度\n     * @param minHeight 最小高度\n     * @param maxWidth 最大宽度\n     * @param maxHeight 最大高度\n     * @param isWorld 是否转为世界坐标，默认：是node坐标系下\n     */\n    getRectPos(node: Node, minWidth: number, minHeight: number, maxWidth?: number, maxHeight?: number, isWorld: boolean = false) {\n        if (!maxWidth) {\n            maxWidth = minWidth + 10;\n        }\n        if (!maxHeight) {\n            maxHeight = minHeight + 10;\n        }\n        // 分割成4个矩形\n        let arr = [];\n        // 上\n        let r1: any = {};\n        r1.x = -maxWidth * 0.5;\n        r1.y = minHeight * 0.5;\n        r1.width = maxWidth;\n        r1.height = (maxHeight - minHeight) * 0.5;\n        r1.weight = r1.width * r1.height;\n        arr.push(r1);\n\n        // 下\n        let r2: any = {};\n        r2.x = r1.x;\n        r2.y = -maxHeight * 0.5;\n        r2.width = r1.width;\n        r2.height = r1.height;\n        r2.weight = r1.weight;\n        arr.push(r2);\n\n        // 左\n        let r3: any = {};\n        r3.x = -maxWidth * 0.5;\n        r3.y = -minHeight * 0.5;\n        r3.width = (maxWidth - minWidth) * 0.5;\n        r3.height = minHeight;\n        r3.weight = r3.width * r3.height;\n        arr.push(r3);\n\n        // 右\n        let r4: any = {};\n        r4.x = minWidth * 0.5;\n        r4.y = r3.y;\n        r4.width = r3.width;\n        r4.height = r3.height;\n        r4.weight = r3.weight;\n        arr.push(r4);\n\n        let r = utilTools.getRowByWeight(arr);\n        let x = r.x + Math.random() * r.width;\n        let y = r.y + Math.random() * r.height;\n\n        let pos = v3(x, y);\n        pos = node.getPosition().add(pos);\n        if (isWorld) {\n            pos = cocosUtil.convertToWorldSpaceWithPos(node, pos);\n        }\n\n        return pos;\n    },\n\n    /**\n     * 得到与x轴正方向的夹角，取值范围：0~360度\n     * @param pos \n     */\n    vec2XAngle(pos: Vec2 | Vec3): number {\n        let rad = Math.atan2(pos.y, pos.x);\n        if (rad < 0) {\n            rad += Math.PI * 2;\n        }\n        let angle = utilTools.radianToAngle(rad);\n\n        return angle;\n    },\n\n    vec3CopyVal(outVec3: Vec3, srcVec3: Vec3) {\n        outVec3.x = srcVec3.x;\n        outVec3.y = srcVec3.y;\n        outVec3.z = srcVec3.z;\n\n        return outVec3;\n    },\n\n    schedule(com: Component, cb: Function, interval: number, repeatNum: number, delayTime: number = 0, isAtOnce: boolean = false) {\n        com.schedule(cb, interval, repeatNum, delayTime);\n        if (isAtOnce) {\n            cb();\n        }\n    },\n\n    addComponentOnce(item: Node | Component, name: any): any {\n        let comp = item.getComponent(name);\n        if (!comp) {\n            comp = item.addComponent(name);\n        }\n        return comp;\n    },\n\n    /**\n     * 以direction为中间方向，angle为间隔角度，获取num数量的，长度为radius的向量\n     * @param direction 基准方向\n     * @param angle 角度值\n     * @param num 个数，包括基准向量\n     * @param radius 向量长度\n     */\n    getSectorDirectionArr(direction: Vec3, angle: number, num: number, radius: number = 1) {\n        direction = direction.clone().normalize().multiplyScalar(radius);\n        if (num <= 1) {\n            return [direction];\n        }\n\n        let da = Math.floor(num / 2);\n        let radian = utilTools.angleToRadian(angle);\n        let topArr = [];\n        let downArr = [];\n        for (let i = da; i >= 1; i--) {\n            let dir1 = new Vec3(0, 0, 0);\n            let dr = radian * i;\n            Vec3.rotateZ(dir1, direction, Vec3.ZERO, dr);\n            topArr.push(dir1);\n\n            let dir2 = new Vec3(0, 0, 0);\n            dr = -radian * (da + 1 - i);\n            Vec3.rotateZ(dir2, direction, Vec3.ZERO, dr);\n            downArr.push(dir2);\n        }\n\n        topArr.push(direction);\n        let arr = topArr.concat(downArr);\n\n        return arr;\n    },\n\n    /**\n     * 获取num个围成方向为圆圈的，长度为radius的向量\n     * @param pos 圆心点\n     * @param num 个数\n     * @param radius 向量长度\n     */\n    getCircleDirectionArr(num: number, radius: number = 1) {\n        let r = Math.PI * 2 / num;\n        let p2 = v3(radius, 0, 0);\n        let arr = [];\n        // 随机起始角度\n        let startRadian = Math.random() * Math.PI * 2;\n        for (let i = 0; i < num; i++) {\n            let radian = startRadian + r * i;\n            let direction = v3(0, 0, 0)\n            direction = Vec3.rotateZ(direction, p2.clone(), Vec3.ZERO, radian);\n            arr.push(direction);\n        }\n\n        return arr;\n    },\n\n    isInScreenVisible(node: Node): boolean {\n        if (!node || !node.parent) {\n            return false;\n        }\n        let orignPos = view.getVisibleOrigin();\n        let pos = cocosUtil.convertToWorldSpace(node.parent, node.getPosition());\n        let height = view.getVisibleSize().height;\n        let width = view.getVisibleSize().width;\n        let tf = node.getComponent(UITransform);\n        // 考虑锚点\n        if (pos.x + (1 - tf.anchorX) * tf.width > orignPos.x\n            && pos.x - tf.anchorX * tf.width < width + orignPos.x\n            && pos.y + (1 - tf.anchorY) * tf.height > orignPos.y\n            && pos.y - tf.anchorY * tf.height < height + orignPos.y) {\n            return true;\n        }\n        return false;\n    },\n\n    instantiate(node: any) {\n        return instantiate(node);\n    },\n\n    /**\n     * 异步等待一段时间后，才会往下执行，不会造成阻塞\n     * @param com 组件基类\n     * @param time 等待时间，单位：秒\n     */\n    waitTimeAsync(com: Component | number, time?: number) {\n        return new Promise((resolve) => {\n            if (typeof (com) == \"number\") {\n                setTimeout(() => {\n                    // @ts-ignore\n                    resolve();\n                }, com * 1000);\n            } else {\n                com.scheduleOnce(() => {\n                    // @ts-ignore\n                    resolve();\n                }, time);\n            }\n        });\n    },\n\n    getScreenMidWorldPos() {\n        let size = view.getVisibleSize();\n        let pos = v3(size.width * 0.5, size.height * 0.5, 0);\n\n        return pos;\n    },\n\n    nodeChangeParent(node: Node, parent: Node) {\n        if (!this.isValid(node) || !this.isValid(parent)) {\n            return;\n        }\n        let pos = cocosUtil.convertToWorldSpace(parent, node.getPosition());\n        node.parent = parent;\n        pos = cocosUtil.convertToNodeSpace(node, pos);\n        node.setPosition(pos);\n    },\n\n    /**\n     * 判断节点或者组件是否可用\n     * @param node 节点对象 \n     */\n    isValid(node: Node | Component) {\n        if (!node || !isValid(node)) {\n            return false;\n        }\n        return true;\n    },\n\n    isAndroid() {\n        return sys.platform === sys.Platform.ANDROID;\n    },\n\n    isDesktopBrowser() {\n        return sys.platform === sys.Platform.DESKTOP_BROWSER;\n    },\n\n    isIos() {\n        return sys.platform === sys.Platform.IOS;\n    },\n\n    isWechatGame() {\n        return sys.platform === sys.Platform.WECHAT_GAME;\n    },\n\n    addKeyDownListener(cb, sender) {\n        input.on(Input.EventType.KEY_DOWN, cb, sender);\n    },\n\n    init() {\n        // 设计分辨率\n        this.designSize = view.getDesignResolutionSize();\n        // 实际屏幕分辨率\n        this.frameSize = view.getFrameSize();\n        // 实际屏幕安全区域，{x: 0, y: 0, width: 766.6256157635468, height: 1660}\n        // 是以左下角为原点，以设计分辨率为单位的，并且是遵循高度为适配原则后的尺寸\n        this.safeAreaRect = sys.getSafeAreaRect();\n\n        // 计算出顶部刘海屏高度\n        this.safeAreaMarginTop = this.designSize.height - this.safeAreaRect.height;\n        if (this.safeAreaMarginTop < 0) {\n            this.safeAreaMarginTop = 0;\n        }\n\n        this.intiScreenAdapterWidthScale();\n        this.initScreenBgAdapterWidthScale();\n    },\n\n\n    // UI适配，以高度为适配原则，按照满宽度显示计算，如果宽度不够显示，要乘以这个缩放比例\n    intiScreenAdapterWidthScale() {\n        let fh = this.frameSize.height;\n        let fw = this.frameSize.width;\n\n        let scale = fh / this.designSize.height;\n        let adapterWidth = this.designSize.width * scale;\n        let retScale = 1;\n        if (adapterWidth > fw) {\n            // 屏幕不够显示，有些交互UI会丢失，要进行缩小\n            retScale = fw / adapterWidth;\n        }\n\n        // if (this.safeAreaMarginTop > 0) {\n        //     // cocos内部以高度为适配策略，但是如果有刘海屏，要额外再缩放一点\n        //     let subScale = this.safeAreaMarginTop / this.designSize.height;\n        //     retScale -= subScale;\n        // }\n\n        this.screenAdapterScale = retScale;\n    },\n    getScreenAdapterScale() {\n        if (!this.screenAdapterScale) {\n            this.screenAdapterScale = 1;\n        }\n        return this.screenAdapterScale;\n    },\n\n    // 背景图适配，跟上面的UI适配，刚好相反，超出的屏幕不管，屏幕没显示满，要放大\n    initScreenBgAdapterWidthScale() {\n        let fh = this.frameSize.height;\n        let fw = this.frameSize.width;\n        let scale = fh / this.designSize.height;\n        let adapterWidth = this.designSize.width * scale;\n        let retScale = 1;\n        if (adapterWidth < fw) {\n            // 屏幕没显示满，会有黑边，要进行放大\n            retScale = fw / adapterWidth;\n        }\n\n        this.screenBgAdapterScale = retScale;\n    },\n\n    getScreenBgAdapterScale() {\n        if (!this.screenBgAdapterScale) {\n            this.screenBgAdapterScale = 1;\n        }\n        return this.screenBgAdapterScale;\n    },\n\n    /**\n     * 将node坐标转换为世界坐标\n     * @param node \n     * @param isCenter 是否强制是node的中心点坐标\n     */\n    convertToWorldSpace(node: Node, pos: Vec3): Vec3 {\n        let transform = node.getComponent(UITransform);\n        return transform.convertToWorldSpaceAR(pos);\n    },\n\n    convertToWorldSpaceWithPos(node: Node, pos: Vec3): Vec3 {\n        let transform = node.getComponent(UITransform);\n        pos = transform.convertToWorldSpaceAR(pos);\n        return pos;\n    },\n\n    /**\n     * 获得以node父节点锚点位置为原点的坐标系下的坐标\n     * @param node 注意，是同坐标系下的节点\n     * @param pos 世界坐标\n     */\n    convertToNodeSpace(node: Node, pos: Vec3): Vec3 {\n        let transform = node.getComponent(UITransform);\n        return transform.convertToNodeSpaceAR(pos);\n    },\n\n    /**\n     * 设置渲染节点的颜色叠加\n     * @param node 节点\n     * @param color 颜色\n     * @param isRecursion 是否递归子节点也设置 \n     */\n    setRenderableColor(node: Node, color: string | Color, isRecursion?: boolean) {\n        let renderable = node.getComponent(UIRenderer);\n        if (renderable && renderable.color) {\n            let temp: Color = null;\n            if (typeof (color) == \"string\") {\n                temp = new Color(color);\n            } else {\n                temp = color;\n            }\n            renderable.color = temp;\n        }\n\n        if (isRecursion) {\n            for (let ch of node.children) {\n                this.setRenderableColor(ch, color, isRecursion);\n            }\n        }\n    },\n\n    getRenderableColor(node: Node): Color {\n        let renderable = node.getComponent(UIRenderer);\n        if (renderable && renderable.color) {\n            return renderable.color.clone();\n        }\n        return null;\n    },\n\n    /**\n     * 根据十六进制颜色值，获得color对象\n     * @param hex \"#333333\"\n     */\n    getColorByHEX(hex: string): Color {\n        let color = new Color(hex);\n        // Color.fromHEX(color, hex);\n        return color;\n    },\n\n    /**\n     * 设置按钮可用状态\n     * @param node 按钮对象\n     * @param enabled 是否可点击\n     */\n    setButtonEnabled(node: Node, enabled: boolean) {\n        let btn = node.getComponent(Button);\n        if (btn) {\n            btn.enabled = enabled;\n        }\n    },\n\n    getQuatByAngleZ(angle: number) {\n        let quat = new Quat();\n        Quat.fromEuler(quat, 0, 0, angle);\n\n        return quat;\n    },\n\n    formatNum(num: number) {\n        if (num < 10000) {\n            return num;\n        }\n        if (num < 1000000) {\n            num = Math.floor(num / 1000 * 100);\n            return (num / 100).toFixed(2) + \"K\";\n        }\n\n        num = Math.floor(num / 1000000 * 100);\n        return (num / 100).toFixed(2) + \"M\";\n    },\n\n    formatNumString(num: number) {\n        if (num < 1000) {\n            return num;\n        }\n        if (num < 10000) {\n            num = Math.floor(num / 1000 * 10);\n            return (num / 10).toFixed(1) + \"K\";\n        }\n\n        if (num < 10000000) {\n            num = Math.floor(num / 10000 * 10);\n            return (num / 10).toFixed(1) + \"w\";\n        }\n\n        num = Math.floor(num / 1000000 * 100);\n        return (num / 100).toFixed(2) + \"M\";\n    },\n\n\n    setNodePositionX(node: Node, x: number) {\n        let pos = node.getPosition();\n        pos.x = x;\n        node.setPosition(pos);\n    },\n\n    setNodePositionY(node: Node, y: number) {\n        let pos = node.getPosition();\n        pos.y = y;\n        node.setPosition(pos);\n    },\n\n    /**\n     * 绘制一条曲线路径\n     * @param  {Object} node canvas渲染上下文\n     * @param  {Array<number>} start 起点\n     * @param  {Array<number>} end 终点\n     * @param  {number} curveness 曲度(0-1)\n     * @param  {number} percent 绘制百分比(0-100)\n     */\n    drawCurvePath(node, start, end, curveness, percent, delay = 0) {\n\n        var cp = [\n            (start[0] + end[0]) / 2 - (start[1] - end[1]) * curveness,\n            (start[1] + end[1]) / 2 - (end[0] - start[0]) * curveness\n        ];\n\n        // node.position = v3(start[0], start[1], 0);\n        let tweenArr = []\n        tweenArr.push(tween(node).delay(delay))\n        let curx = start[0]\n        let cury = start[1]\n        for (var t = 0; t <= percent / 100; t += 0.01) {\n\n            var x = this.quadraticBezier(start[0], cp[0], end[0], t);\n            var y = this.quadraticBezier(start[1], cp[1], end[1], t);\n            let time = (Math.abs(x - curx) + Math.abs(y - cury)) / 1500\n            tweenArr.push(tween(node).to(time, { position: v3(x, y, 0) }))\n\n            curx = x\n            cury = y\n        }\n        let time = (Math.abs(end[0] - curx) + Math.abs(end[1] - cury)) / 1500\n\n        tweenArr.push(tween(node).to(time, { position: v3(end[0], end[1], 0) }))\n\n        tween(node).sequence(...tweenArr).start();\n    },\n\n    quadraticBezier(p0, p1, p2, t) {\n        var k = 1 - t;\n        return k * k * p0 + 2 * (1 - t) * t * p1 + t * t * p2;    // 这个方程就是二次贝赛尔曲线方程\n    }\n}\n\n"]}