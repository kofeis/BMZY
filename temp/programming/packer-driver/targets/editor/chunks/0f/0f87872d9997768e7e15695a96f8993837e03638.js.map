{"version":3,"sources":["file:///D:/Tool/Project/WoChengYuTeNiu/assets/Script/Game/GameMode/PanelFindActor.ts"],"names":["_decorator","find","Label","Sprite","tween","UITransform","v3","Animation","UIOpacity","PanelTemplate","Tool_Other","Tool_UI","Tool_Event","PlatformApi","ccclass","property","PanelFindActor","FindActorLevel","LevelBg","Actors","Min_X","Max_X","Min_Y","Max_Y","ActorNumber","ScaleArr","onLoad","onEnable","IsInit","LoadPanel","GameStart","Resoure_Data","Music_Play","start","Promise","resolve","reject","node","BtnTip","BtnSetting","PanelVictory","active","BtnNext","getComponent","width","height","OnBtn","Game_Script","AnimSwitch","instance","On_Event_TOUCH_END","BtnTipCall","BtnNextCall","BtnSettingCall","Set_Btn_Event_Anim","ChooseWrongCall","PrefabActor","Load_Prefab","i","Actor","Set_Prefab_Node","getChildByName","ChooseCorrectCall","Score","ScoreTarget","GameVictory","GameInit","string","PosArr","Get_Random_Pos_Arr","children","length","position","scale","play","Sound_Play","showInterstitialAd","FindActorScore","IsHint","DataSet","UpdateScene","grayscale","set","fillRange","to","Event","PrefabError","Parent","Pos_Touch","Get_Touch_Position","NodeError","parallel","opacity","call","destroy","NodeTip","forEach","element","console","log","UpdatePanelSetting"],"mappings":"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;AACV,eAAKrB,YAAL,CAAkB4C,UAAlB,CAA6B,gBAA7B;AACA,eAAK7C,SAAL;AACH;AAED;;;AACAuB,QAAAA,cAAc,GAAG;AACb,eAAKtB,YAAL,CAAkB4C,UAAlB,CAA6B,gBAA7B;AACA,eAAK5B,WAAL,CAAiBqD,kBAAjB,CAAoC,IAApC;AACH,SA3M6C,CA8M9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AA7V8C,O","sourcesContent":["import { _decorator, Component, find, instantiate, Label, Node, Prefab, resources, Sprite, SpriteFrame, tween, UITransform, v2, v3, Vec2, Animation, log, UIOpacity } from 'cc';\r\nimport { PanelTemplate } from './PanelTemplate';\r\nimport { Tool_Other } from '../../Tool/Tool_Other';\r\nimport { Tool_UI } from '../../Tool/Tool_UI';\r\nimport { Tool_Event } from '../../Tool/Tool_Event';\r\nimport { PlatformApi } from '../../Other/SDK/PlatformApi';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PanelFindActor')\r\nexport class PanelFindActor extends PanelTemplate {\r\n\r\n    /**关卡等级 */\r\n    FindActorLevel: number = null;\r\n\r\n    /**关卡背景 */\r\n    LevelBg: Node = null;\r\n    /**演员节点 */\r\n    Actors: Node = null;\r\n\r\n    Min_X: number = null;\r\n    Max_X: number = null;\r\n    Min_Y: number = null;\r\n    Max_Y: number = null;\r\n\r\n\r\n    /**演员数量 */\r\n    ActorNumber: number = 10;\r\n\r\n    /**缩放配置 */\r\n    ScaleArr: number[] = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1];\r\n\r\n    async onLoad() {\r\n        super.onLoad();\r\n    }\r\n\r\n    async onEnable() {\r\n        if (!this.IsInit) {\r\n            await this.LoadPanel();\r\n        }\r\n        this.GameStart();\r\n        this.Resoure_Data.Music_Play(\"Audio/BGMGame\");\r\n    }\r\n\r\n    async start() {\r\n\r\n    }\r\n\r\n    /**加载面板 */\r\n    async LoadPanel(): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            /**绑定关键节点 */\r\n            this.LevelBg = find(\"Window/LevelBg\", this.node);\r\n            this.Actors = find(\"Window/Actors\", this.node);\r\n            this.BtnTip = find(\"Panel/PanelBtn/BtnTip\", this.node);\r\n            this.BtnSetting = find(\"Panel/PanelBtn/BtnSetting\", this.node);\r\n            this.PanelVictory = find(\"Panel/PanelVictory\", this.node);\r\n            this.PanelVictory.active = false;\r\n            this.BtnNext = find(\"BtnNext\", this.PanelVictory);\r\n\r\n            this.Max_X = this.Actors.getComponent(UITransform).width / 2;\r\n            this.Min_X = -this.Max_X;\r\n            this.Max_Y = this.Actors.getComponent(UITransform).height / 2;\r\n            this.Min_Y = -this.Max_Y;\r\n            /**注册按钮事件 */\r\n            await this.OnBtn(this.Game_Script.AnimSwitch);\r\n            this.IsInit = true;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    /**注册按钮 */\r\n    async OnBtn(AnimSwitch: boolean = false) {\r\n        /**设置按钮事件 */\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, this.BtnTipCall, this);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnNext, this.BtnNextCall, this);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting, this.BtnSettingCall, this);\r\n        /**设置按钮动画 */\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnNext, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting, AnimSwitch);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(find(\"Window/LevelBg\", this.node), this.ChooseWrongCall, this);\r\n\r\n        let PrefabActor = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelFindActor/Actor\");\r\n\r\n        for (let i = 0; i < this.ActorNumber; i++) {\r\n            let Actor = Tool_UI.instance.Set_Prefab_Node(PrefabActor, this.Actors, v3(0, 0, 0), \"\");\r\n            Tool_Event.instance.On_Event_TOUCH_END(Actor, () => {\r\n                if (Actor.getChildByName(\"Select\").active) {\r\n                    return;\r\n                }\r\n                this.ChooseCorrectCall(Actor);\r\n                this.Score++;\r\n                if (this.Score == this.ScoreTarget) {\r\n                    this.GameVictory();\r\n                }\r\n            })\r\n            Actor.getChildByName(\"Tip\").active = false;\r\n            Actor.getChildByName(\"Select\").active = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**游戏初始 */\r\n    GameInit() {\r\n        this.Score = 0;\r\n        this.ScoreTarget = 10;\r\n    }\r\n\r\n    /**游戏开始 */\r\n    async GameStart() {\r\n        this.GameInit();\r\n        this.PanelVictory.active = false;\r\n        this.node.getChildByName(\"Title\").getChildByName(\"Leves\").getComponent(Label).string = `找找小熊·${this.Game_Script.FindActorLevel + 1}关`;\r\n        let PosArr = Tool_Other.instance.Get_Random_Pos_Arr(this.Actors.children.length, this.Min_X, this.Max_X, this.Min_Y, this.Max_Y, 200);\r\n        for (let i = 0; i < this.Actors.children.length; i++) {\r\n            this.Actors.children[i].position = PosArr[i];\r\n            this.Actors.children[i].getChildByName(\"Sp\").scale = v3(this.ScaleArr[i], this.ScaleArr[i], 1);\r\n            this.Actors.children[i].getChildByName(\"Sp\").getComponent(Animation).play();\r\n            this.Actors.children[i].getChildByName(\"Tip\").active = false;\r\n            this.Actors.children[i].getChildByName(\"Select\").active = false;\r\n        }\r\n\r\n    }\r\n\r\n    /**游戏胜利 */\r\n    GameVictory() {\r\n        /**胜利音效 */\r\n        this.Resoure_Data.Sound_Play(\"Audio/Sound/Victory\");\r\n\r\n\r\n        PlatformApi.instance.showInterstitialAd();\r\n        this.Game_Script.FindActorLevel++;\r\n        this.Game_Script.FindActorScore += this.Game_Script.IsHint ? 1 : 2;\r\n        /**保存数据 */\r\n        this.Game_Script.DataSet();\r\n        this.Game_Script.UpdateScene();\r\n        find(\"WinBanner/Condition1/Correct\", this.PanelVictory).active = !this.Game_Script.IsHint\r\n        find(\"WinBanner/Condition1/Wrong\", this.PanelVictory).active = this.Game_Script.IsHint;\r\n        find(\"WinBanner/Stars/StarR\", this.PanelVictory).getComponent(Sprite).grayscale = this.Game_Script.IsHint;\r\n        find(\"Light\", this.PanelVictory).getComponent(Animation).play();\r\n        this.PanelVictory.active = true;\r\n\r\n    }\r\n\r\n\r\n    /**选择正确回调 */\r\n    ChooseCorrectCall(Actor: Node) {\r\n        Actor.getChildByName(\"Tip\").active = false;\r\n        Actor.getChildByName(\"Select\").active = true;\r\n        tween(Actor.getChildByName(\"Select\").getComponent(Sprite))\r\n            .set({ fillRange: 0 })\r\n            .to(0.2, { fillRange: 1 })\r\n            .start();\r\n    };\r\n\r\n    /**选择错误回调 */\r\n    async ChooseWrongCall(Event: any) {\r\n        /**错误 */\r\n        this.Resoure_Data.Sound_Play(\"Audio/Sound/Error\");\r\n        let PrefabError = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelFindActor/Error\");\r\n        let Parent = find(\"Window/LevelBg\", this.node);\r\n        let Pos_Touch = Tool_UI.instance.Get_Touch_Position(Event);\r\n        let NodeError = Tool_UI.instance.Set_Prefab_Node(PrefabError, Parent, Pos_Touch, \"\");\r\n        tween(NodeError)\r\n            .parallel(\r\n                tween().to(0.5, { scale: v3(1.2, 1.2, 1) }),\r\n                tween(NodeError.getComponent(UIOpacity)).to(0.5, { opacity: 0 })\r\n            )\r\n            .call(() => {\r\n                NodeError.destroy();\r\n            })\r\n            .start();\r\n    }\r\n\r\n    /**提示按钮回调 */\r\n    BtnTipCall() {\r\n        this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n        let NodeTip: Node = null;\r\n        this.Actors.children.forEach((element) => {\r\n            if (!element.getChildByName(\"Select\").active && !element.getChildByName(\"Tip\").active) {\r\n                NodeTip = element.getChildByName(\"Tip\");\r\n                return;\r\n            }\r\n        });\r\n        if (NodeTip == null) {\r\n            console.log(\"没有可以提示的了\");\r\n        } else {\r\n            NodeTip.active = true;\r\n            this.Game_Script.IsHint = true;\r\n        }\r\n    }\r\n\r\n    /**下一关按钮回调 */\r\n    BtnNextCall() {\r\n        this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n        this.GameStart();\r\n    }\r\n\r\n    /**设置按钮回调 */\r\n    BtnSettingCall() {\r\n        this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n        this.Game_Script.UpdatePanelSetting(true);\r\n    }\r\n\r\n\r\n    //     startGame() {\r\n    //         this.winNode.active = false;\r\n    //         this.defeatNode.active = false;\r\n    //         this.clearWolves();\r\n    //         this.setupBackground();\r\n    //         this.spawnWolves();\r\n    //         this.isGaming = true;\r\n    //         this.wolvesFound = 0;\r\n    //         this.remainingTime = 60;\r\n    //     }\r\n\r\n    //     clearWolves() {\r\n    //         this.wolvesContainer.removeAllChildren();\r\n    //     }\r\n\r\n    //     setupBackground() {\r\n    //         const bgIndex = (this.currentLevel - 1) % this.levelBackgrounds.length;\r\n    //         this.background.spriteFrame = new SpriteFrame(resources.get(this.levelBackgrounds[bgIndex]));\r\n    //     }\r\n\r\n    //     spawnWolves() {\r\n    //         const positions = this.generatePositions(10, -300, -410, 300, 410);\r\n\r\n    //         positions.forEach((pos, index) => {\r\n    //             const Actor = instantiate(this.ActorPrefab);\r\n    //             Actor.setPosition(pos);\r\n    //             this.wolvesContainer.addChild(Actor);\r\n\r\n    //             const scale = index < 10 - this.smallWolvesCount ? \r\n    //                 Math.random() * 0.9 + 0.1 : \r\n    //                 Math.random() * 0.05 + 0.025;\r\n\r\n    //             Actor.setScale(scale);\r\n\r\n    //             Actor.on(Node.EventType.TOUCH_END, () => this.onActorFound(Actor), this);\r\n    //         });\r\n    //     }\r\n\r\n    //     generatePositions(count: number, minX: number, minY: number, maxX: number, maxY: number): Vec2[] {\r\n    //         const positions: Vec2[] = [];\r\n    //         const positionSet = new Set<string>();\r\n\r\n    //         while (positions.length < count) {\r\n    //             const x = Math.random() * (maxX - minX) + minX;\r\n    //             const y = Math.random() * (maxY - minY) + minY;\r\n    //             const pos = v2(x, y);\r\n    //             const posKey = `${x},${y}`;\r\n\r\n    //             if (!positionSet.has(posKey) && !this.isOverlapping(pos, positions, 150)) {\r\n    //                 positions.push(pos);\r\n    //                 positionSet.add(posKey);\r\n    //             }\r\n    //         }\r\n\r\n    //         return positions;\r\n    //     }\r\n\r\n    //     isOverlapping(newPos: Vec2, existingPositions: Vec2[], minDistance: number): boolean {\r\n    //         return existingPositions.some(pos => {\r\n    //             return newPos.sub(pos).mag() < minDistance;\r\n    //         });\r\n    //     }\r\n\r\n    //     onActorFound(Actor: Node) {\r\n    //         if (!this.isGaming) return;\r\n\r\n    //         const ActorController = Actor.getComponent(\"ActorController\"); // 假设有ActorController组件\r\n    //         if (!ActorController.isFound) {\r\n    //             this.wolvesFound++;\r\n    //             ActorController.markAsFound();\r\n\r\n    //             if (this.wolvesFound >= 10) {\r\n    //                 this.winGame();\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     onBackgroundTap(event: Event.EventTouch) {\r\n    //         if (!this.isGaming) return;\r\n\r\n    //         const touchPos = this.background.node.convertToNodeSpaceAR(event.getLocation());\r\n    //         this.showErrorEffect(touchPos);\r\n    //         this.remainingTime -= 5;\r\n    //     }\r\n\r\n    //     showErrorEffect(position: Vec2) {\r\n    //         const effect = instantiate(this.errorEffectPrefab);\r\n    //         effect.setPosition(position);\r\n    //         this.background.node.addChild(effect);\r\n\r\n    //         tween(effect)\r\n    //             .to(0.2, { scale: 1.1 })\r\n    //             .to(0.2, { opacity: 0 })\r\n    //             .call(() => effect.destroy())\r\n    //             .start();\r\n    //     }\r\n\r\n    //     update(dt: number) {\r\n    //         if (!this.isGaming) return;\r\n\r\n    //         this.remainingTime -= dt;\r\n    //         this.timeLabel.string = Math.ceil(this.remainingTime).toString();\r\n\r\n    //         if (this.remainingTime <= 0) {\r\n    //             this.defeat();\r\n    //         }\r\n    //     }\r\n\r\n    //     winGame() {\r\n    //         this.isGaming = false;\r\n    //         this.winNode.active = true;\r\n    //         this.winNode.opacity = 0;\r\n\r\n    //         tween(this.winNode)\r\n    //             .to(0.2, { opacity: 255 })\r\n    //             .start();\r\n    //     }\r\n\r\n    //     defeat() {\r\n    //         this.isGaming = false;\r\n    //         this.defeatNode.active = true;\r\n    //         this.defeatNode.opacity = 0;\r\n\r\n    //         tween(this.defeatNode)\r\n    //             .to(0.2, { opacity: 255 })\r\n    //             .start();\r\n    //     }\r\n\r\n    //     restartGame() {\r\n    //         this.startGame();\r\n    //     }\r\n\r\n    //     nextLevel() {\r\n    //         this.currentLevel++;\r\n    //         this.smallWolvesCount = this.calculateSmallWolvesCount();\r\n    //         this.startGame();\r\n    //     }\r\n\r\n    //     calculateSmallWolvesCount(): number {\r\n    //         if (this.currentLevel < 3) return 2;\r\n    //         if (this.currentLevel < 6) return 4;\r\n    //         return 6;\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}