{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/ZhiShangGouBuDao/assets/Script/Game/GameMode/PanelMathMatch.ts"],"names":["_decorator","color","find","Label","tween","v3","Animation","Sprite","RichText","sys","sp","PanelTemplate","Tool_Event","Tool_Animation","Tool_UI","Tool_Other","Tool_Console","PlatformApi","GravityPlatform","ccclass","property","PanelMathMatch","Interactable","GameTimeAll","GameTimeIng","GameTime","JGTime","BtnBreak","PanelFH","GameData","KeyTarget","KeyExitState","KeyExitValue","KeyShadowIndex","LastKeyIndex","ValueTarget","ValuePos","ValueTargetC","KeyShadow","OnDistance","AnimCorrectNode","AnimWrongNode","TouchNode","TipLabel","TipNode","TipAnim","Obj_Start","num","Time","Time_Max","Step","onLoad","onEnable","IsInit","LoadPanel","GameStart","start","Timing","instance","Async_Function_Target","Anim_Frame_Play_Plus","BtnTip","getChildByName","getComponent","TimStop","Tween_Stop_Target","Promise","resolve","reject","BtnSetting","node","PanelTip","BtnTipClose","BtnTipGet","PanelVictory","PanelFail","BtnNext","BtnExit","OnBtn","Game_Script","AnimSwitch","Resoure_Data","Load_Prefab","BtnSettingCall","Sound_Play","Vibration_Switch_Get","vibrateShort","UpdatePanelSetting","BtnBreakCall","active","IsShare","Event_On","MathMatchLevel","MathMatchScore","Score","DataSet","Music_Resume","BtnReStartCall","shareAppMessage","window","wx","console","log","BtnNextCall","BlockInputEvents","StarsData","Pos","Angle","Stars","AddScoreAnim","I","Star","children","parent","to","position","x","y","angle","scale","Async_Wait","ScoreLabel2","TPos","Get_Target_Node_Local_Pos","ScoreLabel1","Animation_Node_Move_Time","call","by","string","Number","BtnTipCall","grayscale","PropNum","TipCall","BtnTipCloseCall","BtnTipGetCall","TimerStop","showVideoAd","TimeHF","P","N","Set_Prefab_Node","easing","add","a","b","Animation_Node_Move_Bezier_Time","UpdateProp","destroy","ValueNumber","i","length","push","undefined","NullGIndex","Get_Random_Int","j","Result","Obj","Get_Min_Distance_Node","worldPosition","Distance","Num","Index","warn","Set_Color_Label","indexOf","IsExit","Arr_Check_Index","Key","Value","Temp","ColorOff","ColorOn","Set_SpriteFrame","Load_SpriteFrame","Node_Index_Set","OriginalNode","OriginalLastKeyIndex","CurrentLastKeyIndex","TipStart","Arr_Increase","KeyNodeIndexT","KeyNodeValueT","Set_Color_Sprite","UpdateUIValue","On_Event_TOUCH_END","ComponentLabel","Timer","play","GameFailed","Set_Btn_Event_Anim","clone","InitData","UpdateScore","F","Json","Load_Json","JsonData","Ran","Copy_Deep","IsHint","IsContinue","InitInterface","Hand","Anim_Frame_Play","destroyAllChildren","Str","Shadow","ComponentLabel1","Off_Event_TOUCH_All","Check_Shadow","On_Event_TOUCH_START","On_Event_TOUCH_Drag","Event","Pos_Touch_Start","Pos_Touch_End","MoveNode","OnMessage","PosStart","PosEnd","AnimA","TipReset","OriginalNodePos","LastKeyIndexTemp","KeyNodeIndexL","KeyNodeValueL","FindAllEquationIndices_","Arr_Delete","error","Wait","Len","Set_Pos_Word_Same","IsAudio","sort","valueA","parseFloat","valueB","platform","Platform","WECHAT_GAME","WECHAT_MINI_PROGRAM","onLevelStart","GameVictory","onLevelSuccess","T","StarsAnim","CD","Anim_Skeleton_Play","Skeleton","GameResult","BreakNode","SetNode","Spine","SpineNode1","SpineNode2","repeatForever","delay","Rows","Cols","Count","CorrectIndex","WrongIndex","ResultAll","CheckResult","GetResult","expression","processed","op","left","right","result","Error","splice","toString","ErrorChar","ValueResult","isNaN","Indexs","Chars","Sort_Reverse","KeyResult","IsEqual","Math","floor","KeyP","ValueP","AnimReset","AnimV","AnimF","ICall","IsPlay","name","Speed","Console_Style","Font_Color","Font_Size","Font_Weight","Font_Style","Font_Family","Text_Decoration","Text_Shadow","Background_Color","Padding","Margin","Border","Border_Radius"],"mappings":"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","sourcesContent":["import { _decorator, color, Component, find, Label, Layout, log, math, Node, Prefab, Tween, tween, v3, Vec3, Animation, Sprite, RichText, sys, sp, easing } from 'cc';\nimport { PanelTemplate } from './PanelTemplate';\nimport { Tool_Event } from '../../Tool/Tool_Event';\nimport { Tool_Animation } from '../../Tool/Tool_Animation';\nimport { Tool_UI } from '../../Tool/Tool_UI';\nimport { Tool_Other } from '../../Tool/Tool_Other';\nimport { Tool_Console } from '../../Tool/Tool_Console';\nimport { PlatformApi } from '../../Other/SDK/PlatformApi';\nimport { GravityPlatform } from '../../Other/GeSdk/GravityPlatform';\nconst { ccclass, property } = _decorator;\n\n\n\n/**数据接口 */\nexport interface DataMathMatch {\n    Level: number, Key: string[], Value: number[], Result: number[], Count: number;\n}\n\n@ccclass('PanelMathMatch')\nexport class PanelMathMatch extends PanelTemplate {\n\n    Interactable: boolean = true;\n\n\n    //总时间\n    GameTimeAll: number = 180;\n    //计时时间\n    GameTimeIng: number = 0\n    //剩余时间\n    GameTime: number = 0;\n\n    JGTime: number = 30;\n\n\n    /**返回按钮 */\n    BtnBreak: Node = null;\n    PanelFH: Node = null;\n    GameData: DataMathMatch = null;\n\n    /**有效目标 */\n    KeyTarget: Node[] = [];\n    /**存在状态 */\n    KeyExitState: boolean[] = [];\n\n    /**存在节点 */\n    KeyExitValue: Node[] = [];\n\n\n    /**阴影索引 */\n    KeyShadowIndex: number = -1;\n\n\n    //Value节点上一次在Key节点的位置\n    LastKeyIndex: number[] = [];\n    /**有效目标 */\n    ValueTarget: Node[] = [];\n    ValuePos: Vec3[] = [];\n    /**Value有效目标副本 */\n    ValueTargetC: Node[] = [];\n\n    KeyShadow: Prefab = null;\n    /**有效距离 */\n    OnDistance: number = 50;\n\n\n    /**正确动画节点 */\n    AnimCorrectNode: Node[] = [];\n    /**错误动画节点 */\n    AnimWrongNode: Node[] = [];\n    TouchNode: Node = null;\n\n    TipLabel: Node = null;\n    TipNode: Node = null;\n\n\n    TipAnim: Node[] = [];\n\n    Obj_Start = { num: 0 }\n    Time: number = 0;\n    Time_Max: number = 15;//15\n\n\n    Step = -1;\n\n\n\n    async onLoad() {\n        super.onLoad();\n    }\n\n    async onEnable() {\n        if (!this.IsInit) {\n            await this.LoadPanel();\n        }\n        this.GameStart();\n        //    this.Resoure_Data.Music_Play(\"Audio/BgmGame\");\n    }\n\n    start() {\n\n    }\n\n    Timing() {\n        this.Obj_Start = { num: 0 };\n        Tool_Animation.instance.Async_Function_Target(this.Time_Max, this.Obj_Start, () => {\n            //console.log(\"无操作播放\");\n            Tool_Animation.instance.Anim_Frame_Play_Plus(this.BtnTip.getChildByName(\"Icon\").getComponent(Animation), null, null, null, null, null, 3, 0, () => {\n                this.Timing();\n            });\n        })\n    }\n    TimStop() {\n        //console.log(\"重置无操作播放计时\");\n        Tool_Animation.instance.Tween_Stop_Target(this.Obj_Start);\n        this.Timing();\n    }\n\n\n\n    /**加载面板 */\n    async LoadPanel(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            /**绑定关键节点 */\n            this.BtnSetting = find(\"BtnSetting\", this.node);\n\n            this.PanelTip = find(\"PanelTip\", this.node);\n            this.BtnTip = find(\"BtnTip\", this.node);\n            this.BtnTipClose = find(\"BtnTipClose\", this.PanelTip);\n            this.BtnTipGet = find(\"BtnTipGet\", this.PanelTip);\n\n            this.PanelFH = find(\"PanelFH\", this.node);\n\n\n            this.PanelVictory = find(\"PanelVictory\", this.node);\n            this.PanelFail = find(\"PanelFail\", this.node);\n            this.BtnNext = find(\"BtnNext\", this.PanelVictory);\n\n            // this.BtnGet = find(\"BtnGet\", this.PanelTip);\n            this.BtnExit = find(\"BtnExit\", this.node);\n            /**注册按钮事件 */\n            await this.OnBtn(this.Game_Script.AnimSwitch);\n            this.IsInit = true;\n            resolve();\n            this.KeyShadow = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelMathMatch/KeyShadow\");\n        });\n    }\n\n    /**注册按钮 */\n    async OnBtn(AnimSwitch: boolean = false) {\n\n        /**设置按钮 */\n        const BtnSettingCall = () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.Game_Script.UpdatePanelSetting(true);\n        }\n\n        /**关闭按钮 */\n        const BtnBreakCall = () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.node.active = false;\n        }\n\n\n        let IsShare: boolean = false;\n        Tool_Event.instance.Event_On(\"WXOnShow\", () => {\n            if (!IsShare) {\n                return;\n            }\n            IsShare = false;\n            this.Game_Script.MathMatchLevel--;\n            this.Game_Script.MathMatchScore -= this.Score;\n            this.Game_Script.DataSet();\n            this.GameStart();\n            this.Resoure_Data.Music_Resume();\n        }, this);\n\n        /**重新游戏 */\n        const BtnReStartCall = async () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            PlatformApi.instance.shareAppMessage(() => { });\n            if (window.wx) {\n                IsShare = true;\n                console.log(\"重新游戏wx\");\n            } else {\n                console.log(\"重新游戏\");\n                //  await Tool_Animation.instance.Async_Wait(2);\n                console.log(this.Game_Script.MathMatchLevel);\n\n                this.Game_Script.MathMatchLevel--;\n                console.log(this.Game_Script.MathMatchLevel);\n                this.Game_Script.MathMatchScore -= this.Score;\n                this.Game_Script.DataSet();\n                this.GameStart();\n            }\n\n        }\n        /**下一关按钮 */\n        const BtnNextCall = async () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.Game_Script.BlockInputEvents.active = true;\n            let StarsData: { Pos: Vec3[], Angle: number[] } = {\n                Pos: [\n                    v3(-175, 150, 0), v3(0, 180, 0), v3(175, 150, 0),\n                ], Angle: [\n                    50, 25, 0\n                ]\n            };\n            let Stars = find(\"WinBanner/Stars\", this.PanelVictory)\n            const AddScoreAnim = async () => {\n                for (let I = 0; I < this.Score; I++) {\n                    let Star = Stars.children[I].children[0].parent;\n                    tween(Star)\n                        .to(0.25, { position: v3(StarsData.Pos[1].x, StarsData.Pos[1].y - 50, 0) })\n                        .start();\n                    tween(Star)\n                        .to(0.25, { angle: StarsData.Angle[1] })\n                        .start();\n                    tween(Star)\n                        .to(0.25, { scale: v3(0.5, 0.5, 1) })\n                        .start();\n                }\n                await Tool_Animation.instance.Async_Wait(0.3);\n                for (let I = 0; I < this.Score; I++) {\n                    let Star = Stars.children[I].children[0].parent;\n                    console.log(this.Game_Script.ScoreLabel2.node.parent.getChildByName(\"Icon\"));\n\n                    let TPos = Tool_UI.instance.Get_Target_Node_Local_Pos(Star, this.Game_Script.ScoreLabel1.node.parent.getChildByName(\"Icon\"));\n\n                    Tool_Animation.instance.Animation_Node_Move_Time(Star, TPos, 0.25);\n                    tween(Star)\n                        .to(0.25, { scale: v3(0.25, 0.25, 1) })\n                        .call(() => {\n                            tween(this.Game_Script.ScoreLabel1.node.parent.getChildByName(\"Icon\"))\n                                .by(0.1, { scale: v3(-0.2, -0.2, 0) })\n                                .by(0.1, { scale: v3(0.2, 0.2, 0) })\n                                .start();\n                            this.Game_Script.ScoreLabel1.string = Number(this.Game_Script.ScoreLabel1.string) + 1 + \"\";\n                            this.Resoure_Data.Sound_Play(\"Audio/AddScore\");\n                        })\n                        .start();\n                    await Tool_Animation.instance.Async_Wait(0.15);\n                }\n            }\n            await AddScoreAnim();\n            await Tool_Animation.instance.Async_Wait(0.6);\n            this.GameStart();\n        }\n\n        const BtnTipCall = async () => {\n            if (this.BtnTip.getComponent(Sprite).grayscale) {//this.ValueTarget.length \n                return;\n            }\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            if (this.Game_Script.PropNum > 0) {\n                TipCall();\n            } else {\n                this.PanelTip.active = true;\n            }\n\n        }\n        const BtnTipCloseCall = async () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.PanelTip.active = false;\n        }\n        const BtnTipGetCall = async () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.Game_Script.TimerStop();\n            PlatformApi.instance.showVideoAd(async () => {\n                this.Resoure_Data.Music_Resume()\n                this.TimeHF();\n\n                this.PanelTip.active = false;\n                let P = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelMathMatch/Icon\");\n                let N = Tool_UI.instance.Set_Prefab_Node(P, this.node, v3(0, 0, 0));\n                // N.scale = v3(0, 0, 1);\n\n                this.Game_Script.PropNum += 2;\n                this.Game_Script.DataSet();\n                this.Resoure_Data.Sound_Play(\"Audio/PropA\");\n                //console.log(\"播放道具抖动音效\");\n\n                tween(N)\n                    .to(0.1, { angle: -10 }, { easing: \"backInOut\" })\n                    .to(0.1, { angle: 10 }, { easing: \"backInOut\" })\n                    .to(0.1, { angle: -10 }, { easing: \"backInOut\" })\n                    .to(0.1, { angle: 10 }, { easing: \"backInOut\" })\n                    .to(0.1, { angle: -10 }, { easing: \"backInOut\" })\n                    .call(() => {\n                        tween(N)\n                            .to(0.5, { scale: v3(0.5, 0.5, 1) })\n                            .start()\n                        let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(N, this.BtnTip).add(v3(10, 40, 0));\n                        let a = v3(Pos.x + 250, 1000, 0)\n                        let b = v3(N.position.x, -200, 0)\n                        Tool_Animation.instance.Animation_Node_Move_Bezier_Time(N, Pos, 1, a, b, 0.5, () => {\n                            this.Resoure_Data.Sound_Play(\"Audio/PropGet\");\n                            //console.log(\"播放道具获取音效\");\n                            this.UpdateProp();\n                            N.destroy();\n                        })\n\n                    })\n                    .start()\n            }, () => {\n                this.Resoure_Data.Music_Resume()\n                this.TimeHF();\n            })\n        }\n\n\n        /**提示 */\n        const TipCall = async () => {\n\n            // this.Game_Script.OnMessage(\"没有更多关卡了\");\n            //console.error(this.ValueTarget);\n\n            if (this.TipLabel != null || this.TipNode != null) {\n                return;\n            }\n\n            //剩下的数字\n            let ValueNumber: number[] = [];\n            for (let i = 0; i < this.ValueTarget.length; i++) {\n                ValueNumber.push(Number(this.ValueTarget[i].getChildByName(\"Label\").getComponent(Label).string));\n            }\n            if (ValueNumber == undefined) {\n                // Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 0, 0, 255));\n                // this.TipLabel.getComponent(Label).string = \"\";\n                // this.TipLabel.scale = v3(1, 1, 1);\n                // Tool_Animation.instance.Tween_Stop_Target(this.TipLabel);\n                this.TipLabel = null;\n                this.TipNode = null;\n                return;\n            }\n\n            this.Game_Script.PropNum--;\n            this.Game_Script.DataSet();\n            this.UpdateProp();\n\n            //console.log(\"剩下的数字\", ValueNumber);\n\n            let NullGIndex = Tool_Other.instance.Get_Random_Int(0, ValueNumber.length - 1);\n\n            //索引\n            //console.log(\"V索引\", NullGIndex);\n            //答案\n            //console.log(\"答案\", ValueNumber[NullGIndex]);\n\n            for (let j = 0; j < this.GameData.Result.length; j++) {\n                //如何是正确答案\n                if (this.GameData.Result[j] == ValueNumber[NullGIndex]) {\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.KeyTarget[j].worldPosition, this.ValueTargetC);\n                    if (Obj.Distance < this.OnDistance) {\n                        let Num = Number(this.ValueTargetC[Obj.Index].getChildByName(\"Label\").getComponent(Label).string);\n                        console.warn(\"当前答案\", Num);\n                        if (Num == ValueNumber[NullGIndex]) {\n                            continue;\n                        } else {\n                            this.TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\n                            this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\n                            Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\n                            //console.error(\"K索引\", j);\n                            //console.error(Obj);\n                            this.TipNode = this.ValueTarget[NullGIndex];\n                            let TouchNode = this.ValueTargetC[Obj.Index];\n                            Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\n                            let i = this.ValueTargetC.indexOf(TouchNode);\n                            console.log(\"i------\", i);\n\n                            let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\n                            let Key = find(\"Key\", this.node);\n                            let Value = find(\"Value\", this.node);\n                            let Temp = find(\"Temp\", this.node);\n                            let ColorOff: math.Color = color(255, 255, 155, 255);\n                            let ColorOn: math.Color = color(155, 255, 155, 255);\n                            Tool_Animation.instance.Tween_Stop_Target(TouchNode);\n                            TouchNode.scale = v3(1, 1, 1);\n                            TouchNode.angle = 0;\n                            Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                            Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\n                            Tool_UI.instance.Node_Index_Set(TouchNode, -1);\n\n                            // 1. 获取原节点（当前占用目标位置的节点）\n                            const OriginalNode = this.KeyExitValue[Obj.Index];\n                            // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\n                            //原上次索引\n                            let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\n                            //现上次索引\n                            let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\n                            // //console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\n                            // //console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\n\n                            this.TipStart();\n                            // //console.log(\"是否存在\", IsExit);\n                            if (!IsExit) {\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\n                                //题目节点的索引\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\n                                let KeyNodeValueT: string = \"N\";\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                                console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\n                                // //console.log(this.GameData);\n                                if (this.LastKeyIndex[i] != null) {\n                                    this.KeyExitState[this.LastKeyIndex[i]] = false;\n                                    this.KeyExitValue[this.LastKeyIndex[i]] = null;\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                                }\n                                // 重置当前目标位置的状态（如果之前已被占用）\n                                if (this.KeyExitState[Obj.Index]) {\n                                    this.KeyExitState[Obj.Index] = false;\n                                    //console.error(this.KeyExitState[Obj.Index], \"1---------------------\", Obj.Index);\n                                    this.KeyExitValue[Obj.Index] = null;\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                                }\n\n                                this.LastKeyIndex[i] = null;\n                                console.log(this.LastKeyIndex, i);\n\n                            }\n                            this.UpdateUIValue();\n                            return;\n                        }\n\n                    } else {\n                        this.TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\n                        this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\n                        Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\n                        // //console.error(\"K索引\", j);\n                        // //console.error(Obj);\n                        this.TipNode = this.ValueTarget[NullGIndex];\n                        this.TipStart();\n                        return\n                    }\n\n                }\n\n            }\n\n        }\n\n        /**设置按钮事件 */\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting, BtnSettingCall);\n\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, BtnTipCall);\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipClose, BtnTipCloseCall);\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipGet, BtnTipGetCall);\n\n\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnNext, BtnNextCall);\n\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnExit, BtnBreakCall);\n\n\n\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnNext\"), BtnNextCall);\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnReStart\"), BtnReStartCall);\n\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnNext\"), BtnNextCall);\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnBreak\"), BtnBreakCall);\n\n        //复活\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"Btn\"), () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            PlatformApi.instance.showVideoAd(() => {\n                this.Resoure_Data.Music_Resume()\n                this.PanelFH.active = false;\n                this.GameTime = this.GameTimeAll;\n                let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\n                this.Game_Script.Timer(ComponentLabel, this.GameTime, () => {\n                    this.PanelFH.active = true;\n                    this.Resoure_Data.Sound_Play(\"Audio/FH\");\n                    this.Game_Script.TimerStop();\n                    find(\"JG\", this.node).active = false;\n                }, \"S\", () => {\n                    this.GameTimeIng++;\n                    this.GameTime--;\n                    if (this.GameTime <= this.JGTime && !find(\"JG\", this.node).active) {\n                        find(\"JG\", this.node).active = true;\n                        find(\"JG\", this.node).getComponent(Animation).play();\n                    }\n                });\n            }, () => {\n                this.Resoure_Data.Music_Resume()\n            })\n\n\n        });\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"BtnClose\"), () => {\n            this.Resoure_Data.Sound_Play(\"Audio/BtnClick\");\n            if (this.Resoure_Data.Vibration_Switch_Get()) {\n                PlatformApi.instance.vibrateShort();\n            }\n            this.PanelFH.active = false;\n            this.GameFailed();\n        });\n\n        /**设置按钮动画 */\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting, AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipClose, AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipGet, AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnNext, AnimSwitch);\n\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnExit, AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnNext\"), AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\n\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFH.getChildByName(\"Btn\"), AnimSwitch);\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\n\n\n        let Key = find(\"Key\", this.node);\n        let Value = find(\"Value\", this.node);\n        for (let i = 0; i < Value.children.length; i++) {\n            this.ValuePos.push(Value.children[i].position.clone());\n        }\n    }\n\n\n    TimeHF() {\n        let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\n        this.Game_Script.Timer(ComponentLabel, this.GameTime, () => {\n            this.PanelFH.active = true;\n            this.Resoure_Data.Sound_Play(\"Audio/FH\");\n            this.Game_Script.TimerStop();\n            find(\"JG\", this.node).active = false;\n        }, \"S\", () => {\n            this.GameTimeIng++;\n            this.GameTime--;\n            if (this.GameTime <= this.JGTime && !find(\"JG\", this.node).active) {\n                find(\"JG\", this.node).active = true;\n                find(\"JG\", this.node).getComponent(Animation).play();\n            }\n        });\n    }\n\n    /**初始化数据 */\n    async InitData() {\n\n        this.Game_Script.UpdateScore();\n\n        //console.log(\"初始化数据\");\n        /**注册按钮事件 */\n        // await this.OnBtn(this.Game_Script.AnimSwitch);\n        this.KeyTarget = [];\n        this.KeyExitState = [];\n        this.KeyExitValue = [];\n\n        this.ValueTarget = [];\n        this.ValueTargetC = [];\n        this.LastKeyIndex = [];\n\n        this.AnimCorrectNode = [];\n        this.AnimWrongNode = [];\n\n        this.Interactable = true;\n\n        this.TouchNode = null;\n        this.TipLabel = null;\n        this.TipNode = null;\n        this.GameTimeIng = 0;\n\n        // this.Game_Script.MathMatchLevel = 60;\n\n        let F = {\n            \"Level\": 6,\n            \"Key\": [\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\n            ],\n            \"Value\": [],\n            \"Result\": [],\n            \"Count\": 0\n        }\n\n\n        const Json = await this.Resoure_Data.Load_Json(\"Json/mathmatch\");\n        const JsonData = Json[\"Data\"];\n        //console.log(JsonData);\n\n        this.GameData = null;\n\n        if (this.Game_Script.MathMatchLevel < 0) {\n            this.Game_Script.MathMatchLevel = 0;\n            //console.log(\"关卡为负\");\n            this.Game_Script.DataSet();\n        }\n\n        if (this.Game_Script.MathMatchLevel >= JsonData.length) {\n            // this.Game_Script.OnMessage(\"没有更多关卡了\");\n            let Ran = Tool_Other.instance.Get_Random_Int(20, 35);\n            if (Ran < JsonData.length - 1) {\n                this.GameData = this.Resoure_Data.Copy_Deep(JsonData[Ran]);\n            } else {\n                this.GameData = this.Resoure_Data.Copy_Deep(JsonData[JsonData.length - 1]);\n            }\n        } else {\n            this.GameData = this.Resoure_Data.Copy_Deep(JsonData[this.Game_Script.MathMatchLevel]);\n        }\n        //console.log(this.GameData);\n\n        this.Game_Script.IsHint = false;\n        this.Game_Script.IsContinue = false;\n        this.GameTime = this.GameTimeAll;\n        let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\n        this.Game_Script.Timer(ComponentLabel, this.GameTimeAll, () => {\n            //console.log(\"失败\");\n            this.PanelFH.active = true;\n            this.Resoure_Data.Sound_Play(\"Audio/FH\");\n            this.Game_Script.TimerStop();\n            find(\"JG\", this.node).active = false;\n        }, \"S\", () => {\n            this.GameTimeIng++;\n            this.GameTime--;\n            if (this.GameTime <= this.JGTime && !find(\"JG\", this.node).active) {\n                find(\"JG\", this.node).active = true;\n                find(\"JG\", this.node).getComponent(Animation).play();\n            }\n        });\n\n    }\n\n    /**初始化界面 */\n    async InitInterface() {\n        this.PanelVictory.active = false;\n        this.PanelFail.active = false;\n        this.PanelTip.active = false;\n        this.PanelFH.active = false;\n\n        let Hand = find(\"Hand\", this.node);\n        Hand.active = false;\n        find(\"ND\", this.node).active = false;\n        find(\"JG\", this.node).active = false;\n\n\n        if (this.Game_Script.MathMatchLevel == 1) {\n            find(\"ND\", this.node).active = true;\n\n            Tool_Animation.instance.Anim_Frame_Play(find(\"ND\", this.node).getComponent(Animation), null, null, () => {\n                find(\"ND\", this.node).active = false;\n            })\n        }\n\n        this.UpdateProp();\n        this.node.getChildByName(\"Title\").getChildByName(\"Leves\").getComponent(Label).string = `第${this.Game_Script.MathMatchLevel + 1}关`;\n        find(\"Temp\", this.node).destroyAllChildren();\n        let Key = find(\"Key\", this.node);\n        let Value = find(\"Value\", this.node);\n\n        for (let i = 0; i < Key.children.length; i++) {\n            Key.children[i].active = false;\n            Tool_UI.instance.Set_Color_Sprite(Key.children[i].getChildByName(\"Bg\").getChildByName(\"Sp\"), color(255, 255, 155, 255));\n        }\n\n        for (let i = 0; i < Value.children.length; i++) {\n            Value.children[i].active = false;\n            Value.children[i].scale = v3(1, 1, 1);\n            Value.children[i].angle = 0;\n\n            Tool_UI.instance.Set_SpriteFrame(Value.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n            Tool_UI.instance.Set_Color_Label(Value.children[i].getChildByName(\"Label\"), color(0, 155, 0, 255));\n\n        }\n\n        if (this.GameData == null) {\n            //console.log(\"配置错误\");\n            return;\n        }\n\n        for (let i = 0; i < Key.children.length; i++) {\n            Key.children[i].active = true;\n            switch (this.GameData.Key[i]) {\n                case \"U\":\n                    Key.children[i].active = false;\n                    break;\n                case \"N\":\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = \"\";\n                    this.KeyTarget.push(Key.children[i]);\n                    this.KeyExitState.push(false);\n                    this.KeyExitValue.push(null);\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\n                    break;\n                default:\n                    let Str: string = \"\";\n                    switch (this.GameData.Key[i]) {\n                        // case \"/\":\n                        //     Str = \"÷\";\n                        // break;\n                        case \"X\":\n                            Str = \"x\";\n                            break;\n                        default:\n                            Str = this.GameData.Key[i];\n                            break;\n                    }\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = Str\n\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\n                    break;\n            }\n        }\n\n\n\n        let Temp = find(\"Temp\", this.node);\n        let ColorOff: math.Color = color(255, 255, 155, 255);\n        let ColorOn: math.Color = color(155, 255, 155, 255);\n\n\n        for (let i = 0; i < Value.children.length; i++) {\n            const Shadow = Value.children[i].getChildByName(\"Shadow\");\n            const ComponentLabel1 = Value.children[i].getChildByName(\"Label\").getComponent(Label);\n            Shadow.active = false;\n            // Value.children[i].active = i < this.GameData.Value.length ? true : false;\n            if (i < this.GameData.Value.length ? true : false) {\n                this.ValueTarget.push(Value.children[i]);\n                this.ValueTargetC.push(Value.children[i]);\n                this.LastKeyIndex.push(null);\n                Value.children[i].position = this.ValuePos[i];\n                ComponentLabel1.string = this.GameData.Value[i] + \"\";\n\n                Tool_Event.instance.Off_Event_TOUCH_All(Value.children[i]);\n\n                const TouchNode = Value.children[i];\n                const Shadow = TouchNode.getChildByName(\"Shadow\");\n                const ComponentLabel = TouchNode.getChildByName(\"Label\").getComponent(Label);\n                const Check_Shadow = () => {\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\n                    if (Obj.Distance <= this.OnDistance) {\n                        if (this.KeyShadowIndex == Obj.Index) {\n                            return;\n                        }\n                        Temp.destroyAllChildren();\n                        this.KeyShadowIndex = Obj.Index;\n                        Tool_UI.instance.Set_Prefab_Node(this.KeyShadow, Temp, this.KeyTarget[Obj.Index], \"\")\n                    } else {\n                        Temp.destroyAllChildren();\n                        this.KeyShadowIndex = -1;\n                    }\n                }\n\n                Tool_Event.instance.On_Event_TOUCH_START(TouchNode, () => {\n                    //console.log(this.Game_Script.MathMatchLevel, this.Step, TouchNode.getChildByName(\"Label\").getComponent(Label).string);\n\n                    if (this.Game_Script.MathMatchLevel == 0) {\n                        if (this.Step == 0) {\n                            if (TouchNode.getChildByName(\"Label\").getComponent(Label).string != \"1\") {\n                                this.Interactable = false;\n                                return;\n                            } else {\n                                this.Interactable = true;\n                            }\n                        }\n                        if (this.Step == 1) {\n                            if (TouchNode.getChildByName(\"Label\").getComponent(Label).string != this.KeyExitValue[2].getChildByName(\"Label\").getComponent(Label).string) {\n                                this.Interactable = false;\n                                return;\n                            } else {\n                                this.Interactable = true;\n                            }\n                        }\n                    }\n                })\n\n                Tool_Event.instance.On_Event_TOUCH_Drag(TouchNode, () => this.Interactable, async (Event, Pos_Touch_Start) => {\n                    /**触摸开始回调 */\n\n                    if (this.GameData == null) {\n                        this.Interactable = false;\n                        //console.log(\"配置错误\");\n                        return;\n                    }\n                    this.TouchNode = TouchNode;\n                    //console.log(this.LastKeyIndex, i, this.ValueTargetC.indexOf(TouchNode));\n                    this.Resoure_Data.Sound_Play(\"Audio/NumClick\");\n                    if (this.Resoure_Data.Vibration_Switch_Get()) {\n                        PlatformApi.instance.vibrateShort();\n                    }\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\n                    Tool_Animation.instance.Tween_Stop_Target(this.KeyTarget[Obj.Index]);\n                    this.KeyTarget[Obj.Index].scale = v3(1, 1, 1);\n                    this.KeyTarget[Obj.Index].angle = 0;\n                    Tool_Animation.instance.Tween_Stop_Target(TouchNode);\n                    TouchNode.scale = v3(1, 1, 1);\n                    TouchNode.angle = 0;\n                    Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                    Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\n\n                    Tool_UI.instance.Node_Index_Set(TouchNode, -1);\n                    Shadow.active = true;\n                    Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos_Touch_Start.clone().add(v3(0, 25, 0)), 0.02, null, \"smooth\");\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\n                    if (!IsExit) {\n                        tween(TouchNode)\n                            .to(0.25, { scale: v3(1, 1, 1) }, { easing: \"backOut\" })\n                            .start();\n                    }\n                    Check_Shadow();\n\n                    //console.error(this.TouchNode == this.TipNode);\n\n                    if (this.TouchNode == this.TipNode) {\n                        for (let i = 0; i < this.TipAnim.length; i++) {\n                            this.TipAnim[i].destroy();\n                        }\n                        this.TipAnim = [];\n                    }\n\n                }, (Event, Pos_Touch_Start) => {\n                    /**触摸移动回调 */\n                    Check_Shadow();\n                }, async (Event, Pos_Touch_Start, Pos_Touch_End) => {\n                    /**触摸结束回调 */\n\n                    Shadow.active = false;\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\n\n                    // 1. 获取原节点（当前占用目标位置的节点）\n                    const OriginalNode = this.KeyExitValue[Obj.Index];\n                    // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\n                    //原上次索引\n                    let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\n                    //现上次索引\n                    let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\n                    //console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\n                    //console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\n                    if (this.Game_Script.MathMatchLevel == 0) {\n                        this.Step++;\n                        if (this.Step == 1) {\n                            Tool_Animation.instance.Tween_Stop_Target(Hand);\n                            let MoveNode = this.KeyExitValue[2];\n                            this.Game_Script.OnMessage(\"可以把数字拖动放在另一个格子\");\n                            let PosStart = Tool_UI.instance.Get_Target_Node_Local_Pos(Hand, MoveNode).add(v3(30, -50));\n                            let PosEnd = Tool_UI.instance.Get_Target_Node_Local_Pos(Hand, this.KeyTarget[3]).add(v3(30, -50));\n                            const AnimA = () => {\n                                Hand.position = PosStart;\n                                Tool_Animation.instance.Animation_Node_Move_Time(Hand, PosEnd, 1, () => {\n                                    if (this.Step == 1) {\n                                        Tool_Animation.instance.Animation_Node_Move_Time(Hand, PosStart, 0.5, () => {\n                                            if (this.Step == 1) {\n                                                AnimA();\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n                            AnimA();\n                        } else {\n                            Hand.active = false;\n                        }\n                    }\n                    if (Obj.Distance <= this.OnDistance) {\n\n                        this.TipReset();\n                        //目标位置被占用\n                        //console.error(this.KeyExitState[Obj.Index], this.LastKeyIndex[i], Obj.Index);\n                        if (this.KeyExitState[Obj.Index] && this.LastKeyIndex[i] != Obj.Index) {//\n                            if (this.LastKeyIndex[i] != null) {\n                                this.KeyTarget[Obj.Index].active = false;\n                                this.KeyTarget[this.LastKeyIndex[i]].active = false;\n                                // 将原节点移动到 LastKeyIndex 的位置\n                                const OriginalNodePos = Tool_UI.instance.Get_Target_Node_Local_Pos(OriginalNode, this.KeyTarget[this.LastKeyIndex[i]]);\n                                // this.Interactable = false;\n                                Tool_Animation.instance.Animation_Node_Move_Time(OriginalNode, OriginalNodePos, 0.25, async () => {\n                                    // this.Interactable = true;\n                                    this.KeyTarget[Obj.Index].active = true;\n                                    this.KeyTarget[this.LastKeyIndex[i]].active = true;\n                                    //交换索引\n                                    //console.log(this.LastKeyIndex, 1);\n                                    //console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\n                                    //console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\n                                    const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\n                                    this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\n                                    this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\n                                    //交换节点的索引\n                                    let KeyNodeIndexL = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[OriginalLastKeyIndex]]);\n                                    let KeyNodeValueL = OriginalNode.getChildByName(\"Label\").getComponent(Label).string;\n                                    //题目节点的索引\n                                    let KeyNodeIndexT = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                                    let KeyNodeValueT = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                                    this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\n                                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                                    // console.log(\"交换节点的索引\", KeyNodeIndexL, \"交换节点的数值\", KeyNodeValueL);\n                                    // console.log(\"触摸节点的索引\", KeyNodeIndexT, \"触摸节点的数值\", KeyNodeValueT);\n                                    // console.log(this.GameData);\n                                    this.FindAllEquationIndices_(this.GameData.Key);\n                                    Tool_Animation.instance.Tween_Stop_Target(OriginalNode);\n                                    OriginalNode.scale = v3(0.9, 0.9, 1);\n                                    OriginalNode.angle = 0;\n                                    Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                                    Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\n                                    // //console.error(OriginalNode, TouchNode);\n                                    await Tool_Animation.instance.Async_Wait(0.05);\n                                    this.TouchNode = OriginalNode;\n                                    this.FindAllEquationIndices_(this.GameData.Key);\n\n                                }, \"smooth\");\n                                // 更新原节点的状态为占用 LastKeyIndex\n                                this.KeyExitState[this.LastKeyIndex[i]] = true;\n                                this.KeyExitValue[this.LastKeyIndex[i]] = OriginalNode;\n                            } else {\n                                // 如果 LastKeyIndex 为 null，将原节点放回 ValueTarget 池\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, OriginalNode);\n\n                                Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                                Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\n\n                                //交换索引\n                                //console.log(this.LastKeyIndex, 2);\n                                //console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\n                                //console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\n\n\n                                const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\n                                this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\n                                this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\n\n                                //题目节点的索引\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                                let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                                console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\n                                //console.log(this.GameData);\n\n\n                                this.FindAllEquationIndices_(this.GameData.Key, 0.2);\n                            }\n                            // 3. 将新节点(TouchNode)放置到目标位置（Obj.Index）\n                            this.KeyExitState[Obj.Index] = true;\n                            this.KeyExitValue[Obj.Index] = TouchNode;\n                            // 4. 更新颜色和临时状态\n                            Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\n                            if (this.LastKeyIndex[i] != null) {\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\n                            }\n                            //放置成功 移除节点\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\n                            Temp.destroyAllChildren();\n                            this.KeyShadowIndex = -1;\n                            for (let i = 0; i < this.TipAnim.length; i++) {\n                                this.TipAnim[i].destroy();\n                            }\n                            // 6. 更新 UI\n                            this.UpdateUIValue();\n                            let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\n                            await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0.2, null, \"smooth\");\n                            tween(TouchNode)\n                                .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\n                                .start();\n                            return;\n                        }\n\n                        if (IsExit) {\n                            //放置成功 移除节点\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\n                            //题目节点的索引\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\n                            //console.log(this.GameData);\n                            this.UpdateUIValue();\n\n                        } else {\n                            let KeyNodeIndexL: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\n                            if (KeyNodeIndexL == -1) {\n                                //console.log(CurrentLastKeyIndex);//有值\n                                //console.log(this.LastKeyIndex[CurrentLastKeyIndex]);\n                                //console.log(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\n                            }\n\n                            let KeyNodeValueL: string = \"N\";\n                            this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\n\n                            //题目节点的索引\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n\n                            console.log(\"赋值的索引\", KeyNodeIndexL, \"赋值的数据\", KeyNodeValueL);\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\n                            //console.log(this.GameData);\n                        }\n                        this.KeyExitState[Obj.Index] = true;\n                        this.KeyExitValue[Obj.Index] = TouchNode;\n                        //console.error(this.LastKeyIndex[i], this.LastKeyIndex[i], this.KeyExitState[this.LastKeyIndex[i]]);\n\n                        if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\n                            console.error(this.KeyExitState[this.LastKeyIndex[i]], \"2---------------------\", Obj.Index);\n                            this.KeyExitState[this.LastKeyIndex[i]] = false;\n                            this.KeyExitValue[this.LastKeyIndex[i]] = null;\n\n                        }\n                        //改变Key背景颜色\n                        this.LastKeyIndex[i] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                        this.LastKeyIndex[i] = Obj.Index;\n\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] = Obj.Index;\n\n                        //console.error(Obj.Index, this.LastKeyIndex[i], i, Value.children.indexOf(TouchNode));\n\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\n                        Temp.destroyAllChildren();\n                        for (let i = 0; i < this.TipAnim.length; i++) {\n                            this.TipAnim[i].destroy();\n                        }\n                        this.KeyShadowIndex = -1;\n                        let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\n                        this.UpdateUIValue();\n                        await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0, null, \"smooth\");\n                        tween(TouchNode)\n                            .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\n                            .start();\n                    } else {\n                        if (!IsExit) {\n                            Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\n\n                            //题目节点的索引\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\n                            let KeyNodeValueT: string = \"N\";\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\n                            //console.log(this.GameData);\n\n                            if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\n                                this.KeyExitState[this.LastKeyIndex[i]] = false;\n                                this.KeyExitValue[this.LastKeyIndex[i]] = null;\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                            }\n                            // 重置当前目标位置的状态（如果之前已被占用）\n                            if (this.KeyExitState[Obj.Index]) {\n                                this.KeyExitState[Obj.Index] = false;\n                                //console.error(this.KeyExitState[Obj.Index], \"3---------------------\", Obj.Index);\n                                this.KeyExitValue[Obj.Index] = null;\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                            }\n\n\n                            this.LastKeyIndex[i] = null;\n                        }\n                        // await Tool_Animation.instance.Async_Wait(0.05);\n                        this.UpdateUIValue();\n                        await Tool_Animation.instance.Async_Wait(0.25);\n                        this.TipStart();\n\n                    }\n                    //console.log(\"this.KeyExitState\", this.KeyExitState);\n                    //console.log(\"this.KeyExitValue\", this.KeyExitValue);\n                    //console.log(\"this.ValueTarget\", this.ValueTarget);\n\n                    this.FindAllEquationIndices_(this.GameData.Key);\n\n\n                });\n            }\n        }\n\n\n        // this.UpdateUIValue(0);\n\n\n        // await Tool_Animation.instance.Async_Wait(0.1);\n\n\n\n        for (let i = 0; i < this.ValueTarget.length; i++) {\n            this.ValueTarget[i].active = false;\n        }\n        for (let i = 0; i < this.ValueTarget.length; i++) {\n            this.ValueTarget[i].active = true;\n            this.ValueTarget[i].position = this.ValueTarget[i].position.clone().add(v3(1000, 0, 0));\n        }\n\n        let Time = 0;\n        let Wait = 0;\n\n        let Len = this.GameData.Value.length;\n\n        Time = 1.2 / Len;\n        Wait = Time / 2\n\n        if (this.Game_Script.MathMatchLevel == 0) {\n            this.Game_Script.BlockInputEvents.active = true;\n            this.Step = 0;\n            let N = this.ValueTarget[2];\n            N.active = true;\n            N.scale = v3(0.9, 0.9, 1)\n            Tool_UI.instance.Set_Pos_Word_Same(N, this.KeyTarget[2]);\n            let TouchNode = this.ValueTarget[2]\n            let i = this.ValueTargetC.indexOf(TouchNode);\n\n            // Shadow.active = false;\n            let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\n            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\n\n            // 1. 获取原节点（当前占用目标位置的节点）\n            const OriginalNode = this.KeyExitValue[Obj.Index];\n            // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\n            //原上次索引\n            let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\n            //现上次索引\n            let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\n\n            if (Obj.Distance <= this.OnDistance) {\n                this.TipReset();\n                //目标位置被占用\n\n                if (IsExit) {\n                    //放置成功 移除节点\n                    Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\n                    //题目节点的索引\n                    let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                    let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n                } else {\n                    let KeyNodeIndexL: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\n                    if (KeyNodeIndexL == -1) {\n\n                    }\n\n                    let KeyNodeValueL: string = \"N\";\n                    this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\n\n                    //题目节点的索引\n                    let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\n                    let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\n                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\n\n                }\n                this.KeyExitState[Obj.Index] = true;\n                this.KeyExitValue[Obj.Index] = TouchNode;\n                if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\n                    this.KeyExitState[this.LastKeyIndex[i]] = false;\n                    this.KeyExitValue[this.LastKeyIndex[i]] = null;\n                }\n                //改变Key背景颜色\n                this.LastKeyIndex[i] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                this.LastKeyIndex[i] = Obj.Index;\n\n                // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\n                // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] = Obj.Index;\n\n                //console.error(Obj.Index, this.LastKeyIndex[i], i, Value.children.indexOf(TouchNode));\n\n                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\n                Temp.destroyAllChildren();\n                for (let i = 0; i < this.TipAnim.length; i++) {\n                    this.TipAnim[i].destroy();\n                }\n                this.KeyShadowIndex = -1;\n                let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\n                await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0, null, \"smooth\");\n                tween(TouchNode)\n                    .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\n                    .start();\n            }\n\n            this.UpdateUIValue(Time, Wait, true);\n            await Tool_Animation.instance.Async_Wait(1);\n            this.Game_Script.BlockInputEvents.active = false;\n            Hand.active = true;\n            Tool_Animation.instance.Tween_Stop_Target(Hand);\n            let MoveNode = this.ValueTarget[0];\n            this.Game_Script.OnMessage(\"将需要的数字拖动到空格上\");\n            let PosStart = Tool_UI.instance.Get_Target_Node_Local_Pos(Hand, MoveNode).add(v3(30, -50));\n            let PosEnd = Tool_UI.instance.Get_Target_Node_Local_Pos(Hand, this.KeyTarget[0]).add(v3(30, -50));\n            const AnimA = () => {\n                Hand.position = PosStart;\n                Tool_Animation.instance.Animation_Node_Move_Time(Hand, PosEnd, 1, () => {\n                    if (MoveNode == this.ValueTarget[0]) {\n                        Tool_Animation.instance.Animation_Node_Move_Time(Hand, PosStart, 0.5, () => {\n                            if (MoveNode == this.ValueTarget[0]) {\n                                AnimA();\n                            }\n                        });\n                    }\n                });\n            }\n            AnimA();\n        } else {\n            this.UpdateUIValue(Time, Wait, true);//1.2\n        }\n\n\n    }\n\n    /**刷新排序 */\n    async UpdateUIValue(Time: number = 0.2, Wait: number = 0, IsAudio: boolean = false) {\n\n        if (IsAudio) {\n            this.Resoure_Data.Sound_Play(\"Audio/BoxStart\");\n        }\n        //console.log(\"刷新排序\");\n\n        // this.Interactable = false;\n        this.ValueTarget.sort((a, b) => {\n            const valueA = parseFloat(a.getChildByName(\"Label\").getComponent(Label).string);\n            const valueB = parseFloat(b.getChildByName(\"Label\").getComponent(Label).string);\n            return valueA - valueB;\n        });\n        for (let i = 0; i < this.ValueTarget.length; i++) {\n            this.ValueTarget[i].scale = v3(1, 1, 1);\n            this.ValueTarget[i].angle = 0;\n            Tool_Animation.instance.Animation_Node_Move_Time(this.ValueTarget[i], this.ValuePos[i], Time, null, \"smooth\");\n            // if (Wait != 0) {\n            await Tool_Animation.instance.Async_Wait(Wait);\n            // }\n        }\n        if (IsAudio) {\n            this.Resoure_Data.Sound_Play(\"Audio/BoxEnd\");\n        }\n\n        if (this.Game_Script.MathMatchLevel <= 0 && this.Step <= 1) {\n            this.BtnTip.getComponent(Sprite).grayscale = true;\n        } else {\n            this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\n        }\n\n        await Tool_Animation.instance.Async_Wait(Time);\n        // this.Interactable = true;\n    }\n\n    async GameStart() {\n        this.BtnTip.getComponent(Sprite).grayscale = true;\n\n        this.Game_Script.BlockInputEvents.active = false;\n\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\n            try {\n                // window.ge.onLevelStart({ \"$user_level\": this.Game_Script.MathMatchLevel });\n                GravityPlatform.instance.onLevelStart({ \"$user_level\": this.Game_Script.MathMatchLevel });\n            } catch (error) {\n                //console.log(error);\n\n            }\n        }\n\n        this.TipReset();\n        this.Timing();\n        await this.InitData();\n        await this.InitInterface();\n\n\n    }\n\n    async GameVictory() {\n        if (this.PanelVictory.active) {\n            return;\n        }\n        this.Resoure_Data.Sound_Play(\"Audio/Victory\");\n        this.PanelVictory.active = true;\n        this.Interactable = false;\n\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\n            try {\n                GravityPlatform.instance.onLevelSuccess({ \"$user_level\": this.Game_Script.MathMatchLevel });\n                // window.ge.onLevelSuccess({ \"$user_level\": this.Game_Script.MathMatchLevel });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n\n        this.Game_Script.TimerStop();\n        find(\"JG\", this.node).active = false;\n\n\n        let T = this.GameTimeIng / this.GameTimeAll;\n        this.Score = 0;\n        if (T < 0.45) {\n            this.Score = 3;\n            this.Resoure_Data.Sound_Play(\"Audio/Start3\");\n        } else if (T < 0.7) {\n            this.Score = 2;\n            this.Resoure_Data.Sound_Play(\"Audio/Start2\");\n        } else if (T < 1) {\n            this.Score = 1;\n            this.Resoure_Data.Sound_Play(\"Audio/Start1\");\n        } else {\n            this.Score = 0;\n        }\n\n\n        this.Game_Script.MathMatchLevel++;\n        this.Game_Script.MathMatchScore += this.Score;\n        /**保存数据 */\n        this.Game_Script.DataSet();\n        // this.Game_Script.UpdateScene();\n\n        if (this.Score == 0) {\n            this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Label\").getComponent(RichText).string = `<color=#17a6fc>${this.GameTimeAll}/</color><color=#FF0000>${this.GameTimeIng}</color>`;\n        } else {\n            this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Label\").getComponent(RichText).string = `<color=#17a6fc>${this.GameTimeAll}/</color><color=#00FF00>${this.GameTimeIng}</color>`;\n        }\n\n\n        this.Game_Script.BlockInputEvents.active = true;\n        let StarsData: { Pos: Vec3[], Angle: number[] } = {\n            Pos: [\n                v3(-175, 150, 0), v3(0, 180, 0), v3(175, 150, 0),\n            ], Angle: [\n                50, 25, 0\n            ]\n        };\n        let Stars = find(\"WinBanner/Stars\", this.PanelVictory)\n        for (let I = 0; I < Stars.children.length; I++) {\n            let Star = Stars.children[I].children[0];\n            Star.active = false;\n            Star.scale = v3(1, 1, 1);\n            Star.parent.position = StarsData.Pos[I]\n            Star.parent.angle = StarsData.Angle[I]\n            Star.parent.scale = v3(1, 1, 1);\n        }\n        const StarsAnim = async () => {\n            for (let I = 0; I < this.Score; I++) {\n                let Star = Stars.children[I].children[0];\n                Star.scale = v3(4, 4, 1);\n                Star.active = true;\n                tween(Star)\n                    .to(0.05, { scale: v3(5, 5, 1) })\n                    .to(0.4, { scale: v3(1, 1, 1) })\n                    .start();\n                await Tool_Animation.instance.Async_Wait(0.4);\n            }\n            this.Game_Script.BlockInputEvents.active = false;\n        }\n        StarsAnim();\n\n        const CD = async () => {\n            Tool_Animation.instance.Anim_Skeleton_Play(find(\"C1\", this.PanelVictory).getComponent(sp.Skeleton), \"default\", 0, \"caidai\", false);\n            await Tool_Animation.instance.Async_Wait(0.1);\n            Tool_Animation.instance.Anim_Skeleton_Play(find(\"C2\", this.PanelVictory).getComponent(sp.Skeleton), \"default\", 0, \"caidai\", false, () => {\n                //console.log(\"结束\");\n\n            });\n        }\n        CD();\n\n        if (this.Resoure_Data.Vibration_Switch_Get()) {\n            for (let i = 0; i < 5; i++) {\n                PlatformApi.instance.vibrateShort();\n                await Tool_Animation.instance.Async_Wait(0.2);\n            }\n        }\n\n    }\n\n    async GameFailed() {\n\n        if (sys.platform === sys.Platform.WECHAT_GAME || sys.platform === sys.Platform.WECHAT_MINI_PROGRAM) {\n            try {\n                // window.ge.onLevelFail({ \"$user_level\": this.Game_Script.MathMatchLevel });\n                GravityPlatform.instance.onLevelStart({ \"$user_level\": this.Game_Script.MathMatchLevel });\n            } catch (error) {\n                //console.log(error);\n\n            }\n        }\n        this.Resoure_Data.Sound_Play(\"Audio/Failed\");\n        this.PanelFail.active = true;\n        this.Interactable = false;\n        this.PanelFail.getChildByName(\"WinBanner\").getChildByName(\"Label\").getComponent(RichText).string = `<color=#17a6fc>${this.GameTimeAll}/</color><color=#FF0000>${this.GameTimeIng}</color>`;\n\n\n\n    }\n\n    GameResult() {\n\n\n    }\n\n\n    BreakNode(SetNode: Node) {\n\n    }\n\n    TipReset() {\n        if (this.TipLabel != null) {\n            Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 0, 0, 255));\n            this.TipLabel.getComponent(Label).string = \"\";\n            this.TipLabel.scale = v3(1, 1, 1);\n            Tool_Animation.instance.Tween_Stop_Target(this.TipLabel);\n            this.TipLabel = null;\n        }\n        if (this.TipNode != null) {\n            Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\n            this.TipNode = null;\n        }\n\n        for (let i = 0; i < this.TipAnim.length; i++) {\n            this.TipAnim[i].destroy();\n        }\n        this.TipAnim = [];\n\n    }\n\n    async TipStart() {\n\n\n        //console.log(this.TipAnim);\n        if (this.TipAnim.length != 0) {\n            return;\n        }\n\n\n        if (this.TipNode != null && this.TipLabel != null) {\n            // Tool_Animation.instance.Animation_Heartbeat(this.TipLabel);\n\n            for (let i = 0; i < this.TipAnim.length; i++) {\n                this.TipAnim[i].destroy();\n            }\n\n            let Spine = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelMathMatch/Spine\");\n            let SpineNode1 = Tool_UI.instance.Set_Prefab_Node(Spine, this.node.getChildByName(\"TempV\"), this.ValuePos[this.ValueTarget.indexOf(this.TipNode)].clone().add(v3(0, -250, 0)));\n            Tool_Animation.instance.Anim_Skeleton_Play(SpineNode1.getComponent(sp.Skeleton), \"default\", 0, \"animation2\", true)\n\n            let SpineNode2 = Tool_UI.instance.Set_Prefab_Node(Spine, this.node.getChildByName(\"TempV\"), this.TipLabel);\n            Tool_Animation.instance.Anim_Skeleton_Play(SpineNode2.getComponent(sp.Skeleton), \"default\", 0, \"animation1\", true)\n\n            this.TipAnim.push(SpineNode1)\n            this.TipAnim.push(SpineNode2)\n\n\n\n            Tool_Animation.instance.Tween_Stop_Target(this.TipLabel);\n            this.TipLabel.angle = 0;\n            // Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\n            // this.TipNode.angle = 0;\n\n            tween(this.TipLabel)\n                .repeatForever(\n                    tween()\n                        .to(0.2, { angle: 5 })\n                        .to(0.2, { angle: -10 })\n                        .to(0.2, { angle: 10 })\n                        .to(0.2, { angle: -10 })\n                        .to(0.2, { angle: 5 })\n                        .to(0.2, { angle: 0 })\n                        .delay(1)\n                )\n                .start()\n\n\n        }\n    }\n\n    async FindAllEquationIndices_(Key: string[], Time: number = 0, Rows: number = 11, Cols: number = 11): Promise<{ CorrectIndex: number[][]; WrongIndex: number[][]; }> {\n\n        this.Interactable = false;\n\n        this.TimStop();\n\n        if (this.Game_Script.MathMatchLevel <= 0 && this.Step <= 1) {\n            this.BtnTip.getComponent(Sprite).grayscale = true;\n        } else {\n            this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\n        }\n\n        // this.Interactable = false;\n        await Tool_Animation.instance.Async_Wait(Time);\n        let Count = 0;\n        const Result = {\n            CorrectIndex: [] as number[][],\n            WrongIndex: [] as number[][]\n        };\n        const ResultAll = {\n            CorrectIndex: [] as number[],\n            WrongIndex: [] as number[]\n        };\n        /**检查题目右边是否存在结果 */\n        function CheckResult(Index: number): number {\n            // return Key[Index] == \"N\" || Key[Index] == \"U\" ? null : Number(Key[Index]);\n            return Key[Index] == \"N\" ? null : Number(Key[Index]);\n        }\n        /**计算题目左边结果 */\n        function GetResult(expression: string[]): number {\n            // 先处理乘除法\n            const processed = [...expression];\n            if (processed.indexOf(\"N\") != -1) {\n                return null;\n            }\n            // 第一轮处理：乘除法\n            for (let i = 1; i < processed.length; i += 2) {\n                const op = processed[i];\n                if (op === \"X\" || op === \"x\" || op === \"/\") {\n                    const left = parseFloat(processed[i - 1]);\n                    const right = parseFloat(processed[i + 1]);\n                    let result: number;\n                    if (op === \"/\") {\n                        if (right === 0) throw new Error(\"Division by zero\");\n                        result = left / right;\n                    } else {\n                        result = left * right;\n                    }\n                    // 替换这三个元素为计算结果\n                    processed.splice(i - 1, 3, result.toString());\n                    i -= 2; // 因为数组长度减少了，调整索引\n                }\n            }\n            // 第二轮处理：加减法\n            let result = parseFloat(processed[0]);\n            for (let i = 1; i < processed.length; i += 2) {\n                const op = processed[i];\n                const num = parseFloat(processed[i + 1]);\n                if (op === '+') {\n                    result += num;\n                } else if (op === '-') {\n                    result -= num;\n                } else {\n                    throw new Error(`Unknown operator: ${op}`);\n                }\n            }\n            return result;\n        }\n        let ErrorChar = [\"=\", \"U\"];\n        for (let i = 0; i < Key.length; i++) {\n            if (Key[i] == \"=\") {\n                // //console.log(\"--------------------------------------\");\n                // //console.log(\"--------------------------------------\");\n                // //console.log(\"--------------------------------------\");\n                let ValueResult: number | null;\n                //水平方向\n                // //console.log(\"水平方向\");\n\n                if (i % Rows != Rows - 1) {\n                    ValueResult = CheckResult(i + 1);//*\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\n                        let Index = i;\n                        let Indexs: number[] = [];\n                        let Chars: string[] = [];\n                        while (Index % Rows != 0) {//*\n                            Index -= 1;//*\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\n                                Indexs.push(Index);\n                            } else {\n                                break;\n                            }\n                        }\n                        Tool_Other.instance.Sort_Reverse(Indexs);\n                        for (let j = 0; j < Indexs.length; j++) {\n                            Chars.push(Key[Indexs[j]]);\n                        }\n                        Indexs.push(i);\n                        Indexs.push(i + 1);//*\n                        let KeyResult: number = GetResult(Chars);\n                        let IsEqual: boolean = KeyResult == ValueResult;\n                        // //console.log(Indexs);\n                        // //console.log(Chars);\n                        // //console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\n                        // //console.log(\"是否相等\", IsEqual);\n                        if (IsEqual) {\n                            Result.CorrectIndex.push(Indexs);\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\n                            Count++\n                        } else {\n                            if (KeyResult != null) {\n                                Result.WrongIndex.push(Indexs);\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\n                            }\n                        }\n                    }\n                }\n\n                if (Math.floor(i / Rows) != Cols - 1) {\n                    //垂直方向\n                    // //console.log(\"垂直方向\");\n                    ValueResult = CheckResult(i + Rows);\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\n                        let Index = i;\n                        let Indexs: number[] = [];\n                        let Chars: string[] = [];\n                        while (Math.floor(Index / Rows) != 0) {\n                            Index -= Rows;//*\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\n                                Indexs.push(Index);\n                            } else {\n                                break;\n                            }\n                        }\n                        Tool_Other.instance.Sort_Reverse(Indexs);\n                        for (let j = 0; j < Indexs.length; j++) {\n                            Chars.push(Key[Indexs[j]]);\n                        }\n                        Indexs.push(i);\n                        Indexs.push(i + Rows);\n                        let KeyResult: number = GetResult(Chars);\n                        let IsEqual: boolean = KeyResult == ValueResult;\n                        // //console.log(Indexs);\n                        // //console.log(Chars);\n                        // //console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\n                        // //console.log(\"是否相等\", IsEqual);\n                        if (IsEqual) {\n                            Result.CorrectIndex.push(Indexs);\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\n                            Count++\n                        } else {\n                            if (KeyResult != null) {\n                                Result.WrongIndex.push(Indexs);\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\n                            }\n                        }\n                    }\n                }\n\n                if (i % Rows != Rows - 1 && Math.floor(i / Rows) != Cols - 1) {\n                    //主对角线\n                    ValueResult = CheckResult(i + (Rows + 1));\n                    // //console.log(\"主对角线\");\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\n                        let Index = i;\n                        let Indexs: number[] = [];\n                        let Chars: string[] = [];\n                        while (Index % Rows != 0) {\n                            Index -= (Rows + 1);\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\n                                Indexs.push(Index);\n                            } else {\n                                break;\n                            }\n                        }\n                        Tool_Other.instance.Sort_Reverse(Indexs);\n                        for (let j = 0; j < Indexs.length; j++) {\n                            Chars.push(Key[Indexs[j]]);\n                        }\n                        Indexs.push(i);\n                        Indexs.push(i + (Rows + 1));\n                        let KeyResult: number = GetResult(Chars);\n                        let IsEqual: boolean = KeyResult == ValueResult;\n                        //console.log(Indexs);\n                        //console.log(Chars);\n                        //console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\n                        //console.log(\"是否相等\", IsEqual);\n                        if (IsEqual) {\n                            Result.CorrectIndex.push(Indexs);\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\n                            Count++\n                        } else {\n                            if (KeyResult != null) {\n                                Result.WrongIndex.push(Indexs);\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\n                            }\n                        }\n                    }\n                }\n\n\n\n                if (i % Rows != 0 && Math.floor(i / Rows) != Cols - 1) {\n                    //副对角线\n                    // //console.log(\"副对角线\");\n                    ValueResult = CheckResult(i + (Rows - 1));\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\n                        let Index = i;\n                        let Indexs: number[] = [];\n                        let Chars: string[] = [];\n                        while (Index % Rows != (Rows - 1)) {\n                            Index -= (Rows - 1);\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\n                                Indexs.push(Index);\n                            } else {\n                                break;\n                            }\n                        }\n                        Tool_Other.instance.Sort_Reverse(Indexs);\n                        for (let j = 0; j < Indexs.length; j++) {\n                            Chars.push(Key[Indexs[j]]);\n                        }\n                        Indexs.push(i);\n                        Indexs.push(i + (Rows - 1));\n                        let KeyResult: number = GetResult(Chars);\n                        let IsEqual: boolean = KeyResult == ValueResult;\n                        //console.log(Indexs);\n                        //console.log(Chars);\n                        //console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\n                        //console.log(\"是否相等\", IsEqual);\n                        if (IsEqual) {\n                            Result.CorrectIndex.push(Indexs);\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\n                            Count++\n                        } else {\n                            if (KeyResult != null) {\n                                Result.WrongIndex.push(Indexs);\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\n                            }\n                        }\n                    }\n\n                }\n            }\n        }\n\n\n\n\n        let KeyP = find(\"Key\", this.node);\n        let ValueP = find(\"Value\", this.node);\n\n        let AnimReset = async () => {\n            for (let i = 0; i < KeyP.children.length; i++) {\n                if (ResultAll.CorrectIndex.indexOf(i) == -1) {\n                    switch (this.GameData.Key[i]) {\n                        case \"N\":\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\n                            break;\n                        default:\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\n                            break;\n                    }\n                } else {\n                    Tool_UI.instance.Arr_Delete(this.AnimCorrectNode, KeyP.children[i]);\n                }\n\n                if (ResultAll.WrongIndex.indexOf(i) == -1) {\n                    switch (this.GameData.Key[i]) {\n                        case \"N\":\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\n                            break;\n                        default:\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\n                            break;\n                    }\n                } else {\n                    Tool_UI.instance.Arr_Delete(this.AnimWrongNode, KeyP.children[i]);\n                }\n\n            }\n\n            AnimV();\n            AnimF();\n\n        }\n\n        let AnimV = async () => {\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\n                for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\n                    if (this.AnimCorrectNode.indexOf(KeyP.children[Result.CorrectIndex[i][j]]) == -1) {\n                        this.AnimCorrectNode.push(KeyP.children[Result.CorrectIndex[i][j]]);\n                        Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.CorrectIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                    }\n                }\n            }\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\n                let ICall = async () => {\n                    //上次触摸的节点在题目中\n                    let IsPlay = false;\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\n                    if (Obj.Distance <= this.OnDistance) {\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.CorrectIndex[i][j]].name) {\n                                IsPlay = true;\n                                //console.log(\"AnimV\");\n                                break;\n                            }\n                        }\n                    }\n                    if (IsPlay) {\n                        this.Resoure_Data.Sound_Play(\"Audio/Correct\");\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\n                            //题目的Value占位节点\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.CorrectIndex[i][j]].worldPosition, this.ValueTargetC);\n                            if (Obj.Distance <= this.OnDistance) {\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(0, 155, 0, 255));\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\n                                // this.ValueTargetC[Obj.Index].scale = v3(0.9, 0.9, 1);\n                                tween(this.ValueTargetC[Obj.Index])\n                                    .to(0.1, { scale: v3(0.6, 0.6, 1) })\n                                    .to(0.1, { scale: v3(0.9, 0.9, 1) })\n                                    .start();\n                            }\n                            //题目的Key占位节点\n                            // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.CorrectIndex[i][j]]);\n                            // KeyP.children[Result.CorrectIndex[i][j]].scale = v3(1, 1, 1);\n                            tween(KeyP.children[Result.CorrectIndex[i][j]])\n                                .to(0.1, { scale: v3(0.6, 0.6, 1) })\n                                .to(0.1, { scale: v3(1, 1, 1) })\n                                .start();\n                            await Tool_Animation.instance.Async_Wait(0.05 * Speed);\n                        }\n                    }\n                }\n                ICall();\n            }\n        }\n\n        let AnimF = async () => {\n            // for (let i = 0; i < Result.WrongIndex.length; i++) {\n            //     for (let j = 0; j < Result.WrongIndex[i].length; j++) {\n            //         //console.error(this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]));\n\n            //         if (this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]) == -1) {\n            //             this.AnimWrongNode.push(KeyP.children[Result.WrongIndex[i][j]]);\n            //             Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\n            //         }\n            //     }\n            // }\n            for (let i = 0; i < Result.WrongIndex.length; i++) {\n                let ICall = async () => {\n                    //上次触摸的节点在题目中\n                    let IsPlay = false;\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\n\n                    if (Obj.Distance <= this.OnDistance) {\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.WrongIndex[i][j]].name) {\n                                IsPlay = true;\n                                //console.log(\"AnimF\");\n                                break;\n                            }\n                        }\n                    }\n                    if (IsPlay) {\n                        this.Resoure_Data.Sound_Play(\"Audio/Wrong\");\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\n                            //题目的Value占位节点\n                            if (Number.isNaN(Number(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Label\").getComponent(Label).string))) {\n                                continue;\n                            }\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.WrongIndex[i][j]].worldPosition, this.ValueTargetC);\n                            if (Obj.Distance <= this.OnDistance) {\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(155, 0, 0, 255));\n\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\n                                // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.WrongIndex[i][j]]);\n\n                                tween(this.ValueTargetC[Obj.Index])\n                                    .to(0.1, { angle: 10 })\n                                    .to(0.1, { angle: -20 })\n                                    .to(0.1, { angle: 20 })\n                                    .to(0.1, { angle: -20 })\n                                    .to(0.1, { angle: 10 })\n                                    .to(0.1, { angle: 0 })\n                                    .start();\n                                tween(KeyP.children[Result.WrongIndex[i][j]])\n                                    .to(0.1, { angle: 10 })\n                                    .to(0.1, { angle: -20 })\n                                    .to(0.1, { angle: 20 })\n                                    .to(0.1, { angle: -20 })\n                                    .to(0.1, { angle: 10 })\n                                    .to(0.1, { angle: 0 })\n                                    .start();\n                                // tween(this.ValueTargetC[Obj.Index])\n                                //     .by(0.1, { scale: v3(-0.4, -0.4, 1) })\n                                //     .by(0.1, { scale: v3(0.4, 0.4, 1) })\n                                //     .start();\n                            }\n                            //题目的Key占位节点\n                            // tween(KeyP.children[Result.WrongIndex[i][j]])\n                            //     .by(0.1 * Speed, { scale: v3(-0.4, - 0.4, 1) })\n                            //     .by(0.1 * Speed, { scale: v3(0.4, 0.4, 1) })\n                            //     .start();\n                            // await Tool_Animation.instance.Async_Wait(0.05 * Speed);\n                        }\n                    }\n                }\n                ICall();\n            }\n        }\n\n\n        var Speed = 1;\n        await AnimReset();\n        await Tool_Animation.instance.Async_Wait(0.2);\n        this.Interactable = true;\n\n        if (Count == this.GameData.Count) {\n            //console.log(\"胜利\");\n            await Tool_Animation.instance.Async_Wait(0.5);\n            this.GameVictory();\n        }\n        Tool_Console.instance.Console_Style(Count, {\n            Font_Color: 'rgba(255, 99, 71, 1)',\n            Font_Size: '20px',\n            Font_Weight: 'lighter',\n            Font_Style: 'normal',\n            Font_Family: \"'fantasy',cursive\",\n            Text_Decoration: 'none',\n            Text_Shadow: \"2px 2px 2px rgba(0, 0, 0, 0.5)\",\n            Background_Color: 'rgba(155, 155, 155, 0.2)',\n            Padding: \"10px 20px\",\n            Margin: \"10px auto\",\n            Border: \"1px dashed rgba(0, 255, 0, 1)\",\n            Border_Radius: \"5px\",\n        })\n        console.log(this.KeyExitState);\n\n\n        return Result;\n    }\n\n\n\n    UpdateProp() {\n\n        this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"Label\").getComponent(Label).string = this.Game_Script.PropNum + \"\";\n\n    }\n\n}\n\n\n"]}