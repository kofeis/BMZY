{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/framework/common/RenderChildBatch.ts"],"names":["UIRenderer","_decorator","cocosUtil","ccclass","property","RenderChildBatch","pathArr","path2RenderArr","Map","rootNodeArr","addRootItemNode","node","indexOf","pauseRender","push","rootPath","isValid","path","name","renderable","getComponent","renderArr","get","set","_realRender","_render","children","forEach","child","removeRootItemNode","removeRender","index","splice","arr","updateAssembler","batch","postUpdateAssembler","tmpArr","activeInHierarchy","_renderFlag","_assembler","onDestroy","undefined"],"mappings":"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","sourcesContent":["import { Node, UIRenderer, _decorator } from 'cc';\nimport { cocosUtil } from '../utils/CocosUtil';\nconst { ccclass, property } = _decorator;\n\n// 合批渲染\n@ccclass('RenderChildBatch')\nexport class RenderChildBatch extends UIRenderer {\n\n    private pathArr: string[] = [];\n    private path2RenderArr: Map<string, UIRenderer[]> = new Map();\n\n    private rootNodeArr: Node[] = [];\n\n    // 添加根子节点\n    public addRootItemNode(node: Node) {\n        if (this.rootNodeArr.indexOf(node) == -1) {\n            this.pauseRender(node, \"\");\n            this.rootNodeArr.push(node);\n        }\n    }\n\n    // 架空节点提交渲染的方法\n    private pauseRender(node: Node, rootPath: string) {\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let path = rootPath + node.name;\n        let renderable = node.getComponent(UIRenderer);\n        if (renderable) {\n            if (this.pathArr.indexOf(path) == -1) {\n                this.pathArr.push(path);\n            }\n            let renderArr = this.path2RenderArr.get(path);\n            if (!renderArr) {\n                renderArr = [];\n                this.path2RenderArr.set(path, renderArr);\n            }\n            if (renderArr.indexOf(renderable) == -1) {\n                if (!renderable._realRender) {\n                    renderable._realRender = renderable._render;\n                    renderable._render = function () { };\n                }\n                renderArr.push(renderable);\n            }\n        }\n\n        node.children.forEach((child: Node) => {\n            this.pauseRender(child, path + \"/\");\n        });\n    }\n\n    // 移除根子节点\n    public removeRootItemNode(node: Node) {\n        this.removeRender(node, \"\");\n        let index = this.rootNodeArr.indexOf(node);\n        if (index >= 0) {\n            this.rootNodeArr.splice(index, 1);\n        }\n    }\n\n    // 还原架空的方法\n    private removeRender(node: Node, rootPath: string) {\n        if (!cocosUtil.isValid(node)) {\n            return;\n        }\n        let path = rootPath + node.name;\n        let arr = this.path2RenderArr.get(path);\n        if (arr) {\n            let renderable = node.getComponent(UIRenderer);\n            if (renderable) {\n                if (renderable._realRender) {\n                    renderable._render = renderable._realRender;\n                    delete renderable._realRender;\n                }\n                let index = arr.indexOf(renderable);\n                if (index != -1) {\n                    arr.splice(index, 1);\n                }\n            }\n        }\n        node.children.forEach((child: Node) => {\n            this.removeRender(child, path + \"/\");\n        });\n    }\n\n    // 所有子节点渲染前调用\n    updateAssembler(batch: any) {\n\n    }\n\n    // 所有子节点渲染后调用\n    postUpdateAssembler(batch: any) {\n        this.pathArr.forEach((path: string) => {\n            let arr = this.path2RenderArr.get(path);\n            let tmpArr = [];\n            arr.forEach((renderable: UIRenderer) => {\n                if (!cocosUtil.isValid(renderable) || !cocosUtil.isValid(renderable.node)) {\n                    return;\n                }\n                tmpArr.push(renderable);\n                if (!renderable.node.activeInHierarchy) {\n                    return;\n                }\n                if (renderable._renderFlag && renderable._assembler) {\n                    renderable._realRender(batch);\n                }\n            });\n            this.path2RenderArr.set(path, tmpArr);\n        });\n    }\n\n    // 还原现场\n    onDestroy() {\n        this.pathArr.forEach((path: string) => {\n            let arr = this.path2RenderArr.get(path);\n            arr.forEach((renderable: UIRenderer) => {\n                if (!cocosUtil.isValid(renderable)) {\n                    return;\n                }\n                if (renderable._realRender) {\n                    renderable._render = renderable._realRender;\n                    delete renderable._realRender;\n                }\n            });\n        });\n        this.path2RenderArr = undefined;\n        this.pathArr = undefined;\n        this.rootNodeArr = undefined;\n    }\n\n}\n"]}