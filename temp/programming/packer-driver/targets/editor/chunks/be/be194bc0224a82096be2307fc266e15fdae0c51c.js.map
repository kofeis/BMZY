{"version":3,"sources":["file:///D:/CYDW/WoChengYuTeNiu/assets/Script/Tool/Resoure_Data.ts"],"names":["_decorator","Component","Node","Prefab","AudioClip","director","AudioSource","sys","CCBoolean","SpriteFrame","view","game","Game","assetManager","Texture2D","isValid","Material","JsonAsset","Font","AnimationClip","Tool_Event","Tool_Other","Tool_UI","PlatformApi","ccclass","property","Game_Mode","Scene_Change_Type","Resoure_Data","tooltip","constructor","Bundles","_Cache_Scene","_Cache_Prefab","_Cache_SpriteFrame","_Cache_Texture2D","_Cache_AudioClip","_Cache_Material","_Cache_Json","_Cache_AnimationClip","_Cache_Font","Vibration_Switch","Sound_Switch","Sound_Volume","Sound_AudioSource","Music_Switch","Music_Volume","Music_AudioSource","Sound_Long_AudioSource","Is_First_Start","Tutorial","FrameRate","LastTime","FrameRate_Schedule","Time_Current","performance","now","Time_Elapsed","currentFrameRate","console","debug","toFixed","Check_FrameRate","unschedule","schedule","update","Dt","onEnable","onDisable","onDestroy","onLoad","Director_AddPersistRootNode","node","Game_FrameRate_Set","Director_Scheduler_TimeScale_Set","window","addEventListener","Event","Screen_Update","Screen_Width","innerWidth","Screen_Height","innerHeight","Visible_Size","getVisibleSize","Visible_Width","width","Visible_Height","height","error","instance","Event_Dispatch","on","EVENT_HIDE","EVENT_SHOW","document","visibilityState","addComponent","parent","start","Is_First_StartUp","Information_Printing","Load_Bundle","First_Start","Data_Get","Get_Type_Is_Abnormal","Data_Set","Fetch_Data","Url","isWechatPlatform","Fetch_DataWX","Response","fetch","log","Data","json","Update_Data","Update_DataWX","method","headers","body","JSON","stringify","ok","Error","status","res","Promise","resolve","reject","wx","request","url","success","data","fail","err","header","statusCode","Data_Name","localStorage","setItem","e","Default_Value","Data_Value","Data_Raw","getItem","parse","undefined","Data_Delete","removeItem","Data_Is_Exist","Data_Update","New_Data","Existing_Data","Updated_Data","Data_Get_All_Keys","Object","keys","Data_Get_All","Keys","All_Data","forEach","Key","Clear_All_Data","clear","Copy_Deep","Obj","Cache","WeakMap","has","get","Date","RegExp","Map","Copied_Map","set","Value","Set","Copied_Set","add","Array","isArray","Copied_Array","map","Item","Copied_Obj","prototype","hasOwnProperty","call","Copy_Shallow","slice","Vibration_Switch_Set","Switch","Vibration_Switch_Get","Sound_Switch_Set","element","volume","Sound_Switch_Get","Sound_Volume_Set","Volume","Music_Switch_Set","Music_Switch_Get","Music_Volume_Set","Audio_Switch_Set","Audio_Volume_Set","Sound_Play","Path","Res","Load_AudioClip","loop","playOneShot","Music_Play","Call","warn","enabled","stop","clip","play","Sound_Long_play","Music_Pause","pause","Music_Resume","Music_Stop","Sound_Long_Pause","Sound_Long_Resume","Sound_Long_Stop","Sound_Long_Stop_All","i","length","Load_Remote_ImageAsset","Time_Start","loadRemote","ext","Err","Time_Finish","Time_Total","Texture","image","Sprite_Frame","texture","Load_Remote_ImageAsset_","Load_Remote_audio","Bundle_Name","loadBundle","Load_Dir","Type","loadDir","finished","total","item","onProgress","Load_Scene","Progress_Bar","Value_Label","loadScene","Finished","Total","Schedule","Number","progress","Math","floor","string","Scene_Name_Current","Load_Prefab","load","Load_SpriteFrame","Load_Texture","Load_Material","Load_Json","Load_AnimationClip","Load_Font","Release_Resource","Release_Resource_All","Game_Toggle_Fullscreen","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","Game_UIScale_Set","scale","style","transform","Game_Restart","restart","Game_Resume","resume","Game_Pause","Game_End","end","frameRate","Director_Run","SceneAsset","runSceneImmediate","Director_Resume","Director_Pause","Director_End","Node_Set","addPersistRootNode","Director_RemovePersistRootNode","removePersistRootNode","Scale","getScheduler","setTimeScale","Director_Scheduler_TimeScale_Get","getTimeScale","isNative","isBrowser","isMobile","isLittleEndian","isXR","Get_Current_Full_Time","Get_Timestamp","Get_Unix_Timestamp","Get_Timestamp_From_Date","year","month","day","date","getTime","Get_Time_Difference","Start_Timestamp","Fnish_Timestamp","Get_Current_Year","getFullYear","Get_Current_Month","getMonth","Get_Current_Date","getDate","Get_Current_Hour","getHours","Get_Current_Minute","getMinutes","Get_Current_Second","getSeconds","Get_Current_Millisecond","getMilliseconds","Get_Current_Day","getDay","Current_Time","Year","Month","Hour","Minute","Second","MilliSecond","Day"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, AudioClip, director, resources, AudioSource, sys, Label, find, CCBoolean, CCInteger, v3, Vec3, debug, PhysicsSystem2D, Sprite, color, LabelOutline, log, SpriteFrame, EPhysics2DDrawFlags, v2, SpriteAtlas, view, game, Game, Vec2, assetManager, Texture2D, isValid, macro, Material, JsonAsset, Font, AnimationClip, AssetManager, Constructor, ImageAsset, Scene, UITransform, SceneAsset, ProgressBar } from 'cc';\r\nimport { Tool_Event } from './Tool_Event';\r\nimport { Tool_Other } from './Tool_Other';\r\nimport { Tool_UI } from './Tool_UI';\r\nimport { PlatformApi } from '../Other/SDK/PlatformApi';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**游戏模式 */\r\nexport enum Game_Mode {\r\n    /**成语 */\r\n    Idiom,\r\n    /**影视 */\r\n    Film,\r\n    /**普通 */\r\n    Normal,\r\n    /**无尽 */\r\n    Endless,\r\n    /**教程 */\r\n    Tutorial,\r\n}\r\n\r\n/**场景改变类型 */\r\nexport enum Scene_Change_Type {\r\n    /**自动 */\r\n    Automatic,\r\n    /**手动 */\r\n    Manual,\r\n    /**结束 */\r\n    Finish,\r\n}\r\n\r\nexport interface Interface {\r\n    Interface: number,\r\n}\r\n\r\nexport type Type = {\r\n    Type: number;\r\n}\r\n\r\n\r\n@ccclass('Resoure_Data')\r\nexport class Resoure_Data extends Component {\r\n\r\n    public static readonly instance = new Resoure_Data();\r\n\r\n    //--------------------------------------------------------------------------------------------\r\n\r\n    /**缓存 Bundles */\r\n    private Bundles: AssetManager.Bundle = null;\r\n    /**缓存 Scene */\r\n    private _Cache_Scene: Object = {};\r\n    /**缓存 Prefab */\r\n    private _Cache_Prefab: Object = {};\r\n    /**缓存 SpriteFrame */\r\n    private _Cache_SpriteFrame: Object = {};\r\n    /**缓存 Texture2D */\r\n    private _Cache_Texture2D: Object = {};\r\n    /**缓存 AudioClip */\r\n    private _Cache_AudioClip: Object = {};\r\n    /**缓存 Material */\r\n    private _Cache_Material: Object = {};\r\n    /**缓存 Json */\r\n    private _Cache_Json: Object = {};\r\n    /**缓存 AnimationClip */\r\n    private _Cache_AnimationClip: Object = {};\r\n    /**缓存 Font */\r\n    private _Cache_Font: Object = {};\r\n\r\n    //--------------------------------------------------------------------------------------------\r\n\r\n    /**震动开关 */\r\n    private Vibration_Switch: boolean = true;\r\n\r\n    /**声音开关 */\r\n    private Sound_Switch: boolean = true;\r\n    /**声音音量 */\r\n    private Sound_Volume: number = 1;\r\n    /**声音音频组件 */\r\n    private Sound_AudioSource: AudioSource = null;\r\n\r\n    /**音乐开关 */\r\n    private Music_Switch: boolean = true;\r\n    /**音乐音量 */\r\n    private Music_Volume: number = 1;\r\n    /**音乐音频组件 */\r\n    private Music_AudioSource: AudioSource = null;\r\n\r\n    /**长音效音频组件(可以手动停止的音效) */\r\n    private Sound_Long_AudioSource: AudioSource[] = [];\r\n\r\n    //--------------------------------------------------------------------------------------------\r\n\r\n    /**场景名字_当前 */\r\n    @property({ tooltip: \"场景名字_当前\" })\r\n    public Scene_Name_Current: string = \"Main\";\r\n\r\n    /**场景名字_下个 */\r\n    @property({ tooltip: \"场景名字_下个\" })\r\n    public Scene_Name_Next: string = \"Game\";\r\n\r\n    /**是否首次启动 */\r\n    private Is_First_Start: boolean = true;\r\n\r\n    /**@param {CCBoolean} 是否竖屏*/\r\n    @property(CCBoolean)\r\n    public Is_Vertical_Screen: boolean = true;\r\n\r\n    //--------------------------------------------------------------------------------------------\r\n\r\n    /**游戏模式 */\r\n    public Game_Mode: Game_Mode = Game_Mode.Tutorial;\r\n\r\n\r\n    //--------------------------------------------------------------------------------------------\r\n\r\n    private FrameRate: number = 0;\r\n    private LastTime: number = 0;\r\n    private FrameRate_Schedule: Function = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.FrameRate_Schedule = () => {\r\n            const Time_Current = performance.now();\r\n            const Time_Elapsed = (Time_Current - this.LastTime) / 1000;\r\n            const currentFrameRate = this.FrameRate / Time_Elapsed;\r\n            console.debug(`帧率: ${currentFrameRate.toFixed(0)}`);\r\n            this.FrameRate = 0;\r\n            this.LastTime = Time_Current;\r\n        };\r\n    }\r\n    /**查看帧率 */\r\n    Check_FrameRate() {\r\n        this.unschedule(this.FrameRate_Schedule);\r\n        this.FrameRate = 0;\r\n        this.LastTime = performance.now();\r\n        this.schedule(this.FrameRate_Schedule, 1);\r\n    }\r\n    update(Dt: number): void {\r\n        this.FrameRate++;\r\n    }\r\n    onEnable() {\r\n        console.debug(\"组件被启用\");\r\n    }\r\n    onDisable() {\r\n        console.debug(\"组件被禁用或节点变为无效\");\r\n    }\r\n    onDestroy() {\r\n        console.debug(\"组件被销毁\");\r\n    }\r\n\r\n    onLoad() {\r\n        this.Director_AddPersistRootNode(this.node);\r\n        this.Game_FrameRate_Set(120);\r\n        this.Director_Scheduler_TimeScale_Set(1);\r\n        // this.Check_FrameRate();\r\n\r\n\r\n        // 启用物理系统\r\n        // PhysicsSystem2D.instance.enable = true;\r\n\r\n        // PhysicsSystem2D.instance.debugDrawFlags =\r\n        //   EPhysics2DDrawFlags.Shape\r\n        // | EPhysics2DDrawFlags.Joint\r\n        // | EPhysics2DDrawFlags.Aabb\r\n        // | EPhysics2DDrawFlags.Pair\r\n        // | EPhysics2DDrawFlags.CenterOfMass\r\n\r\n\r\n\r\n\r\n        // 监听浏览器窗口大小变化事件\r\n        window.addEventListener('resize', (Event) => {\r\n            Screen_Update();\r\n        });\r\n        // 监听浏览器横屏竖屏变化事件\r\n        window.addEventListener(\"orientationchange\", (Event) => {\r\n            console.debug(Event);\r\n            Screen_Update();\r\n        });\r\n\r\n        // 更新屏幕尺寸\r\n        function Screen_Update() {\r\n\r\n            // 浏览器窗口可见区域尺寸\r\n            let Screen_Width = window.innerWidth;\r\n            let Screen_Height = window.innerHeight;\r\n            console.debug(`当前可见区域尺寸: ${Screen_Width} x ${Screen_Height}`);\r\n\r\n            // 浏览器窗口设计分辨率尺寸\r\n            // let Width_Design = view.getDesignResolutionSize().width;\r\n            // let Height_Design = view.getDesignResolutionSize().height;\r\n            // console.debug(`当前设计分辨率: ${Width_Design} x ${Height_Design}`);\r\n\r\n            // 可见区域尺寸\r\n            let Visible_Size = view.getVisibleSize();\r\n            let Visible_Width = Visible_Size.width;\r\n            let Visible_Height = Visible_Size.height;\r\n            console.debug(`当前可见分辨率: ${Visible_Width} x ${Visible_Height}`);\r\n\r\n            if (Visible_Width >= Visible_Height) {\r\n                console.error('当前为横屏');\r\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Horizontal\");\r\n            } else {\r\n                console.error('当前为竖屏');\r\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Vertical\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n        game.on(Game.EVENT_HIDE, () => {\r\n            // 游戏窗口被隐藏时的处理逻辑\r\n            console.debug('Game window is hidden', \"游戏窗口被隐藏时的处理逻辑\",);\r\n        });\r\n        game.on(Game.EVENT_SHOW, () => {\r\n            // 游戏窗口被显示时的处理逻辑\r\n            console.debug('Game window is shown', \"游戏窗口被显示时的处理逻辑\");\r\n        });\r\n        document.addEventListener('visibilitychange', () => {\r\n            if (document.visibilityState === 'visible') {\r\n                // 屏幕解锁时的处理逻辑\r\n                console.debug('Screen is unlocked', \"屏幕解锁时的处理逻辑\");\r\n            } else {\r\n                // 屏幕锁定时的处理逻辑\r\n                console.debug('Screen is locked', \"屏幕锁定时的处理逻辑\");\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        this.Music_AudioSource = new Node(\"Music\").addComponent(AudioSource);\r\n        this.Sound_AudioSource = new Node(\"Sound\").addComponent(AudioSource);\r\n        this.Music_AudioSource.node.parent = this.node;\r\n        this.Sound_AudioSource.node.parent = this.node;\r\n\r\n    }\r\n\r\n    async start() {\r\n        PlatformApi.instance.onLoad();\r\n\r\n        this.Is_First_StartUp();\r\n        this.Information_Printing();\r\n        this.Bundles = await this.Load_Bundle(\"Load\");\r\n\r\n\r\n\r\n        // this.Music_Play(\"Audio/BGM1\");\r\n\r\n        //加载资源\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**是否首次启动 */\r\n    Is_First_StartUp() {\r\n        let First_Start = this.Data_Get(\"First_Start\");\r\n        console.debug(First_Start);\r\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(First_Start)) {\r\n            this.Is_First_Start = true;\r\n            First_Start = this.Is_First_Start;\r\n            this.Data_Set(\"First_Start\", First_Start);\r\n        }\r\n        if (First_Start) {\r\n            console.debug(\"第一次开始\");\r\n            // First_Start = false;\r\n            // this.Data_Set(\"First_Start\", First_Start);\r\n        } else {\r\n            console.debug(\"不是第一次开始\");\r\n        }\r\n    }\r\n\r\n\r\n    /**请求数据 */\r\n    async Fetch_Data(Url: string) {\r\n        if (Tool_UI.instance.isWechatPlatform()) {\r\n            return this.Fetch_DataWX(Url);\r\n        } else {\r\n            try {\r\n                const Response = await fetch(Url);\r\n                console.log(\"请求回复:\", Response);\r\n                const Data = await Response.json();\r\n                console.debug(\"获取到的数据:\", Data);\r\n                return Data;\r\n            } catch (error) {\r\n                console.error(\"获取数据失败:\", error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**更新数据 (PUT请求) */\r\n    async Update_Data(Url: string, Data: any) {\r\n        if (Tool_UI.instance.isWechatPlatform()) {\r\n            return this.Update_DataWX(Url, Data);\r\n        } else {\r\n            try {\r\n                const Response = await fetch(Url, {\r\n                    method: 'PUT', // 或 'PATCH' 如果API支持部分更新\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(Data)\r\n                });\r\n                if (!Response.ok) {\r\n                    throw new Error(`HTTP错误! 状态: ${Response.status}`);\r\n                }\r\n                console.debug(\"更新数据成功\");\r\n                return await Response.json();\r\n            } catch (error) {\r\n                console.error(\"更新请求失败:\", error);\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 微信小游戏环境下的数据请求方法\r\n     * @param Url 请求地址\r\n     * @returns 返回解析后的数据\r\n     */\r\n    async Fetch_DataWX(Url: string) {\r\n        try {\r\n            const res = await new Promise<any>((resolve, reject) => {\r\n                wx.request({\r\n                    url: Url,\r\n                    method: 'GET',\r\n                    success: (res) => {\r\n                        console.log(\"请求成功:\", res);\r\n                        resolve(res.data); // 微信返回的数据在res.data中\r\n                    },\r\n                    fail: (err) => {\r\n                        console.error(\"请求失败:\", err);\r\n                        reject(err);\r\n                    }\r\n                });\r\n            });\r\n            console.debug(\"获取到的数据:\", res);\r\n            return res;\r\n        } catch (error) {\r\n            console.error(\"获取数据失败:\", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 微信小游戏环境下的数据更新方法 (PUT请求)\r\n     * @param url 请求地址\r\n     * @param data 要更新的数据\r\n     * @returns 返回更新后的数据\r\n     */\r\n    async Update_DataWX(url: string, data: any) {\r\n        try {\r\n            const res = await new Promise<any>((resolve, reject) => {\r\n                wx.request({\r\n                    url: url,\r\n                    method: 'PUT',\r\n                    data: data, // 微信会自动序列化对象\r\n                    header: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    success: (res) => {\r\n                        // 微信使用statusCode而不是status\r\n                        if (res.statusCode >= 200 && res.statusCode < 300) {\r\n                            console.debug(\"更新数据成功\");\r\n                            resolve(res.data);\r\n                        } else {\r\n                            reject(new Error(`HTTP错误! 状态: ${res.statusCode}`));\r\n                        }\r\n                    },\r\n                    fail: (err) => {\r\n                        reject(err);\r\n                    }\r\n                });\r\n            });\r\n            return res;\r\n        } catch (error) {\r\n            console.error(\"更新请求失败:\", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    *数据保存本地\r\n    *@Data_Name 待保存数据的名字\r\n    *@Data_Name 待保存的数据\r\n    */\r\n    // Data_Set(Data_Name: string, Data: any) {\r\n    //     sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\r\n    // }\r\n    /**\r\n     *读取本地数据\r\n     *@Data_Name 待读取数据的名字\r\n     */\r\n    // Data_Get(Data_Name: string) {\r\n    //     let Data = sys.localStorage.getItem(Data_Name);\r\n    //     return JSON.parse(Data);\r\n    // }\r\n\r\n    /**\r\n     * 安全保存数据到本地\r\n     * @param Data_Name 数据键名\r\n     * @param Data 要保存的数据（会自动JSON序列化）\r\n     */\r\n    Data_Set(Data_Name: string, Data: any): void {\r\n        try {\r\n            sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\r\n        } catch (e) {\r\n            console.error(`[Storage] 保存 ${Data_Name} 失败:`, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 安全读取本地数据\r\n     * @param Data_Name 数据键名\r\n     * @param Default_Value 当数据不存在时的默认值\r\n     */\r\n    Data_Get(Data_Name: string, Default_Value: any = null): any {\r\n        try {\r\n            let Data_Value;\r\n            const Data_Raw = sys.localStorage.getItem(Data_Name);\r\n            Data_Value = Data_Raw ? JSON.parse(Data_Raw) : null;\r\n            // 返回数据或默认值\r\n            return Data_Value !== undefined ? Data_Value : Default_Value;\r\n        } catch (e) {\r\n            console.error(`[Storage] 读取 ${Data_Name} 失败:`, e);\r\n            return Default_Value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param Data_Name 待删除数据的名字\r\n     */\r\n    Data_Delete(Data_Name: string) {\r\n        sys.localStorage.removeItem(Data_Name);\r\n    }\r\n    /**\r\n     * @param Data_Name 待检查数据的名字\r\n     * @returns 是否存在该数据\r\n     */\r\n    Data_Is_Exist(Data_Name: string): boolean {\r\n        return sys.localStorage.getItem(Data_Name) !== null;\r\n    }\r\n    /**\r\n     * @param Data_Name 待更新数据的名字\r\n     * @param New_Data 新的数据\r\n     */\r\n    Data_Update(Data_Name: string, New_Data: any) {\r\n        if (this.Data_Is_Exist(Data_Name)) {\r\n            let Existing_Data = this.Data_Get(Data_Name);\r\n            // 根据需要合并或更新数据\r\n            let Updated_Data = { ...Existing_Data, ...New_Data };\r\n            this.Data_Set(Data_Name, Updated_Data);\r\n        } else {\r\n            console.error(`Data with name ${Data_Name} does not exist.`);\r\n        }\r\n    }\r\n    /**\r\n     * 获取所有本地存储数据的键\r\n     * @returns 所有键的数组\r\n     */\r\n    Data_Get_All_Keys(): string[] {\r\n        return Object.keys(sys.localStorage);\r\n    }\r\n    /**\r\n     * 获取所有本地存储的数据\r\n     * @returns 所有数据的对象\r\n     */\r\n    Data_Get_All(): object {\r\n        const Keys = this.Data_Get_All_Keys();\r\n        let All_Data = {};\r\n        Keys.forEach(Key => {\r\n            All_Data[Key] = this.Data_Get(Key);\r\n        });\r\n        return All_Data;\r\n    }\r\n    /**\r\n     * 清空所有本地存储数据\r\n     */\r\n    Clear_All_Data() {\r\n        sys.localStorage.clear();\r\n    }\r\n\r\n    /**\r\n     * 深拷贝\r\n     * @param Obj 需要拷贝的对象\r\n     * @param Cache 缓存已拷贝的对象（用于处理循环引用）\r\n     * @returns 拷贝后的对象\r\n     */\r\n    Copy_Deep<T>(Obj: T, Cache = new WeakMap()): T {\r\n        if (typeof Obj !== 'object' || Obj === null) {\r\n            return Obj;\r\n        }\r\n        if (Cache.has(Obj)) {\r\n            return Cache.get(Obj);\r\n        }\r\n        if (Obj instanceof Date) {\r\n            return new Date(Obj) as T;\r\n        }\r\n        if (Obj instanceof RegExp) {\r\n            return new RegExp(Obj) as T;\r\n        }\r\n        if (Obj instanceof Map) {\r\n            const Copied_Map = new Map();\r\n            Cache.set(Obj, Copied_Map);\r\n            Obj.forEach((Value, Key) => {\r\n                Copied_Map.set(Key, this.Copy_Deep(Value, Cache));\r\n            });\r\n            return Copied_Map as T;\r\n        }\r\n        if (Obj instanceof Set) {\r\n            const Copied_Set = new Set();\r\n            Cache.set(Obj, Copied_Set);\r\n            Obj.forEach((Value) => {\r\n                Copied_Set.add(this.Copy_Deep(Value, Cache));\r\n            });\r\n            return Copied_Set as T;\r\n        }\r\n        if (Array.isArray(Obj)) {\r\n            const Copied_Array = Obj.map((Item) => this.Copy_Deep(Item, Cache));\r\n            Cache.set(Obj, Copied_Array);\r\n            return Copied_Array as T;\r\n        }\r\n        const Copied_Obj: Partial<T> = {};\r\n        Cache.set(Obj, Copied_Obj);\r\n        for (const Key in Obj) {\r\n            if (Object.prototype.hasOwnProperty.call(Obj, Key)) {\r\n                Copied_Obj[Key] = this.Copy_Deep(Obj[Key], Cache);\r\n            }\r\n        }\r\n        return Copied_Obj as T;\r\n    }\r\n    /**\r\n     * 浅拷贝\r\n     * @param Obj 需要拷贝的对象\r\n     * @returns 拷贝后的对象\r\n     */\r\n    Copy_Shallow<T>(Obj: T): T {\r\n        if (typeof Obj !== 'object' || Obj === null) {\r\n            return Obj;\r\n        }\r\n        if (Array.isArray(Obj)) {\r\n            return Obj.slice() as T;\r\n        }\r\n        return { ...Obj };\r\n    }\r\n\r\n    /**震动开关设置 */\r\n    Vibration_Switch_Set(Switch: boolean = false) {\r\n        this.Vibration_Switch = Switch;\r\n        this.Data_Set(\"Vibration_Switch\", this.Vibration_Switch);\r\n    }\r\n\r\n    /**震动开关获取 */\r\n    Vibration_Switch_Get() {\r\n        this.Vibration_Switch = this.Data_Get(\"Vibration_Switch\");\r\n        if (this.Vibration_Switch === null || this.Vibration_Switch === undefined) {\r\n            this.Vibration_Switch = true;\r\n        }\r\n        return this.Vibration_Switch;\r\n    }\r\n\r\n    /**声音开关设置 */\r\n    Sound_Switch_Set(Switch: boolean = false) {\r\n        this.Sound_Switch = Switch;\r\n        if (this.Sound_Switch) {\r\n            this.Sound_Long_AudioSource.forEach(element => {\r\n                element.volume = this.Sound_Volume;\r\n            });\r\n        } else {\r\n            this.Sound_Long_AudioSource.forEach(element => {\r\n                element.volume = 0;\r\n            });\r\n        }\r\n        this.Data_Set(\"Sound_Switch\", this.Sound_Switch);\r\n    }\r\n    /**声音开关获取 */\r\n    Sound_Switch_Get() {\r\n        this.Sound_Switch = this.Data_Get(\"Sound_Switch\");\r\n        if (this.Sound_Switch === null || this.Sound_Switch === undefined) {\r\n            this.Sound_Switch = true;\r\n        }\r\n        return this.Sound_Switch;\r\n    }\r\n    /**声音音量设置 */\r\n    Sound_Volume_Set(Volume: number = 0) {\r\n        this.Sound_Volume = Volume;\r\n        this.Sound_Long_AudioSource.forEach(element => {\r\n            element.volume = this.Sound_Volume;\r\n        });\r\n    }\r\n    /**音乐开关设置 */\r\n    Music_Switch_Set(Switch: boolean = false) {\r\n        this.Music_Switch = Switch;\r\n        if (this.Music_Switch) {\r\n            this.Music_AudioSource.volume = this.Music_Volume;\r\n        } else {\r\n            this.Music_AudioSource.volume = 0;\r\n        }\r\n        this.Data_Set(\"Music_Switch\", this.Music_Switch);\r\n    }\r\n    /**音乐开关获取 */\r\n    Music_Switch_Get() {\r\n        this.Music_Switch = this.Data_Get(\"Music_Switch\");\r\n        if (this.Music_Switch === null || this.Music_Switch === undefined) {\r\n            this.Music_Switch = true;\r\n        }\r\n        return this.Music_Switch;\r\n    }\r\n    /**音乐音量设置 */\r\n    Music_Volume_Set(Volume: number = 0) {\r\n        this.Music_Volume = Volume;\r\n        this.Music_AudioSource.volume = this.Music_Volume;\r\n    }\r\n    /**音频开关设置 */\r\n    Audio_Switch_Set(Switch: boolean = false) {\r\n        this.Sound_Switch_Set(Switch);\r\n        this.Music_Switch_Set(Switch);\r\n    }\r\n    /**音频声音设置 */\r\n    Audio_Volume_Set(Volume: number = 0) {\r\n        this.Sound_Volume_Set(Volume);\r\n        this.Music_Volume_Set(Volume);\r\n    }\r\n    /**音效播放 */\r\n    async Sound_Play(Path: string) {\r\n        let Res = await this.Load_AudioClip(Path);\r\n        if (!isValid(this.node)) return;\r\n        if (this.Sound_Switch) {\r\n            this.Sound_AudioSource.volume = this.Sound_Volume;\r\n        } else {\r\n            this.Sound_AudioSource.volume = 0;\r\n        }\r\n        this.Sound_AudioSource.loop = false;\r\n        this.Sound_AudioSource.playOneShot(Res, this.Sound_Volume);\r\n    }\r\n    /**音乐播放 */\r\n    async Music_Play(Path: string, Call = () => { }) {\r\n        console.warn(Path);\r\n        let Res = await this.Load_AudioClip(Path);\r\n        if (!isValid(this.node)) return;\r\n        Call && Call()\r\n        this.Music_AudioSource.enabled = true;\r\n        this.Music_AudioSource.stop();\r\n        this.Music_AudioSource.clip = Res;\r\n        if (this.Music_Switch) {\r\n            this.Music_AudioSource.volume = this.Music_Volume;\r\n        } else {\r\n            this.Music_AudioSource.volume = 0;\r\n        }\r\n        this.Music_AudioSource.loop = true;\r\n        this.Music_AudioSource.play();\r\n    }\r\n    /**长音效播放 */\r\n    async Sound_Long_play(Path: string) {\r\n        if (this.Sound_Long_AudioSource[Path]) {\r\n            this.Sound_Long_AudioSource[Path].enabled = true;\r\n            this.Sound_Long_AudioSource[Path].stop();\r\n            if (this.Sound_Switch) {\r\n                this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\r\n            } else {\r\n                this.Sound_Long_AudioSource[Path].volume = 0;\r\n            }\r\n            this.Sound_Long_AudioSource[Path].loop = true;\r\n            this.Sound_Long_AudioSource[Path].play();\r\n            return\r\n        }\r\n        let Res = await this.Load_AudioClip(Path);\r\n        if (!isValid(this.node)) return//防止音乐还没加载完 场景就被销毁了\r\n        this.Sound_Long_AudioSource[Path] = new Node(Path).addComponent(AudioSource);\r\n        this.Sound_Long_AudioSource[Path].node.parent = this.node;\r\n        this.Sound_Long_AudioSource[Path].clip = Res;\r\n        this.Sound_Long_AudioSource[Path].enabled = true;\r\n        this.Sound_Long_AudioSource[Path].stop();\r\n        if (this.Sound_Switch) {\r\n            this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\r\n        } else {\r\n            this.Sound_Long_AudioSource[Path].volume = 0;\r\n        }\r\n        this.Sound_Long_AudioSource[Path].loop = true;\r\n        this.Sound_Long_AudioSource[Path].play();\r\n    }\r\n    /**音乐暂停 */\r\n    Music_Pause() {\r\n        this.Music_AudioSource.pause();\r\n    }\r\n    /**音乐恢复 */\r\n    Music_Resume() {\r\n        this.Music_AudioSource.play();\r\n    }\r\n    /**音乐停止 */\r\n    Music_Stop() {\r\n        this.Music_AudioSource.stop();\r\n    }\r\n    /**长音效暂停 */\r\n    Sound_Long_Pause(Path: string) {\r\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].pause();\r\n    }\r\n    /**长音效恢复 */\r\n    Sound_Long_Resume(Path: string) {\r\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].play();\r\n    }\r\n    /**长音效停止 */\r\n    Sound_Long_Stop(Path: string) {\r\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].stop();\r\n    }\r\n    /**长音效停止所有 */\r\n    Sound_Long_Stop_All() {\r\n        if (this.Sound_AudioSource) this.Sound_AudioSource.stop();\r\n        for (let i = 0; i < this.Sound_Long_AudioSource.length; i++) {\r\n            this.Sound_Long_AudioSource[i].stop();\r\n        }\r\n    }\r\n\r\n    /**加载远程图片资源无后缀名\r\n     * @Path 远程路径\r\n     */\r\n    async Load_Remote_ImageAsset(Path: string): Promise<SpriteFrame> {\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                assetManager.loadRemote<ImageAsset>(Path, { ext: '.png' }, (Err, Res: ImageAsset) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 ImageAsset 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    const Texture = new Texture2D();\r\n                    Texture.image = Res;\r\n                    const Sprite_Frame = new SpriteFrame();\r\n                    Sprite_Frame.texture = Texture;\r\n                    resolve(Sprite_Frame);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    /**加载远程图片资源有后缀名\r\n    * @Path 远程/本地路径\r\n    */\r\n    async Load_Remote_ImageAsset_(Path: string): Promise<SpriteFrame> {\r\n\r\n        // try {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         assetManager.loadRemote<ImageAsset>(Path, (err, imageAsset) => {\r\n        //             if (err) {\r\n        //                 console.error('加载远程图片失败:', err);\r\n        //                 return;\r\n        //             }\r\n        //             // 创建纹理\r\n        //             const texture = new Texture2D();\r\n        //             texture.image = imageAsset;\r\n        //             // 创建精灵帧\r\n        //             const spriteFrame = new SpriteFrame();\r\n        //             spriteFrame.texture = texture;\r\n        //             resolve(spriteFrame);\r\n        //         });\r\n        //     });\r\n        // } catch (Error) {\r\n        //     console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\r\n        //     throw Error;\r\n        // }\r\n\r\n        // return\r\n\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                assetManager.loadRemote<ImageAsset>(Path, (Err, Res: ImageAsset) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 ImageAsset 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    const Texture = new Texture2D();\r\n                    Texture.image = Res;\r\n                    const Sprite_Frame = new SpriteFrame();\r\n                    Sprite_Frame.texture = Texture;\r\n                    resolve(Sprite_Frame);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    /**加载远程音频资源\r\n     * @Path 远程路径\r\n     */\r\n    async Load_Remote_audio(Path: string): Promise<AudioClip> {\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                assetManager.loadRemote(Path, (Err, Res: AudioClip) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 AudioClip 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 AudioClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(Res);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 AudioClip ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n\r\n    async Load_Bundle(Bundle_Name: string): Promise<any> {\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                assetManager.loadBundle(Bundle_Name, (Err, Res) => {\r\n                    if (Err) {\r\n                        console.error(`加载 Bundle ${Bundle_Name} 失败: ${Err}`);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Bundle ${Bundle_Name} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(Res);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Bundle ${Bundle_Name} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    /**加载文件夹 */\r\n    async Load_Dir(Path: string, Type: any): Promise<any> {\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.loadDir(Path, Type, (finished, total, item) => {\r\n                    const onProgress: string = (finished / total).toFixed(2);\r\n                    console.debug(onProgress);\r\n                }, (Err, Res: any) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Dir 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Dir ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(Res);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Dir ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n\r\n    async Load_Scene(Path: string, Progress_Bar: ProgressBar, Value_Label: Label = null): Promise<Scene> {\r\n        if (this.Bundles == null) {\r\n            this.Bundles = await this.Load_Bundle(\"Load\");\r\n        }\r\n        if (this._Cache_Scene[Path]) {\r\n            console.debug(`Scene ${Path} 资源存在`);\r\n            return this._Cache_Scene[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.loadScene(Path, null, (Finished, Total, Item) => {\r\n                    let Schedule: number = Number((Finished / Total).toFixed(2));\r\n                    Progress_Bar.progress = Schedule;\r\n                    let Value: number = Math.floor(Schedule * 100);\r\n                    if (Value_Label != null) {\r\n                        Value_Label.string = Value + \"%\"\r\n                    }\r\n                    console.debug(`加载 Scene 进度: ${Finished}/${Total} (${Value}%)`);\r\n                }, (Err, Res: SceneAsset) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Scene 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Scene[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Scene ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    this.Scene_Name_Current = Path;\r\n                    resolve(this._Cache_Scene[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Scene ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n\r\n    async Load_Prefab(Path: string): Promise<Prefab> {\r\n        if (this.Bundles == null) {\r\n            this.Bundles = await this.Load_Bundle(\"Load\");\r\n        }\r\n        if (this._Cache_Prefab[Path]) {\r\n            console.debug(`Prefab ${Path} 资源存在`);\r\n            return this._Cache_Prefab[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, Prefab, (Err, Res: Prefab) => {\r\n                    if (Err) {\r\n                        console.error(`加载 Prefab ${Path} 失败: ${Err}`);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Prefab[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Prefab ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_Prefab[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Prefab ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_SpriteFrame(Path: string): Promise<SpriteFrame> {\r\n        Path = Path + \"/spriteFrame\";\r\n        if (this._Cache_SpriteFrame[Path]) {\r\n            console.debug(`SpriteFrame ${Path} 资源存在`);\r\n            return this._Cache_SpriteFrame[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, SpriteFrame, (Err, Res: SpriteFrame) => {\r\n                    if (Err) {\r\n                        console.error(`加载 SpriteFrame ${Path} 失败: ${Err}`);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_SpriteFrame[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 SpriteFrame ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_SpriteFrame[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 SpriteFrame ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_Texture(Path: string): Promise<Texture2D> {\r\n        if (this._Cache_Texture2D[Path]) {\r\n            console.debug(`Texture ${Path} 资源存在`);\r\n            return this._Cache_Texture2D[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, Texture2D, (Err, Res: Texture2D) => {\r\n                    if (Err) {\r\n                        console.error(`加载 Texture ${Path} 失败: ${Err}`);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Texture2D[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Texture ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_Texture2D[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Texture ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_AudioClip(Path: string): Promise<AudioClip> {\r\n        if (this._Cache_AudioClip[Path]) {\r\n            console.debug(`Audio ${Path} 资源存在`);\r\n            return this._Cache_AudioClip[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, AudioClip, (Err, Res: AudioClip) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Audio 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_AudioClip[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Audio ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_AudioClip[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Audio ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_Material(Path: string): Promise<Material> {\r\n        if (this._Cache_Material[Path]) {\r\n            console.debug(`Material ${Path} 资源存在`);\r\n            return this._Cache_Material[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, Material, (Err, Res: Material) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Material 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Material[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Material ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_Material[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Material ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_Json(Path: string): Promise<JsonAsset> {\r\n        if (this._Cache_Json[Path]) {\r\n            console.debug(`Json ${Path} 资源存在`);\r\n            return this._Cache_Json[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, JsonAsset, (Err, Res: JsonAsset) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Json 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Json[Path] = Res.json!;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Json ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_Json[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Json ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_AnimationClip(Path: string): Promise<AnimationClip> {\r\n        if (this._Cache_AnimationClip[Path]) {\r\n            console.debug(`AnimationClip ${Path} 资源存在`);\r\n            return this._Cache_AnimationClip[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, AnimationClip, (Err, Res: AnimationClip) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 AnimationClip 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_AnimationClip[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 AnimationClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_AnimationClip[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 AnimationClip ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n    async Load_Font(Path: string): Promise<Font> {\r\n        if (this._Cache_Font[Path]) {\r\n            console.debug(`Font ${Path} 资源存在`);\r\n            return this._Cache_Font[Path];\r\n        }\r\n        const Time_Start = Date.now();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                this.Bundles.load(Path, Font, (Err, Res: Font) => {\r\n                    if (Err) {\r\n                        console.error(\"加载 Font 失败:\", Err);\r\n                        reject(Err);\r\n                        return;\r\n                    }\r\n                    this._Cache_Font[Path] = Res;\r\n                    const Time_Finish = Date.now();\r\n                    const Time_Total = Time_Finish - Time_Start;\r\n                    console.debug(`加载 Font ${Path} 成功: 总用时长: ${Time_Total} ms`);\r\n                    resolve(this._Cache_Font[Path]);\r\n                    return;\r\n                });\r\n            });\r\n        } catch (Error) {\r\n            console.error(`加载 Font ${Path} 错误: ${Error}`);\r\n            throw Error;\r\n        }\r\n    }\r\n\r\n    /**释放资源 */\r\n    async Release_Resource(Path: string): Promise<void> {\r\n        if (this._Cache_Scene[Path]) {\r\n            delete this._Cache_Scene[Path];\r\n            console.debug(`释放 Scene ${Path} 资源`);\r\n        }\r\n        if (this._Cache_Prefab[Path]) {\r\n            delete this._Cache_Prefab[Path];\r\n            console.debug(`释放 Prefab ${Path} 资源`);\r\n        }\r\n        if (this._Cache_SpriteFrame[Path]) {\r\n            delete this._Cache_SpriteFrame[Path];\r\n            console.debug(`释放 SpriteFrame ${Path} 资源`);\r\n        }\r\n        if (this._Cache_Texture2D[Path]) {\r\n            delete this._Cache_Texture2D[Path];\r\n            console.debug(`释放 Texture ${Path} 资源`);\r\n        }\r\n        if (this._Cache_AudioClip[Path]) {\r\n            delete this._Cache_AudioClip[Path];\r\n            console.debug(`释放 Audio ${Path} 资源`);\r\n        }\r\n        if (this._Cache_Material[Path]) {\r\n            delete this._Cache_Material[Path];\r\n            console.debug(`释放 Material ${Path} 资源`);\r\n        }\r\n        if (this._Cache_Json[Path]) {\r\n            delete this._Cache_Json[Path];\r\n            console.debug(`释放 JSON ${Path} 资源`);\r\n        }\r\n        if (this._Cache_AnimationClip[Path]) {\r\n            delete this._Cache_AnimationClip[Path];\r\n            console.debug(`释放 AnimationClip ${Path} 资源`);\r\n        }\r\n        if (this._Cache_Font[Path]) {\r\n            delete this._Cache_Font[Path];\r\n            console.debug(`释放 Font ${Path} 资源`);\r\n        }\r\n    }\r\n    /**释放所有资源 */\r\n    async Release_Resource_All(): Promise<void> {\r\n        this._Cache_Scene = {};\r\n        this._Cache_Prefab = {};\r\n        this._Cache_SpriteFrame = {};\r\n        this._Cache_Texture2D = {};\r\n        this._Cache_AudioClip = {};\r\n        this._Cache_Material = {};\r\n        this._Cache_Json = {};\r\n        this._Cache_AnimationClip = {};\r\n        this._Cache_Font = {};\r\n        console.debug(`已释放所有资源`);\r\n    }\r\n\r\n    /** 游戏切换全屏模式 */\r\n    Game_Toggle_Fullscreen() {\r\n        if (!document.fullscreenElement) {\r\n            document.documentElement.requestFullscreen();\r\n            console.debug(`进入全屏`);\r\n        } else {\r\n            document.exitFullscreen();\r\n            console.debug(`退出全屏`);\r\n        }\r\n    }\r\n\r\n    /** 游戏界面缩放设置 */\r\n    Game_UIScale_Set(scale: number = 1) {\r\n        document.body.style.transform = `scale(${scale})`;\r\n    }\r\n\r\n    /**游戏重启$ */\r\n    Game_Restart() {\r\n        game.restart();\r\n    }\r\n    /**游戏恢复 */\r\n    Game_Resume() {\r\n        game.resume();\r\n    }\r\n    /**游戏暂停 */\r\n    Game_Pause() {\r\n        game.pause();\r\n    }\r\n    /**游戏停止 */\r\n    Game_End() {\r\n        game.end();\r\n    }\r\n    /**游戏帧率设置 */\r\n    Game_FrameRate_Set(FrameRate: number = 59) {\r\n        game.frameRate = FrameRate;\r\n    }\r\n\r\n\r\n    /**场景运行$ */\r\n    Director_Run(SceneAsset: Scene) {\r\n        director.runSceneImmediate(SceneAsset);\r\n    }\r\n    /**场景恢复$ */\r\n    Director_Resume() {\r\n        director.resume();\r\n    }\r\n    /**场景暂停$ */\r\n    Director_Pause() {\r\n        director.pause();\r\n    }\r\n    /**场景停止 */\r\n    Director_End() {\r\n        // director.end();\r\n    }\r\n    /**注册常驻根节点 */\r\n    Director_AddPersistRootNode(Node_Set: Node) {\r\n        director.addPersistRootNode(Node_Set);\r\n    }\r\n    /**注销常驻根节点 */\r\n    Director_RemovePersistRootNode(Node_Set: Node) {\r\n        director.removePersistRootNode(Node_Set);\r\n    }\r\n    /**场景调度间隔缩放设置 */\r\n    Director_Scheduler_TimeScale_Set(Scale: number = 1) {\r\n        director.getScheduler().setTimeScale(Scale);\r\n    }\r\n    /**场景调度间隔缩放获取 */\r\n    Director_Scheduler_TimeScale_Get(): number {\r\n        return director.getScheduler().getTimeScale();\r\n    }\r\n\r\n    /**信息打印 */\r\n    Information_Printing() {\r\n        console.debug(`当前平台是否是原生平台${sys.isNative}`);\r\n        console.debug(`当前平台是否是浏览器${sys.isBrowser}`);\r\n        console.debug(`当前运行平台是否是移动端平台${sys.isMobile}`);\r\n        console.debug(`当前平台字节顺序是否是小端序${sys.isLittleEndian}`);\r\n        console.debug(`当前运行平台是否是XR平台${sys.isXR}`);\r\n        this.Get_Current_Full_Time();\r\n    }\r\n\r\n\r\n    /**获取当前时间戳 */\r\n    Get_Timestamp(): number {\r\n        return Date.now();\r\n    }\r\n    /** 获取当前时间的 Unix 时间戳（秒） */\r\n    Get_Unix_Timestamp(): number {\r\n        return Math.floor(Date.now() / 1000); // 返回自1970年1月1日以来的秒数\r\n    }\r\n    /** 获取指定日期的时间戳 */\r\n    Get_Timestamp_From_Date(year, month, day): number {\r\n        const date = new Date(year, month - 1, day); // 注意月份从0开始\r\n        return date.getTime(); // 返回指定日期的时间戳\r\n    }\r\n    /** 获取两个时间戳之间的差值（毫秒） */\r\n    Get_Time_Difference(Start_Timestamp: number, Fnish_Timestamp: number): number {\r\n        return Fnish_Timestamp - Start_Timestamp; // 返回时间差\r\n    }\r\n    /** 获取当前年份 */\r\n    Get_Current_Year(): number {\r\n        return new Date().getFullYear(); // 返回当前年份\r\n    }\r\n    /** 获取当前月份 */\r\n    Get_Current_Month(): number {\r\n        return new Date().getMonth() + 1; // 返回当前月份\r\n    }\r\n    /** 获取当前日期 */\r\n    Get_Current_Date(): number {\r\n        return new Date().getDate();\r\n    }\r\n    /** 获取当前小时 */\r\n    Get_Current_Hour(): number {\r\n        return new Date().getHours();\r\n    }\r\n    /** 获取当前分钟 */\r\n    Get_Current_Minute(): number {\r\n        return new Date().getMinutes();\r\n    }\r\n    /** 获取当前秒 */\r\n    Get_Current_Second(): number {\r\n        return new Date().getSeconds();\r\n    }\r\n    /** 获取当前毫秒 */\r\n    Get_Current_Millisecond(): number {\r\n        return new Date().getMilliseconds();\r\n    }\r\n    /** 获取当前星期（0-6，0表示星期天） */\r\n    Get_Current_Day(): number {\r\n        if (new Date().getDay() == 0) return 7;\r\n        return new Date().getDay();\r\n    }\r\n    /** 获取完整的当前时间（包括年月日时分秒毫秒） */\r\n    Get_Current_Full_Time(): {\r\n        Year: number;\r\n        Month: number;\r\n        Date: number;\r\n        Hour: number;\r\n        Minute: number;\r\n        Second: number;\r\n        MilliSecond: number;\r\n        Day: number;\r\n    } {\r\n        const Current_Time = {\r\n            Year: this.Get_Current_Year(),\r\n            Month: this.Get_Current_Month(),\r\n            Date: this.Get_Current_Date(),\r\n            Hour: this.Get_Current_Hour(),\r\n            Minute: this.Get_Current_Minute(),\r\n            Second: this.Get_Current_Second(),\r\n            MilliSecond: this.Get_Current_Millisecond(),\r\n            Day: this.Get_Current_Day()\r\n        };\r\n        console.debug(`${Current_Time.Year}年${Current_Time.Month}月${Current_Time.Date}日 / 星期${Current_Time.Day} / ${Current_Time.Hour}时${Current_Time.Minute}分${Current_Time.Second}秒${Current_Time.MilliSecond}`);\r\n        return Current_Time;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]}