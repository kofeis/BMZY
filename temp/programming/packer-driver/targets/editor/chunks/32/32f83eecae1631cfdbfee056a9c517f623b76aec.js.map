{"version":3,"sources":["file:///D:/Tool/Project/WoChengYuTeNiu/assets/Script/Game/GameMode/PanelMathMatch.ts"],"names":["_decorator","color","find","Label","tween","v3","Animation","Sprite","PanelTemplate","Tool_Event","Tool_Animation","Tool_UI","Tool_Other","Tool_Console","PlatformApi","ccclass","property","PanelMathMatch","Interactable","GameTime","BtnBreak","PanelFH","GameData","KeyTarget","KeyExitState","KeyExitValue","KeyShadowIndex","LastKeyIndex","ValueTarget","ValuePos","ValueTargetC","KeyShadow","OnDistance","AnimCorrectNode","AnimWrongNode","TouchNode","TipLabel","TipNode","onLoad","onEnable","IsInit","LoadPanel","GameStart","Resoure_Data","Music_Play","start","Promise","resolve","reject","BtnSetting","node","PanelTip","BtnTip","BtnTipClose","BtnTipGet","PanelVictory","PanelFail","BtnNext","BtnExit","OnBtn","Game_Script","AnimSwitch","Load_Prefab","BtnSettingCall","Sound_Play","UpdatePanelSetting","BtnBreakCall","active","BtnReStartCall","instance","shareAppMessage","MathMatchLevel","DataSet","BtnNextCall","BtnTipCall","length","PropNum","TipCall","BtnTipCloseCall","BtnTipGetCall","showVideoAd","UpdateProp","console","error","ValueNumber","i","push","Number","getChildByName","getComponent","string","undefined","log","NullGIndex","Get_Random_Int","j","Result","Obj","Get_Min_Distance_Node","worldPosition","Distance","Num","Index","warn","Set_Color_Label","TipStart","indexOf","IsExit","Arr_Check_Index","Key","Value","Temp","ColorOff","ColorOn","Tween_Stop_Target","scale","angle","Set_SpriteFrame","Load_SpriteFrame","Node_Index_Set","OriginalNode","OriginalLastKeyIndex","CurrentLastKeyIndex","Arr_Increase","KeyNodeIndexT","children","KeyNodeValueT","Set_Color_Sprite","UpdateUIValue","On_Event_TOUCH_END","ComponentLabel","Timer","GameFailed","Set_Btn_Event_Anim","position","clone","InitData","A","F","Json","Load_Json","JsonData","OnMessage","Copy_Deep","IsHint","IsContinue","InitInterface","play","destroyAllChildren","Str","Shadow","ComponentLabel1","Off_Event_TOUCH_All","Check_Shadow","Set_Prefab_Node","On_Event_TOUCH_Drag","Event","Pos_Touch_Start","Animation_Node_Move_Time","add","to","easing","Pos_Touch_End","TipReset","OriginalNodePos","Get_Target_Node_Local_Pos","LastKeyIndexTemp","KeyNodeIndexL","KeyNodeValueL","FindAllEquationIndices_","Async_Wait","Arr_Delete","Pos","sort","a","b","valueA","parseFloat","valueB","grayscale","GameVictory","MathMatchScore","GameResult","BreakNode","SetNode","repeatForever","delay","Animation_Tip","Time","Rows","Cols","Count","CorrectIndex","WrongIndex","ResultAll","CheckResult","GetResult","expression","processed","op","left","right","result","Error","splice","toString","num","ErrorChar","ValueResult","isNaN","Indexs","Chars","Sort_Reverse","KeyResult","IsEqual","Math","floor","KeyP","ValueP","AnimReset","AnimV","AnimF","ICall","IsPlay","name","Speed","Console_Style","Font_Color","Font_Size","Font_Weight","Font_Style","Font_Family","Text_Decoration","Text_Shadow","Background_Color","Padding","Margin","Border","Border_Radius"],"mappings":"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","sourcesContent":["import { _decorator, color, Component, find, Label, Layout, log, math, Node, Prefab, Tween, tween, v3, Vec3, Animation, Sprite } from 'cc';\r\nimport { PanelTemplate } from './PanelTemplate';\r\nimport { Tool_Event } from '../../Tool/Tool_Event';\r\nimport { Tool_Animation } from '../../Tool/Tool_Animation';\r\nimport { Tool_UI } from '../../Tool/Tool_UI';\r\nimport { Tool_Other } from '../../Tool/Tool_Other';\r\nimport { Tool_Console } from '../../Tool/Tool_Console';\r\nimport { PlatformApi } from '../../Other/SDK/PlatformApi';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**数据接口 */\r\nexport interface DataMathMatch {\r\n    Level: number, Key: string[], Value: number[], Result: number[], Count: number;\r\n}\r\n\r\n@ccclass('PanelMathMatch')\r\nexport class PanelMathMatch extends PanelTemplate {\r\n\r\n    Interactable: boolean = true;\r\n    GameTime: number = 180;\r\n\r\n    /**返回按钮 */\r\n    BtnBreak: Node = null;\r\n    PanelFH: Node = null;\r\n    GameData: DataMathMatch = null;\r\n\r\n    /**有效目标 */\r\n    KeyTarget: Node[] = [];\r\n    /**存在状态 */\r\n    KeyExitState: boolean[] = [];\r\n\r\n    /**存在节点 */\r\n    KeyExitValue: Node[] = [];\r\n\r\n\r\n    /**阴影索引 */\r\n    KeyShadowIndex: number = -1;\r\n\r\n\r\n    //Value节点上一次在Key节点的位置\r\n    LastKeyIndex: number[] = [];\r\n    /**有效目标 */\r\n    ValueTarget: Node[] = [];\r\n    ValuePos: Vec3[] = [];\r\n    /**Value有效目标副本 */\r\n    ValueTargetC: Node[] = [];\r\n\r\n    KeyShadow: Prefab = null;\r\n    /**有效距离 */\r\n    OnDistance: number = 50;\r\n\r\n\r\n    /**正确动画节点 */\r\n    AnimCorrectNode: Node[] = [];\r\n    /**错误动画节点 */\r\n    AnimWrongNode: Node[] = [];\r\n    TouchNode: Node = null;\r\n\r\n    TipLabel: Node = null;\r\n    TipNode: Node = null;\r\n\r\n    async onLoad() {\r\n        super.onLoad();\r\n    }\r\n\r\n    async onEnable() {\r\n        if (!this.IsInit) {\r\n            await this.LoadPanel();\r\n        }\r\n        this.GameStart();\r\n        this.Resoure_Data.Music_Play(\"Audio/BGMGame\");\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    /**加载面板 */\r\n    async LoadPanel(): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            /**绑定关键节点 */\r\n            this.BtnSetting = find(\"BtnSetting\", this.node);\r\n\r\n            this.PanelTip = find(\"PanelTip\", this.node);\r\n            this.BtnTip = find(\"BtnTip\", this.node);\r\n            this.BtnTipClose = find(\"BtnTipClose\", this.PanelTip);\r\n            this.BtnTipGet = find(\"BtnTipGet\", this.PanelTip);\r\n\r\n            this.PanelFH = find(\"PanelFH\", this.node);\r\n\r\n\r\n            this.PanelVictory = find(\"PanelVictory\", this.node);\r\n            this.PanelFail = find(\"PanelFail\", this.node);\r\n            this.BtnNext = find(\"BtnNext\", this.PanelVictory);\r\n\r\n            // this.BtnGet = find(\"BtnGet\", this.PanelTip);\r\n            this.BtnExit = find(\"BtnExit\", this.node);\r\n            /**注册按钮事件 */\r\n            await this.OnBtn(this.Game_Script.AnimSwitch);\r\n            this.IsInit = true;\r\n            resolve();\r\n            this.KeyShadow = await this.Resoure_Data.Load_Prefab(\"Prefab/PanelMathMatch/KeyShadow\");\r\n        });\r\n    }\r\n\r\n    /**注册按钮 */\r\n    async OnBtn(AnimSwitch: boolean = false) {\r\n\r\n        /**设置按钮 */\r\n        const BtnSettingCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n            this.Game_Script.UpdatePanelSetting(true);\r\n        }\r\n\r\n        /**关闭按钮 */\r\n        const BtnBreakCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n            this.node.active = false;\r\n        }\r\n\r\n        /**重新游戏 */\r\n        const BtnReStartCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n\r\n            PlatformApi.instance.shareAppMessage(() => { });\r\n\r\n            this.Game_Script.MathMatchLevel--;\r\n            this.Game_Script.DataSet();\r\n            this.GameStart();\r\n        }\r\n        /**下一关按钮 */\r\n        const BtnNextCall = () => {\r\n            this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n            this.GameStart();\r\n        }\r\n\r\n        const BtnTipCall = async () => {\r\n            if (this.ValueTarget.length == 0) {\r\n                return;\r\n            }\r\n            this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n\r\n            if (this.Game_Script.PropNum > 0) {\r\n                TipCall();\r\n            } else {\r\n                this.PanelTip.active = true;\r\n            }\r\n\r\n\r\n\r\n        }\r\n        const BtnTipCloseCall = async () => {\r\n            this.PanelTip.active = false;\r\n        }\r\n        const BtnTipGetCall = async () => {\r\n            PlatformApi.instance.showVideoAd(() => {\r\n                this.Game_Script.PropNum += 2;\r\n                this.Game_Script.DataSet();\r\n                this.UpdateProp();\r\n                this.PanelTip.active = false;\r\n            }, () => {\r\n\r\n            })\r\n        }\r\n\r\n\r\n        /**提示 */\r\n        const TipCall = async () => {\r\n\r\n            // this.Game_Script.OnMessage(\"没有更多关卡了\");\r\n            console.error(this.ValueTarget);\r\n\r\n            if (this.TipLabel != null || this.TipNode != null) {\r\n                return;\r\n            }\r\n\r\n            //剩下的数字\r\n            let ValueNumber: number[] = [];\r\n            for (let i = 0; i < this.ValueTarget.length; i++) {\r\n                ValueNumber.push(Number(this.ValueTarget[i].getChildByName(\"Label\").getComponent(Label).string));\r\n            }\r\n            if (ValueNumber == undefined) {\r\n                this.TipLabel = null;\r\n                this.TipNode = null;\r\n                return;\r\n            }\r\n\r\n            this.Game_Script.PropNum--;\r\n            this.Game_Script.DataSet();\r\n            this.UpdateProp();\r\n\r\n\r\n\r\n            console.log(\"剩下的数字\", ValueNumber);\r\n\r\n            let NullGIndex = Tool_Other.instance.Get_Random_Int(0, ValueNumber.length - 1);\r\n\r\n            //索引\r\n            console.log(\"V索引\", NullGIndex);\r\n            //答案\r\n            console.log(\"答案\", ValueNumber[NullGIndex]);\r\n\r\n            for (let j = 0; j < this.GameData.Result.length; j++) {\r\n                //如何是正确答案\r\n                if (this.GameData.Result[j] == ValueNumber[NullGIndex]) {\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.KeyTarget[j].worldPosition, this.ValueTargetC);\r\n                    if (Obj.Distance < this.OnDistance) {\r\n                        let Num = Number(this.ValueTargetC[Obj.Index].getChildByName(\"Label\").getComponent(Label).string);\r\n                        console.warn(\"当前答案\", Num);\r\n                        if (Num == ValueNumber[NullGIndex]) {\r\n                            continue;\r\n                        } else {\r\n                            this.TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\r\n                            this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\r\n                            Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\r\n                            console.error(\"K索引\", j);\r\n                            console.error(Obj);\r\n                            this.TipNode = this.ValueTarget[NullGIndex];\r\n                            this.TipStart();\r\n                            let TouchNode = this.ValueTargetC[Obj.Index];\r\n                            Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                            let i = this.ValueTarget.indexOf(TouchNode);\r\n                            let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                            let Key = find(\"Key\", this.node);\r\n                            let Value = find(\"Value\", this.node);\r\n                            let Temp = find(\"Temp\", this.node);\r\n                            let ColorOff: math.Color = color(255, 255, 155, 255);\r\n                            let ColorOn: math.Color = color(155, 255, 155, 255);\r\n                            Tool_Animation.instance.Tween_Stop_Target(TouchNode);\r\n                            TouchNode.scale = v3(1, 1, 1);\r\n                            TouchNode.angle = 0;\r\n                            Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                            Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n                            Tool_UI.instance.Node_Index_Set(TouchNode, -1);\r\n\r\n                            // 1. 获取原节点（当前占用目标位置的节点）\r\n                            const OriginalNode = this.KeyExitValue[Obj.Index];\r\n                            // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\r\n                            //原上次索引\r\n                            let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\r\n                            //现上次索引\r\n                            let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\r\n                            // console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\r\n                            // console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                            this.TipStart();\r\n                            // console.log(\"是否存在\", IsExit);\r\n                            if (!IsExit) {\r\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\r\n                                //题目节点的索引\r\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                                let KeyNodeValueT: string = \"N\";\r\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                                // console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                                // console.log(this.GameData);\r\n                                if (this.LastKeyIndex[i] != null) {\r\n                                    this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                                    this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                                }\r\n                                // 重置当前目标位置的状态（如果之前已被占用）\r\n                                if (this.KeyExitState[Obj.Index]) {\r\n                                    this.KeyExitState[Obj.Index] = false;\r\n                                    this.KeyExitValue[Obj.Index] = null;\r\n                                    Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                                }\r\n                                this.LastKeyIndex[i] = null;\r\n                            }\r\n                            this.UpdateUIValue();\r\n                            return;\r\n                        }\r\n\r\n                    } else {\r\n                        this.TipLabel = this.KeyTarget[j].getChildByName(\"Label\");\r\n                        this.TipLabel.getComponent(Label).string = ValueNumber[NullGIndex] + \"\";\r\n                        Tool_UI.instance.Set_Color_Label(this.TipLabel, color(0, 155, 0, 255));\r\n                        // console.error(\"K索引\", j);\r\n                        // console.error(Obj);\r\n                        this.TipNode = this.ValueTarget[NullGIndex];\r\n                        this.TipStart();\r\n                        return\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        /**设置按钮事件 */\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting, BtnSettingCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, BtnTipCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipClose, BtnTipCloseCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnTipGet, BtnTipGetCall);\r\n\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnNext, BtnNextCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.BtnExit, BtnBreakCall);\r\n\r\n\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnNext\"), BtnNextCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnReStart\"), BtnReStartCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnNext\"), BtnNextCall);\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnBreak\"), BtnBreakCall);\r\n\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"Btn\"), () => {\r\n\r\n            PlatformApi.instance.showVideoAd(() => {\r\n                this.PanelFH.active = false;\r\n                this.GameTime = 180;\r\n\r\n                let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\r\n                this.Game_Script.Timer(ComponentLabel, this.GameTime, () => {\r\n                    this.PanelFH.active = true;\r\n                }, \"S\");\r\n            }, () => {\r\n\r\n            })\r\n\r\n\r\n        });\r\n        Tool_Event.instance.On_Event_TOUCH_END(this.PanelFH.getChildByName(\"BtnClose\"), () => {\r\n            this.PanelFH.active = false;\r\n            this.GameFailed();\r\n        });\r\n\r\n        /**设置按钮动画 */\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipClose, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTipGet, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnNext, AnimSwitch);\r\n\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.BtnExit, AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnNext\"), AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\r\n\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFH.getChildByName(\"Btn\"), AnimSwitch);\r\n        Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBreak\"), AnimSwitch);\r\n\r\n\r\n        let Key = find(\"Key\", this.node);\r\n        let Value = find(\"Value\", this.node);\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            this.ValuePos.push(Value.children[i].position.clone());\r\n        }\r\n    }\r\n\r\n\r\n    /**初始化数据 */\r\n    async InitData() {\r\n        console.log(\"初始化数据\");\r\n        /**注册按钮事件 */\r\n        // await this.OnBtn(this.Game_Script.AnimSwitch);\r\n        this.KeyTarget = [];\r\n        this.KeyExitState = [];\r\n        this.KeyExitValue = [];\r\n\r\n        this.ValueTarget = [];\r\n        this.ValueTargetC = [];\r\n        this.LastKeyIndex = [];\r\n\r\n        this.AnimCorrectNode = [];\r\n        this.AnimWrongNode = [];\r\n\r\n        this.Interactable = true;\r\n\r\n\r\n\r\n\r\n        this.TouchNode = null;\r\n        this.TipLabel = null;\r\n        this.TipNode = null;\r\n\r\n\r\n        // this.Game_Script.MathMatchLevel = 1\r\n\r\n        let A = [\r\n            {\r\n                \"Level\": 0,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"1\", \"+\", \"N\", \"=\", \"2\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"2\", \"X\", \"N\", \"=\", \"N\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"N\", \"+\", \"2\", \"=\", \"N\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n                ],\r\n                \"Value\": [\r\n                    1, 2, 3, 4, 5\r\n                ],\r\n                \"Result\": [\r\n                    1, 2, 4, 3, 5\r\n                ],\r\n                \"Count\": 4\r\n            },\r\n            {\r\n                \"Level\": 1,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"N\", \"-\", \"5\", \"=\", \"3\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"2\", \"+\", \"N\", \"=\", \"N\", \"U\", \"8\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"=\", \"U\", \"+\", \"U\", \"+\", \"U\", \"-\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"N\", \"U\", \"2\", \"U\", \"N\", \"X\", \"4\", \"=\", \"N\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"+\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"N\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"3\", \"+\", \"7\", \"=\", \"N\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n                ],\r\n                \"Value\": [\r\n                    10, 8, 4, 1, 10, 9, 7, 6, 4, 9, 10\r\n                ],\r\n                \"Result\": [\r\n                    1, 2, 4, 3, 5\r\n                ],\r\n                \"Count\": 10\r\n            },\r\n            {\r\n                \"Level\": 2,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"N\", \"+\", \"12\", \"=\", \"14\", \"U\", \"N\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"+\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"N\", \"U\", \"N\", \"X\", \"4\", \"=\", \"16\", \"U\", \"N\",\r\n                    \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"-\", \"U\", \"=\", \"U\", \"-\",\r\n                    \"U\", \"U\", \"5\", \"-\", \"N\", \"=\", \"N\", \"U\", \"18\", \"U\", \"8\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"+\", \"U\", \"=\", \"U\", \"U\", \"U\", \"=\",\r\n                    \"N\", \"+\", \"1\", \"=\", \"3\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\",\r\n                    \"+\", \"U\", \"+\", \"U\", \"=\", \"U\", \"U\", \"U\", \"-\", \"U\", \"U\",\r\n                    \"N\", \"/\", \"N\", \"=\", \"7\", \"U\", \"N\", \"+\", \"1\", \"=\", \"13\",\r\n                    \"=\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\",\r\n                    \"N\", \"U\", \"N\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\", \"U\", \"U\"\r\n                ],\r\n                \"Value\": [1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 9, 12, 14, 15, 16, 16],\r\n                \"Result\": [1, 2, 4, 3, 5],\r\n                \"Count\": 16\r\n            },\r\n            {\r\n                \"Level\": 3,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"+\", \"U\", \"/\",\r\n                    \"N\", \"+\", \"12\", \"=\", \"N\", \"U\", \"21\", \"-\", \"N\", \"=\", \"19\",\r\n                    \"-\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"=\",\r\n                    \"1\", \"U\", \"N\", \"U\", \"N\", \"-\", \"1\", \"=\", \"N\", \"U\", \"N\",\r\n                    \"=\", \"U\", \"X\", \"U\", \"-\", \"U\", \"+\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"N\", \"-\", \"N\", \"=\", \"3\", \"U\", \"2\", \"X\", \"2\", \"=\", \"N\",\r\n                    \"U\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"+\", \"U\", \"+\",\r\n                    \"N\", \"-\", \"20\", \"=\", \"2\", \"U\", \"N\", \"X\", \"N\", \"=\", \"18\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"=\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"7\", \"+\", \"1\", \"=\", \"N\", \"U\", \"N\"\r\n                ],\r\n                \"Value\": [1, 6, 4, 8, 4, 2, 21, 22, 22, 9, 21, 3, 2, 5, 8, 5, 4, 19],\r\n                \"Result\": [1, 2, 4, 3, 5],\r\n                \"Count\": 17\r\n            },\r\n            {\r\n                \"Level\": 4,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"N\", \"+\", \"N\", \"=\", \"36\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"-\", \"U\",\r\n                    \"U\", \"36\", \"U\", \"N\", \"U\", \"19\", \"-\", \"N\", \"=\", \"N\", \"U\",\r\n                    \"U\", \"-\", \"U\", \"-\", \"U\", \"U\", \"U\", \"-\", \"U\", \"=\", \"U\",\r\n                    \"U\", \"N\", \"+\", \"27\", \"=\", \"N\", \"U\", \"N\", \"U\", \"35\", \"U\",\r\n                    \"U\", \"=\", \"U\", \"=\", \"U\", \"+\", \"U\", \"=\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"N\", \"U\", \"4\", \"+\", \"N\", \"=\", \"7\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"29\", \"+\", \"N\", \"=\", \"N\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n                ],\r\n                \"Value\": [31, 8, 10, 28, 11, 9, 3, 1, 27, 39, 36, 18],\r\n                \"Result\": [1, 2, 4, 3, 5],\r\n                \"Count\": 10\r\n            },\r\n            {\r\n                \"Level\": 5,\r\n                \"Key\": [\r\n                    \"35\", \"-\", \"15\", \"=\", \"N\", \"U\", \"N\", \"-\", \"20\", \"=\", \"19\",\r\n                    \"/\", \"U\", \"U\", \"U\", \"-\", \"U\", \"U\", \"U\", \"/\", \"U\", \"U\",\r\n                    \"5\", \"U\", \"U\", \"U\", \"N\", \"+\", \"1\", \"=\", \"4\", \"U\", \"U\",\r\n                    \"=\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\",\r\n                    \"N\", \"U\", \"43\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\", \"U\", \"N\",\r\n                    \"U\", \"U\", \"-\", \"U\", \"U\", \"U\", \"+\", \"U\", \"U\", \"U\", \"+\",\r\n                    \"16\", \"U\", \"N\", \"U\", \"N\", \"U\", \"N\", \"/\", \"N\", \"=\", \"7\",\r\n                    \"-\", \"U\", \"=\", \"U\", \"/\", \"U\", \"=\", \"U\", \"+\", \"U\", \"=\",\r\n                    \"N\", \"U\", \"40\", \"+\", \"N\", \"=\", \"N\", \"U\", \"17\", \"U\", \"29\",\r\n                    \"=\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\",\r\n                    \"N\", \"+\", \"N\", \"=\", \"N\", \"U\", \"35\", \"-\", \"N\", \"=\", \"N\"\r\n                ],\r\n                \"Value\": [47, 12, 7, 3, 17, 39, 22, 3, 1, 28, 7, 4, 5, 35, 3, 13, 13, 20, 22, 5],\r\n                \"Result\": [1, 2, 4, 3, 5],\r\n                \"Count\": 0\r\n            },\r\n            {\r\n                \"Level\": 6,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"19\", \"+\", \"N\", \"=\", \"N\", \"U\", \"22\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"-\", \"U\", \"U\", \"U\", \"+\",\r\n                    \"U\", \"U\", \"N\", \"+\", \"N\", \"=\", \"N\", \"U\", \"U\", \"U\", \"15\",\r\n                    \"U\", \"U\", \"+\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"=\",\r\n                    \"N\", \"+\", \"3\", \"=\", \"21\", \"U\", \"N\", \"+\", \"33\", \"=\", \"N\",\r\n                    \"+\", \"U\", \"=\", \"U\", \"+\", \"U\", \"U\", \"U\", \"+\", \"U\", \"U\",\r\n                    \"N\", \"+\", \"N\", \"=\", \"N\", \"U\", \"N\", \"+\", \"19\", \"=\", \"45\",\r\n                    \"=\", \"U\", \"U\", \"U\", \"=\", \"U\", \"+\", \"U\", \"=\", \"U\", \"+\",\r\n                    \"19\", \"U\", \"U\", \"U\", \"N\", \"-\", \"N\", \"=\", \"N\", \"U\", \"N\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"=\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"N\", \"+\", \"N\", \"=\", \"54\", \"U\", \"60\"\r\n                ],\r\n                \"Value\": [37, 20, 35, 39, 1, 52, 4, 37, 18, 26, 38, 41, 8, 2, 15, 60, 34, 60],\r\n                \"Result\": [1, 2, 4, 3, 5],\r\n                \"Count\": 0\r\n            },\r\n            {\r\n                \"Level\": 7,\r\n                \"Key\": [\r\n                    \"N\", \"-\", \"17\", \"=\", \"N\", \"U\", \"54\", \"-\", \"N\", \"=\", \"N\",\r\n                    \"U\", \"U\", \"X\", \"U\", \"+\", \"U\", \"+\", \"U\", \"+\", \"U\", \"U\",\r\n                    \"35\", \"+\", \"N\", \"=\", \"36\", \"U\", \"12\", \"/\", \"N\", \"=\", \"N\",\r\n                    \"U\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"+\",\r\n                    \"N\", \"+\", \"N\", \"=\", \"N\", \"U\", \"N\", \"/\", \"N\", \"=\", \"33\",\r\n                    \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\",\r\n                    \"N\", \"+\", \"9\", \"=\", \"N\", \"U\", \"N\", \"-\", \"N\", \"=\", \"45\",\r\n                    \"=\", \"U\", \"X\", \"U\", \"+\", \"U\", \"-\", \"U\", \"-\", \"U\", \"U\",\r\n                    \"70\", \"U\", \"N\", \"-\", \"N\", \"=\", \"1\", \"U\", \"N\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"=\", \"U\", \"U\",\r\n                    \"10\", \"+\", \"N\", \"=\", \"N\", \"U\", \"N\", \"+\", \"N\", \"=\", \"N\"\r\n                ],\r\n                \"Value\": [13, 26, 2, 2, 44, 25, 3, 27, 63, 37, 35, 5, 17, 61, 67, 1, 66, 1, 12, 1, 42, 62, 53, 18],\r\n                \"Result\": [],\r\n                \"Count\": 0\r\n            },\r\n            {\r\n                \"Level\": 8,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"44\", \"+\", \"8\", \"=\", \"N\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"+\", \"U\", \"-\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"52\", \"+\", \"6\", \"=\", \"N\", \"U\", \"13\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"=\", \"U\",\r\n                    \"U\", \"5\", \"U\", \"N\", \"+\", \"N\", \"=\", \"66\", \"U\", \"N\", \"U\",\r\n                    \"U\", \"+\", \"U\", \"-\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"N\", \"U\", \"5\", \"X\", \"N\", \"=\", \"N\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"=\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"9\", \"+\", \"N\", \"=\", \"N\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n                ],\r\n                \"Value\": [2, 64, 3, 39, 52, 59, 15, 68, 4, 58],\r\n                \"Result\": [],\r\n                \"Count\": 0\r\n            },\r\n            {\r\n                \"Level\": 9,\r\n                \"Key\": [\r\n                    \"U\", \"U\", \"N\", \"+\", \"N\", \"=\", \"64\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"U\", \"U\", \"/\", \"U\", \"U\", \"U\", \"-\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"N\", \"/\", \"N\", \"=\", \"1\", \"U\", \"32\", \"+\", \"N\", \"=\", \"42\",\r\n                    \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\",\r\n                    \"12\", \"U\", \"U\", \"U\", \"U\", \"=\", \"N\", \"U\", \"64\", \"U\", \"U\",\r\n                    \"=\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"-\", \"U\", \"U\",\r\n                    \"N\", \"+\", \"3\", \"U\", \"U\", \"U\", \"U\", \"U\", \"3\", \"U\", \"N\",\r\n                    \"U\", \"U\", \"+\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\", \"U\", \"-\",\r\n                    \"U\", \"U\", \"37\", \"U\", \"56\", \"+\", \"5\", \"=\", \"N\", \"U\", \"N\",\r\n                    \"U\", \"U\", \"=\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"=\",\r\n                    \"N\", \"+\", \"N\", \"=\", \"54\", \"U\", \"N\", \"+\", \"5\", \"=\", \"N\"\r\n                ],\r\n                \"Value\": [\r\n                    29, 40, 16, 25, 25, 50, 34, 14, 32, 14, 34, 37, 61, 10, 40, 37, 3, 2\r\n                ],\r\n                \"Result\": [],\r\n                \"Count\": 0\r\n            }\r\n        ]\r\n\r\n\r\n\r\n        let F = {\r\n            \"Level\": 6,\r\n            \"Key\": [\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\",\r\n                \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\", \"U\"\r\n            ],\r\n            \"Value\": [],\r\n            \"Result\": [],\r\n            \"Count\": 0\r\n        }\r\n\r\n\r\n        const Json = await this.Resoure_Data.Load_Json(\"Json/mathmatch\");\r\n        const JsonData = Json[\"Data\"];\r\n        console.log(JsonData);\r\n\r\n        this.GameData = null;\r\n        if (this.Game_Script.MathMatchLevel >= JsonData.length) {\r\n            this.Game_Script.OnMessage(\"没有更多关卡了\");\r\n            this.GameData = this.Resoure_Data.Copy_Deep(JsonData[JsonData.length - 1]);\r\n        } else {\r\n            this.GameData = this.Resoure_Data.Copy_Deep(JsonData[this.Game_Script.MathMatchLevel]);\r\n        }\r\n        console.log(this.GameData);\r\n\r\n        this.Game_Script.IsHint = false;\r\n        this.Game_Script.IsContinue = false;\r\n\r\n        let ComponentLabel = find(\"Title/Bgg/Timer\", this.node).getComponent(Label);\r\n        this.Game_Script.Timer(ComponentLabel, this.GameTime, () => {\r\n            console.log(\"失败\");\r\n\r\n            this.PanelFH.active = true;\r\n\r\n        }, \"S\");\r\n\r\n    }\r\n\r\n    /**初始化界面 */\r\n    async InitInterface() {\r\n\r\n        if (this.Game_Script.MathMatchLevel == 0) {\r\n            find(\"Hand\", this.node).getComponent(Animation).play();\r\n            this.Game_Script.OnMessage(\"将需要的数字拖动到空格上\");\r\n        }\r\n\r\n        this.PanelVictory.active = false;\r\n        this.PanelFail.active = false;\r\n        this.PanelTip.active = false;\r\n        this.PanelFH.active = false;\r\n        this.UpdateProp();\r\n        this.node.getChildByName(\"Title\").getChildByName(\"Leves\").getComponent(Label).string = `数独游戏·第${this.Game_Script.MathMatchLevel + 1}关`;\r\n        find(\"Temp\", this.node).destroyAllChildren();\r\n        let Key = find(\"Key\", this.node);\r\n        let Value = find(\"Value\", this.node);\r\n\r\n        for (let i = 0; i < Key.children.length; i++) {\r\n            Key.children[i].active = true;\r\n            Tool_UI.instance.Set_Color_Sprite(Key.children[i].getChildByName(\"Bg\").getChildByName(\"Sp\"), color(255, 255, 155, 255));\r\n        }\r\n\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            Value.children[i].active = true;\r\n            Value.children[i].scale = v3(1, 1, 1);\r\n            Value.children[i].angle = 0;\r\n\r\n            Tool_UI.instance.Set_SpriteFrame(Value.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n            Tool_UI.instance.Set_Color_Label(Value.children[i].getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n        }\r\n\r\n        if (this.GameData == null) {\r\n            console.log(\"配置错误\");\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < Key.children.length; i++) {\r\n            switch (this.GameData.Key[i]) {\r\n                case \"U\":\r\n                    Key.children[i].active = false;\r\n                    break;\r\n                case \"N\":\r\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = \"\";\r\n                    this.KeyTarget.push(Key.children[i]);\r\n                    this.KeyExitState.push(false);\r\n                    this.KeyExitValue.push(null);\r\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                    break;\r\n                default:\r\n                    let Str: string = \"\";\r\n                    switch (this.GameData.Key[i]) {\r\n                        // case \"/\":\r\n                        //     Str = \"÷\";\r\n                        // break;\r\n                        case \"X\":\r\n                            Str = \"x\";\r\n                            break;\r\n                        default:\r\n                            Str = this.GameData.Key[i];\r\n                            break;\r\n                    }\r\n                    Key.children[i].getChildByName(\"Label\").getComponent(Label).string = Str\r\n\r\n                    Tool_UI.instance.Set_SpriteFrame(Key.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let Temp = find(\"Temp\", this.node);\r\n        let ColorOff: math.Color = color(255, 255, 155, 255);\r\n        let ColorOn: math.Color = color(155, 255, 155, 255);\r\n\r\n\r\n        for (let i = 0; i < Value.children.length; i++) {\r\n            const Shadow = Value.children[i].getChildByName(\"Shadow\");\r\n            const ComponentLabel1 = Value.children[i].getChildByName(\"Label\").getComponent(Label);\r\n            Shadow.active = false;\r\n            Value.children[i].active = i < this.GameData.Value.length ? true : false;\r\n            if (Value.children[i].active) {\r\n                this.ValueTarget.push(Value.children[i]);\r\n                this.ValueTargetC.push(Value.children[i]);\r\n                this.LastKeyIndex.push(null);\r\n                Value.children[i].position = this.ValuePos[i];\r\n                ComponentLabel1.string = this.GameData.Value[i] + \"\";\r\n\r\n                Tool_Event.instance.Off_Event_TOUCH_All(Value.children[i]);\r\n\r\n\r\n\r\n                const TouchNode = Value.children[i];\r\n                const Shadow = TouchNode.getChildByName(\"Shadow\");\r\n                const ComponentLabel = TouchNode.getChildByName(\"Label\").getComponent(Label);\r\n                const Check_Shadow = () => {\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        if (this.KeyShadowIndex == Obj.Index) {\r\n                            return;\r\n                        }\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = Obj.Index;\r\n                        Tool_UI.instance.Set_Prefab_Node(this.KeyShadow, Temp, this.KeyTarget[Obj.Index], \"\")\r\n                    } else {\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = -1;\r\n                    }\r\n                }\r\n\r\n\r\n                Tool_Event.instance.On_Event_TOUCH_Drag(TouchNode, () => this.Interactable, async (Event, Pos_Touch_Start) => {\r\n                    if (this.GameData == null) {\r\n                        this.Interactable = false;\r\n                        console.log(\"配置错误\");\r\n                        return;\r\n                    }\r\n                    this.TouchNode = TouchNode;\r\n                    console.log(this.LastKeyIndex, i, this.ValueTargetC.indexOf(TouchNode));\r\n                    /**触摸开始回调 */\r\n\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n                    Tool_Animation.instance.Tween_Stop_Target(this.KeyTarget[Obj.Index]);\r\n                    this.KeyTarget[Obj.Index].scale = v3(1, 1, 1);\r\n                    this.KeyTarget[Obj.Index].angle = 0;\r\n                    Tool_Animation.instance.Tween_Stop_Target(TouchNode);\r\n                    TouchNode.scale = v3(1, 1, 1);\r\n                    TouchNode.angle = 0;\r\n                    Tool_UI.instance.Set_SpriteFrame(TouchNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                    Tool_UI.instance.Set_Color_Label(TouchNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                    Tool_UI.instance.Node_Index_Set(TouchNode, -1);\r\n                    Shadow.active = true;\r\n                    Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos_Touch_Start.clone().add(v3(0, 25, 0)), 0.02, null, \"smooth\");\r\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                    if (!IsExit) {\r\n                        tween(TouchNode)\r\n                            .to(0.25, { scale: v3(1, 1, 1) }, { easing: \"backOut\" })\r\n                            .start();\r\n                    }\r\n                    Check_Shadow();\r\n                }, (Event, Pos_Touch_Start) => {\r\n                    /**触摸移动回调 */\r\n                    Check_Shadow();\r\n                }, async (Event, Pos_Touch_Start, Pos_Touch_End) => {\r\n                    /**触摸结束回调 */\r\n                    Shadow.active = false;\r\n                    let IsExit: boolean = Tool_UI.instance.Arr_Check_Index(this.ValueTarget, TouchNode) == -1 ? false : true;\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(TouchNode.worldPosition, this.KeyTarget);\r\n\r\n                    // 1. 获取原节点（当前占用目标位置的节点）\r\n                    const OriginalNode = this.KeyExitValue[Obj.Index];\r\n                    // 2. 将原节点移回默认位置（或 LastKeyIndex 的位置）\r\n                    //原上次索引\r\n                    let OriginalLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, OriginalNode)\r\n                    //现上次索引\r\n                    let CurrentLastKeyIndex = Tool_UI.instance.Arr_Check_Index(this.ValueTargetC, TouchNode)\r\n                    console.log(OriginalLastKeyIndex, CurrentLastKeyIndex);\r\n                    console.log(\"原上次索引\", this.LastKeyIndex[OriginalLastKeyIndex], \"现上次索引\", this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n\r\n                        this.TipReset();\r\n\r\n                        //目标位置被占用\r\n                        if (this.KeyExitState[Obj.Index] && this.LastKeyIndex[i] != Obj.Index) {\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                this.KeyTarget[Obj.Index].active = false;\r\n                                this.KeyTarget[this.LastKeyIndex[i]].active = false;\r\n                                // 将原节点移动到 LastKeyIndex 的位置\r\n                                const OriginalNodePos = Tool_UI.instance.Get_Target_Node_Local_Pos(OriginalNode, this.KeyTarget[this.LastKeyIndex[i]]);\r\n                                this.Interactable = false;\r\n                                Tool_Animation.instance.Animation_Node_Move_Time(OriginalNode, OriginalNodePos, 0.25, async () => {\r\n                                    this.Interactable = true;\r\n                                    this.KeyTarget[Obj.Index].active = true;\r\n                                    this.KeyTarget[this.LastKeyIndex[i]].active = true;\r\n                                    //交换索引\r\n\r\n                                    console.log(this.LastKeyIndex, 1);\r\n                                    console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                                    console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n                                    const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                                    this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                                    this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                                    //交换节点的索引\r\n                                    let KeyNodeIndexL = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[OriginalLastKeyIndex]]);\r\n                                    let KeyNodeValueL = OriginalNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                    //题目节点的索引\r\n                                    let KeyNodeIndexT = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                                    let KeyNodeValueT = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                    this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n                                    this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n\r\n                                    console.log(\"交换节点的索引\", KeyNodeIndexL, \"交换节点的数值\", KeyNodeValueL);\r\n                                    console.log(\"触摸节点的索引\", KeyNodeIndexT, \"触摸节点的数值\", KeyNodeValueT);\r\n                                    console.log(this.GameData);\r\n\r\n                                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n\r\n\r\n                                    Tool_Animation.instance.Tween_Stop_Target(OriginalNode);\r\n                                    OriginalNode.scale = v3(0.9, 0.9, 1);\r\n                                    OriginalNode.angle = 0;\r\n                                    Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                    Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                                    // console.error(OriginalNode, TouchNode);\r\n\r\n                                    await Tool_Animation.instance.Async_Wait(0.05);\r\n                                    this.TouchNode = OriginalNode;\r\n                                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n                                }, \"smooth\");\r\n                                // 更新原节点的状态为占用 LastKeyIndex\r\n                                this.KeyExitState[this.LastKeyIndex[i]] = true;\r\n                                this.KeyExitValue[this.LastKeyIndex[i]] = OriginalNode;\r\n                            } else {\r\n                                // 如果 LastKeyIndex 为 null，将原节点放回 ValueTarget 池\r\n                                Tool_UI.instance.Arr_Increase(this.ValueTarget, OriginalNode);\r\n\r\n                                Tool_UI.instance.Set_SpriteFrame(OriginalNode.getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                Tool_UI.instance.Set_Color_Label(OriginalNode.getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n\r\n                                //交换索引\r\n                                console.log(this.LastKeyIndex, 2);\r\n                                console.error(OriginalLastKeyIndex, this.LastKeyIndex[OriginalLastKeyIndex]);\r\n                                console.error(CurrentLastKeyIndex, this.LastKeyIndex[CurrentLastKeyIndex]);\r\n\r\n\r\n                                const LastKeyIndexTemp = this.LastKeyIndex[OriginalLastKeyIndex];\r\n                                this.LastKeyIndex[OriginalLastKeyIndex] = this.LastKeyIndex[CurrentLastKeyIndex];\r\n                                this.LastKeyIndex[CurrentLastKeyIndex] = LastKeyIndexTemp;\r\n\r\n                                //题目节点的索引\r\n                                let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                                let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                                this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                                console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                                console.log(this.GameData);\r\n\r\n\r\n                                this.FindAllEquationIndices_(this.GameData.Key, 0.2);\r\n                            }\r\n                            // 3. 将新节点(TouchNode)放置到目标位置（Obj.Index）\r\n                            this.KeyExitState[Obj.Index] = true;\r\n                            this.KeyExitValue[Obj.Index] = TouchNode;\r\n                            // 4. 更新颜色和临时状态\r\n                            Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                            }\r\n                            //放置成功 移除节点\r\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                            Temp.destroyAllChildren();\r\n                            this.KeyShadowIndex = -1;\r\n                            // 6. 更新 UI\r\n                            this.UpdateUIValue();\r\n                            let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                            await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0.2, null, \"smooth\");\r\n                            tween(TouchNode)\r\n                                .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                                .start();\r\n                            return;\r\n                        }\r\n\r\n                        if (IsExit) {\r\n                            //放置成功 移除节点\r\n                            Tool_UI.instance.Arr_Delete(this.ValueTarget, TouchNode);\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n                            this.UpdateUIValue();\r\n                        } else {\r\n\r\n\r\n                            let KeyNodeIndexL: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            if (KeyNodeIndexL == -1) {\r\n                                console.log(CurrentLastKeyIndex);//有值\r\n                                console.log(this.LastKeyIndex[CurrentLastKeyIndex]);\r\n                                console.log(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            }\r\n\r\n                            let KeyNodeValueL: string = \"N\";\r\n                            this.GameData.Key[KeyNodeIndexL] = KeyNodeValueL;\r\n\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[Obj.Index]);\r\n                            let KeyNodeValueT: string = TouchNode.getChildByName(\"Label\").getComponent(Label).string;\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n\r\n                            console.log(\"赋值的索引\", KeyNodeIndexL, \"赋值的数据\", KeyNodeValueL);\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n\r\n                        }\r\n                        this.KeyExitState[Obj.Index] = true;\r\n                        this.KeyExitValue[Obj.Index] = TouchNode;\r\n                        if (this.LastKeyIndex[i] != null && this.LastKeyIndex[i] != Obj.Index) {\r\n                            this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                            this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                        }\r\n                        //改变Key背景颜色\r\n                        this.LastKeyIndex[i] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                        this.LastKeyIndex[i] = Obj.Index;\r\n\r\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] != null && Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                        // this.LastKeyIndex[this.ValueTargetC.indexOf(TouchNode)] = Obj.Index;\r\n\r\n                        console.error(Obj.Index, this.LastKeyIndex[i], i, Value.children.indexOf(TouchNode));\r\n\r\n                        Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOn);\r\n                        Temp.destroyAllChildren();\r\n                        this.KeyShadowIndex = -1;\r\n                        let Pos = Tool_UI.instance.Get_Target_Node_Local_Pos(TouchNode, this.KeyTarget[Obj.Index]);\r\n                        await Tool_Animation.instance.Animation_Node_Move_Time(TouchNode, Pos, 0, null, \"smooth\");\r\n                        tween(TouchNode)\r\n                            .to(0.25, { scale: v3(0.9, 0.9, 1) }, { easing: \"backOut\" })\r\n                            .start();\r\n                    } else {\r\n                        this.TipStart();\r\n                        if (!IsExit) {\r\n                            Tool_UI.instance.Arr_Increase(this.ValueTarget, TouchNode);\r\n\r\n                            //题目节点的索引\r\n                            let KeyNodeIndexT: number = Key.children.indexOf(this.KeyTarget[this.LastKeyIndex[CurrentLastKeyIndex]]);\r\n                            let KeyNodeValueT: string = \"N\";\r\n                            this.GameData.Key[KeyNodeIndexT] = KeyNodeValueT;\r\n                            console.log(\"赋值的索引\", KeyNodeIndexT, \"赋值的数据\", KeyNodeValueT);\r\n                            console.log(this.GameData);\r\n\r\n                            if (this.LastKeyIndex[i] != null) {\r\n                                this.KeyExitState[this.LastKeyIndex[i]] = false;\r\n                                this.KeyExitValue[this.LastKeyIndex[i]] = null;\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[this.LastKeyIndex[i]].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                            }\r\n                            // 重置当前目标位置的状态（如果之前已被占用）\r\n                            if (this.KeyExitState[Obj.Index]) {\r\n                                this.KeyExitState[Obj.Index] = false;\r\n                                this.KeyExitValue[Obj.Index] = null;\r\n                                Tool_UI.instance.Set_Color_Sprite(this.KeyTarget[Obj.Index].getChildByName(\"Bg\").getChildByName(\"Sp\"), ColorOff);\r\n                            }\r\n\r\n\r\n                            this.LastKeyIndex[i] = null;\r\n                        }\r\n                        this.UpdateUIValue();\r\n\r\n                    }\r\n                    console.log(\"this.KeyExitState\", this.KeyExitState);\r\n                    console.log(\"this.KeyExitValue\", this.KeyExitValue);\r\n                    console.log(\"this.ValueTarget\", this.ValueTarget);\r\n\r\n                    this.FindAllEquationIndices_(this.GameData.Key);\r\n\r\n\r\n                });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        this.UpdateUIValue();\r\n\r\n    }\r\n\r\n    /**刷新排序 */\r\n    UpdateUIValue() {\r\n\r\n        this.ValueTarget.sort((a, b) => {\r\n            const valueA = parseFloat(a.getChildByName(\"Label\").getComponent(Label).string);\r\n            const valueB = parseFloat(b.getChildByName(\"Label\").getComponent(Label).string);\r\n            return valueA - valueB;\r\n        });\r\n        for (let i = 0; i < this.ValueTarget.length; i++) {\r\n            this.ValueTarget[i].scale = v3(1, 1, 1);\r\n            this.ValueTarget[i].angle = 0;\r\n            Tool_Animation.instance.Animation_Node_Move_Time(this.ValueTarget[i], this.ValuePos[i], 0.2, null, \"smooth\");\r\n        }\r\n    }\r\n\r\n    async GameStart() {\r\n        this.TipReset();\r\n        await this.InitData();\r\n        await this.InitInterface();\r\n        this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\r\n    }\r\n\r\n    GameVictory() {\r\n        this.PanelVictory.active = true;\r\n        this.Game_Script.MathMatchLevel++;\r\n        this.Game_Script.MathMatchScore += this.Game_Script.IsHint ? 1 : 2;\r\n        /**保存数据 */\r\n        this.Game_Script.DataSet();\r\n        // this.Game_Script.UpdateScene();\r\n        this.Interactable = false;\r\n    }\r\n\r\n    async GameFailed() {\r\n        this.PanelFail.active = true;\r\n        this.Interactable = false;\r\n    }\r\n\r\n    GameResult() {\r\n\r\n\r\n    }\r\n\r\n\r\n    BreakNode(SetNode: Node) {\r\n\r\n    }\r\n\r\n    TipReset() {\r\n        if (this.TipLabel != null) {\r\n            this.TipLabel.getComponent(Label).string = \"\";\r\n            this.TipLabel.scale = v3(1, 1, 1);\r\n            Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\r\n            this.TipLabel = null;\r\n        }\r\n        if (this.TipNode != null) {\r\n            Tool_Animation.instance.Tween_Stop_Target(this.TipNode);\r\n            this.TipNode = null;\r\n        }\r\n    }\r\n\r\n    TipStart() {\r\n        if (this.TipNode != null && this.TipLabel != null) {\r\n            // Tool_Animation.instance.Animation_Heartbeat(this.TipLabel);\r\n\r\n            tween(this.TipLabel)\r\n                .repeatForever(\r\n                    tween()\r\n                        .to(0.2, { angle: 5 })\r\n                        .to(0.2, { angle: -10 })\r\n                        .to(0.2, { angle: 10 })\r\n                        .to(0.2, { angle: -10 })\r\n                        .to(0.2, { angle: 5 })\r\n                        .to(0.2, { angle: 0 })\r\n                        .delay(1)\r\n                )\r\n                .start()\r\n            Tool_Animation.instance.Animation_Tip(this.TipNode);\r\n        }\r\n    }\r\n\r\n    async FindAllEquationIndices_(Key: string[], Time: number = 0, Rows: number = 11, Cols: number = 11): Promise<{ CorrectIndex: number[][]; WrongIndex: number[][]; }> {\r\n\r\n        this.BtnTip.getComponent(Sprite).grayscale = this.ValueTarget.length == 0;\r\n\r\n        this.Interactable = false;\r\n        await Tool_Animation.instance.Async_Wait(Time);\r\n        let Count = 0;\r\n        const Result = {\r\n            CorrectIndex: [] as number[][],\r\n            WrongIndex: [] as number[][]\r\n        };\r\n        const ResultAll = {\r\n            CorrectIndex: [] as number[],\r\n            WrongIndex: [] as number[]\r\n        };\r\n        /**检查题目右边是否存在结果 */\r\n        function CheckResult(Index: number): number {\r\n            // return Key[Index] == \"N\" || Key[Index] == \"U\" ? null : Number(Key[Index]);\r\n            return Key[Index] == \"N\" ? null : Number(Key[Index]);\r\n        }\r\n        /**计算题目左边结果 */\r\n        function GetResult(expression: string[]): number {\r\n            // 先处理乘除法\r\n            const processed = [...expression];\r\n            if (processed.indexOf(\"N\") != -1) {\r\n                return null;\r\n            }\r\n            // 第一轮处理：乘除法\r\n            for (let i = 1; i < processed.length; i += 2) {\r\n                const op = processed[i];\r\n                if (op === \"X\" || op === \"x\" || op === \"/\") {\r\n                    const left = parseFloat(processed[i - 1]);\r\n                    const right = parseFloat(processed[i + 1]);\r\n                    let result: number;\r\n                    if (op === \"/\") {\r\n                        if (right === 0) throw new Error(\"Division by zero\");\r\n                        result = left / right;\r\n                    } else {\r\n                        result = left * right;\r\n                    }\r\n                    // 替换这三个元素为计算结果\r\n                    processed.splice(i - 1, 3, result.toString());\r\n                    i -= 2; // 因为数组长度减少了，调整索引\r\n                }\r\n            }\r\n            // 第二轮处理：加减法\r\n            let result = parseFloat(processed[0]);\r\n            for (let i = 1; i < processed.length; i += 2) {\r\n                const op = processed[i];\r\n                const num = parseFloat(processed[i + 1]);\r\n                if (op === '+') {\r\n                    result += num;\r\n                } else if (op === '-') {\r\n                    result -= num;\r\n                } else {\r\n                    throw new Error(`Unknown operator: ${op}`);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        let ErrorChar = [\"=\", \"U\"];\r\n        for (let i = 0; i < Key.length; i++) {\r\n            if (Key[i] == \"=\") {\r\n                // console.log(\"--------------------------------------\");\r\n                // console.log(\"--------------------------------------\");\r\n                // console.log(\"--------------------------------------\");\r\n                let ValueResult: number | null;\r\n                //水平方向\r\n                // console.log(\"水平方向\");\r\n\r\n                if (i % Rows != Rows - 1) {\r\n                    ValueResult = CheckResult(i + 1);//*\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != 0) {//*\r\n                            Index -= 1;//*\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + 1);//*\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        // console.log(Indexs);\r\n                        // console.log(Chars);\r\n                        // console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        // console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Math.floor(i / Rows) != Cols - 1) {\r\n                    //垂直方向\r\n                    // console.log(\"垂直方向\");\r\n                    ValueResult = CheckResult(i + Rows);\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Math.floor(Index / Rows) != 0) {\r\n                            Index -= Rows;//*\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + Rows);\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        // console.log(Indexs);\r\n                        // console.log(Chars);\r\n                        // console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        // console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i % Rows != Rows - 1 && Math.floor(i / Rows) != Cols - 1) {\r\n                    //主对角线\r\n                    ValueResult = CheckResult(i + (Rows + 1));\r\n                    // console.log(\"主对角线\");\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != 0) {\r\n                            Index -= (Rows + 1);\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + (Rows + 1));\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        console.log(Indexs);\r\n                        console.log(Chars);\r\n                        console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (i % Rows != 0 && Math.floor(i / Rows) != Cols - 1) {\r\n                    //副对角线\r\n                    // console.log(\"副对角线\");\r\n                    ValueResult = CheckResult(i + (Rows - 1));\r\n                    if (ValueResult != null && !Number.isNaN(ValueResult)) {\r\n                        let Index = i;\r\n                        let Indexs: number[] = [];\r\n                        let Chars: string[] = [];\r\n                        while (Index % Rows != (Rows - 1)) {\r\n                            Index -= (Rows - 1);\r\n                            if (ErrorChar.indexOf(Key[Index]) == -1) {\r\n                                Indexs.push(Index);\r\n                            } else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        Tool_Other.instance.Sort_Reverse(Indexs);\r\n                        for (let j = 0; j < Indexs.length; j++) {\r\n                            Chars.push(Key[Indexs[j]]);\r\n                        }\r\n                        Indexs.push(i);\r\n                        Indexs.push(i + (Rows - 1));\r\n                        let KeyResult: number = GetResult(Chars);\r\n                        let IsEqual: boolean = KeyResult == ValueResult;\r\n                        console.log(Indexs);\r\n                        console.log(Chars);\r\n                        console.log(\"ValueResult\", ValueResult, \"KeyResult\", KeyResult);\r\n                        console.log(\"是否相等\", IsEqual);\r\n                        if (IsEqual) {\r\n                            Result.CorrectIndex.push(Indexs);\r\n                            ResultAll.CorrectIndex = [...ResultAll.CorrectIndex, ...Indexs];\r\n                            Count++\r\n                        } else {\r\n                            if (KeyResult != null) {\r\n                                Result.WrongIndex.push(Indexs);\r\n                                ResultAll.WrongIndex = [...ResultAll.WrongIndex, ...Indexs];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        let KeyP = find(\"Key\", this.node);\r\n        let ValueP = find(\"Value\", this.node);\r\n\r\n        let AnimReset = async () => {\r\n            for (let i = 0; i < KeyP.children.length; i++) {\r\n                if (ResultAll.CorrectIndex.indexOf(i) == -1) {\r\n                    switch (this.GameData.Key[i]) {\r\n                        case \"N\":\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                            break;\r\n                        default:\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Tool_UI.instance.Arr_Delete(this.AnimCorrectNode, KeyP.children[i]);\r\n                }\r\n\r\n                if (ResultAll.WrongIndex.indexOf(i) == -1) {\r\n                    switch (this.GameData.Key[i]) {\r\n                        case \"N\":\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\"));\r\n                            break;\r\n                        default:\r\n                            Tool_UI.instance.Set_SpriteFrame(KeyP.children[i].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\"));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Tool_UI.instance.Arr_Delete(this.AnimWrongNode, KeyP.children[i]);\r\n                }\r\n\r\n            }\r\n\r\n            AnimV();\r\n            AnimF();\r\n\r\n        }\r\n\r\n        let AnimV = async () => {\r\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\r\n                for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                    if (this.AnimCorrectNode.indexOf(KeyP.children[Result.CorrectIndex[i][j]]) == -1) {\r\n                        this.AnimCorrectNode.push(KeyP.children[Result.CorrectIndex[i][j]]);\r\n                        Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.CorrectIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < Result.CorrectIndex.length; i++) {\r\n                let ICall = async () => {\r\n                    //上次触摸的节点在题目中\r\n                    let IsPlay = false;\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.CorrectIndex[i][j]].name) {\r\n                                IsPlay = true;\r\n                                console.log(\"AnimV\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (IsPlay) {\r\n                        for (let j = 0; j < Result.CorrectIndex[i].length; j++) {\r\n                            //题目的Value占位节点\r\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.CorrectIndex[i][j]].worldPosition, this.ValueTargetC);\r\n                            if (Obj.Distance <= this.OnDistance) {\r\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\"));\r\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(0, 155, 0, 255));\r\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\r\n                                // this.ValueTargetC[Obj.Index].scale = v3(0.9, 0.9, 1);\r\n                                tween(this.ValueTargetC[Obj.Index])\r\n                                    .to(0.1, { scale: v3(0.6, 0.6, 1) })\r\n                                    .to(0.1, { scale: v3(0.9, 0.9, 1) })\r\n                                    .start();\r\n                            }\r\n                            //题目的Key占位节点\r\n                            // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.CorrectIndex[i][j]]);\r\n                            // KeyP.children[Result.CorrectIndex[i][j]].scale = v3(1, 1, 1);\r\n                            tween(KeyP.children[Result.CorrectIndex[i][j]])\r\n                                .to(0.1, { scale: v3(0.6, 0.6, 1) })\r\n                                .to(0.1, { scale: v3(1, 1, 1) })\r\n                                .start();\r\n                            await Tool_Animation.instance.Async_Wait(0.05 * Speed);\r\n                        }\r\n                    }\r\n                }\r\n                ICall();\r\n            }\r\n        }\r\n\r\n        let AnimF = async () => {\r\n            // for (let i = 0; i < Result.WrongIndex.length; i++) {\r\n            //     for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n            //         console.error(this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]));\r\n\r\n            //         if (this.AnimWrongNode.indexOf(KeyP.children[Result.WrongIndex[i][j]]) == -1) {\r\n            //             this.AnimWrongNode.push(KeyP.children[Result.WrongIndex[i][j]]);\r\n            //             Tool_UI.instance.Set_SpriteFrame(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\r\n            //         }\r\n            //     }\r\n            // }\r\n            for (let i = 0; i < Result.WrongIndex.length; i++) {\r\n                let ICall = async () => {\r\n                    //上次触摸的节点在题目中\r\n                    let IsPlay = false;\r\n                    let Obj = Tool_Animation.instance.Get_Min_Distance_Node(this.TouchNode.worldPosition, this.KeyTarget);\r\n\r\n                    if (Obj.Distance <= this.OnDistance) {\r\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n                            if (this.KeyTarget[Obj.Index].name == KeyP.children[Result.WrongIndex[i][j]].name) {\r\n                                IsPlay = true;\r\n                                console.log(\"AnimF\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (IsPlay) {\r\n                        for (let j = 0; j < Result.WrongIndex[i].length; j++) {\r\n                            //题目的Value占位节点\r\n                            if (Number.isNaN(Number(KeyP.children[Result.WrongIndex[i][j]].getChildByName(\"Label\").getComponent(Label).string))) {\r\n                                continue;\r\n                            }\r\n                            let Obj = Tool_Animation.instance.Get_Min_Distance_Node(KeyP.children[Result.WrongIndex[i][j]].worldPosition, this.ValueTargetC);\r\n                            if (Obj.Distance <= this.OnDistance) {\r\n                                Tool_UI.instance.Set_SpriteFrame(this.ValueTargetC[Obj.Index].getChildByName(\"Bg\"), await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\"));\r\n                                Tool_UI.instance.Set_Color_Label(this.ValueTargetC[Obj.Index].getChildByName(\"Label\"), color(155, 0, 0, 255));\r\n\r\n                                // Tool_Animation.instance.Tween_Stop_Target(this.ValueTargetC[Obj.Index]);\r\n                                // Tool_Animation.instance.Tween_Stop_Target(KeyP.children[Result.WrongIndex[i][j]]);\r\n\r\n                                tween(this.ValueTargetC[Obj.Index])\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 20 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: 0 })\r\n                                    .start();\r\n                                tween(KeyP.children[Result.WrongIndex[i][j]])\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 20 })\r\n                                    .to(0.1, { angle: -20 })\r\n                                    .to(0.1, { angle: 10 })\r\n                                    .to(0.1, { angle: 0 })\r\n                                    .start();\r\n                                // tween(this.ValueTargetC[Obj.Index])\r\n                                //     .by(0.1, { scale: v3(-0.4, -0.4, 1) })\r\n                                //     .by(0.1, { scale: v3(0.4, 0.4, 1) })\r\n                                //     .start();\r\n                            }\r\n                            //题目的Key占位节点\r\n                            // tween(KeyP.children[Result.WrongIndex[i][j]])\r\n                            //     .by(0.1 * Speed, { scale: v3(-0.4, - 0.4, 1) })\r\n                            //     .by(0.1 * Speed, { scale: v3(0.4, 0.4, 1) })\r\n                            //     .start();\r\n                            // await Tool_Animation.instance.Async_Wait(0.05 * Speed);\r\n                        }\r\n                    }\r\n                }\r\n                ICall();\r\n            }\r\n        }\r\n\r\n\r\n        var Speed = 1;\r\n        await AnimReset();\r\n        await Tool_Animation.instance.Async_Wait(0.2);\r\n        this.Interactable = true;\r\n\r\n        if (Count == this.GameData.Count) {\r\n            console.log(\"胜利\");\r\n            this.GameVictory();\r\n        }\r\n        Tool_Console.instance.Console_Style(Count, {\r\n            Font_Color: 'rgba(255, 99, 71, 1)',\r\n            Font_Size: '20px',\r\n            Font_Weight: 'lighter',\r\n            Font_Style: 'normal',\r\n            Font_Family: \"'fantasy',cursive\",\r\n            Text_Decoration: 'none',\r\n            Text_Shadow: \"2px 2px 2px rgba(0, 0, 0, 0.5)\",\r\n            Background_Color: 'rgba(155, 155, 155, 0.2)',\r\n            Padding: \"10px 20px\",\r\n            Margin: \"10px auto\",\r\n            Border: \"1px dashed rgba(0, 255, 0, 1)\",\r\n            Border_Radius: \"5px\",\r\n        })\r\n        console.log(Result);\r\n\r\n        return Result;\r\n    }\r\n\r\n\r\n\r\n    UpdateProp() {\r\n\r\n        this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"Label\").getComponent(Label).string = this.Game_Script.PropNum + \"\";\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}