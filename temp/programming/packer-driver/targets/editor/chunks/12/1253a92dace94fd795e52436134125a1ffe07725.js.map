{"version":3,"sources":["file:///C:/Users/LEGION/Downloads/ZhiShangGouBuDao/assets/Script/Tool/Resoure_Data.ts"],"names":["_decorator","Component","Node","Prefab","AudioClip","director","AudioSource","sys","CCBoolean","v3","SpriteFrame","view","game","Game","assetManager","Texture2D","isValid","Material","JsonAsset","Font","AnimationClip","UITransform","Tool_Event","Tool_Other","Tool_UI","PlatformApi","ccclass","property","Scene_Change_Type","Resoure_Data","tooltip","constructor","Bundles","_Cache_Scene","_Cache_Prefab","_Cache_SpriteFrame","_Cache_Texture2D","_Cache_AudioClip","_Cache_Material","_Cache_Json","_Cache_AnimationClip","_Cache_Font","GameData","Game_Versions","Game_Mode","Is_FirstStartUp","Is_NewDay","Login_Time","Login_Days","Login_ConsecutiveDays","GameTime_Total","GameTime_Today","Save_Slot","Save_Time","Save_Data","关卡进度","关卡分数","关卡时间","关卡星级","Vibration_Switch","Sound_Switch","Sound_Volume","Sound_AudioSource","Music_Switch","Music_Volume","Music_AudioSource","Sound_Long_AudioSource","FrameRate","LastTime","FrameRate_Schedule","Time_Current","performance","now","Time_Elapsed","currentFrameRate","console","debug","toFixed","Check_FrameRate","unschedule","schedule","update","Dt","onEnable","onDisable","onDestroy","onLoad","log","Director_AddPersistRootNode","node","Game_FrameRate_Set","Director_Scheduler_TimeScale_Set","window","addEventListener","Event","Screen_Update","Screen_Width","innerWidth","Screen_Height","innerHeight","Visible_Size","getVisibleSize","Visible_Width","width","Visible_Height","height","error","instance","Event_Dispatch","on","EVENT_HIDE","EVENT_SHOW","document","visibilityState","addComponent","parent","start","Is_First_StartUp","Information_Printing","Load_Bundle","Load_SpriteFrame","Load_Json","Load_Prefab","First_Start","Data_Get","Get_Type_Is_Abnormal","Data_Set","Fetch_Data","Url","isWechatPlatform","Fetch_DataWX","Response","fetch","Data","json","Update_Data","Update_DataWX","method","headers","body","JSON","stringify","ok","Error","status","res","Promise","resolve","reject","wx","request","url","success","data","fail","err","header","statusCode","Data_Name","localStorage","setItem","e","Default_Value","Data_Value","Data_Raw","getItem","parse","undefined","Data_Delete","removeItem","Data_Is_Exist","Data_Update","New_Data","Existing_Data","Updated_Data","Data_Get_All_Keys","Object","keys","Data_Get_All","Keys","All_Data","forEach","Key","Clear_All_Data","clear","Copy_Deep","Obj","Cache","WeakMap","has","get","Date","RegExp","Map","Copied_Map","set","Value","Set","Copied_Set","add","Array","isArray","Copied_Array","map","Item","Copied_Obj","prototype","hasOwnProperty","call","Copy_Shallow","slice","Vibration_Switch_Set","Switch","Vibration_Switch_Get","Sound_Switch_Set","element","volume","Sound_Switch_Get","Sound_Volume_Set","Volume","Music_Switch_Set","Music_Switch_Get","Music_Volume_Set","Audio_Switch_Set","Audio_Volume_Set","Sound_Play","Path","Res","Load_AudioClip","loop","playOneShot","Music_Play","Call","warn","enabled","stop","clip","play","Sound_Long_play","Music_Pause","pause","Music_Resume","Music_Stop","Sound_Long_Pause","Sound_Long_Resume","Sound_Long_Stop","Sound_Long_Stop_All","i","length","Load_Remote_ImageAsset","Time_Start","loadRemote","ext","Err","Time_Finish","Time_Total","Texture","image","Sprite_Frame","texture","Load_Remote_ImageAsset_","Load_Remote_audio","Bundle_Name","loadBundle","Load_Dir","Type","loadDir","finished","total","item","onProgress","Load_Scene","Progress_Mask","Progress_Bar","Value_Label","Mode","W_PM","getComponent","H_PM","W_PB","H_PB","position","Math","floor","loadScene","Finished","Total","Schedule","Number","string","Scene_Name_Current","load","Load_Texture","Load_Material","Load_AnimationClip","Load_Font","Release_Resource","Release_Resource_All","Game_Toggle_Fullscreen","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","Game_UIScale_Set","scale","style","transform","Game_Restart","restart","Game_Resume","resume","Game_Pause","Game_End","end","frameRate","Director_Run","SceneAsset","runSceneImmediate","Director_Resume","Director_Pause","Director_End","Node_Set","addPersistRootNode","Director_RemovePersistRootNode","removePersistRootNode","Scale","getScheduler","setTimeScale","Director_Scheduler_TimeScale_Get","getTimeScale","isNative","isBrowser","isMobile","isLittleEndian","isXR","Get_Current_Full_Time","Get_Timestamp","Get_Unix_Timestamp","Get_Timestamp_From_Date","year","month","day","date","getTime","Get_Time_Difference","Start_Timestamp","Fnish_Timestamp","Get_Current_Year","getFullYear","Get_Current_Month","getMonth","Get_Current_Date","getDate","Get_Current_Hour","getHours","Get_Current_Minute","getMinutes","Get_Current_Second","getSeconds","Get_Current_Millisecond","getMilliseconds","Get_Current_Day","getDay","Current_Time","Year","Month","Hour","Minute","Second","MilliSecond","Day"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, AudioClip, director, resources, AudioSource, sys, Label, find, CCBoolean, CCInteger, v3, Vec3, debug, PhysicsSystem2D, Sprite, color, LabelOutline, log, SpriteFrame, EPhysics2DDrawFlags, v2, SpriteAtlas, view, game, Game, Vec2, assetManager, Texture2D, isValid, macro, Material, JsonAsset, Font, AnimationClip, AssetManager, Constructor, ImageAsset, Scene, UITransform, SceneAsset, ProgressBar } from 'cc';\nimport { Tool_Event } from './Tool_Event';\nimport { Tool_Other } from './Tool_Other';\nimport { Tool_UI } from './Tool_UI';\nimport { PlatformApi } from '../Other/SDK/PlatformApi';\n\nconst { ccclass, property } = _decorator;\n\n\n\n/**场景改变类型 */\nexport enum Scene_Change_Type {\n    /**自动 */\n    Automatic,\n    /**手动 */\n    Manual,\n    /**结束 */\n    Finish,\n}\n\nexport interface Interface {\n    Interface: number,\n}\n\nexport type Type = {\n    Type: number;\n}\n\nexport interface Interface_GameData {\n    /**游戏版本 */\n    Game_Versions: \"0.0.1\" | (string & {});\n\n    /**游戏模式 */\n    Game_Mode: \"Default\" | \"Easy\" | \"Normal\" | \"Hard\" | (string & {});\n\n    /**是否首次启动 */\n    Is_FirstStartUp: boolean;\n    /**是否新的一天 */\n    Is_NewDay: boolean;\n\n    /**登录时间 */\n    Login_Time: number;\n    /**登录天数 */\n    Login_Days: number;\n    /**连续登录天数 */\n    Login_ConsecutiveDays: number;\n\n    /**总共游戏时长 */\n    GameTime_Total: number;\n    /**今日游戏时长 */\n    GameTime_Today: number;\n\n    /**存档槽 */\n    Save_Slot: number;\n    /**存档时间 */\n    Save_Time: number;\n    /**存档数据 */\n    Save_Data:\n\n    {\n        关卡进度: number;\n        关卡分数: number[];\n        关卡时间: number[];\n        关卡星级: number[];\n    }[];\n\n}\n\n\n@ccclass('Resoure_Data')\nexport class Resoure_Data extends Component {\n\n    public static readonly instance = new Resoure_Data();\n\n    //--------------------------------------------------------------------------------------------\n\n    /**缓存 Bundles */\n    private Bundles: AssetManager.Bundle = null;\n    /**缓存 Scene */\n    private _Cache_Scene: Object = {};\n    /**缓存 Prefab */\n    private _Cache_Prefab: Object = {};\n    /**缓存 SpriteFrame */\n    private _Cache_SpriteFrame: Object = {};\n    /**缓存 Texture2D */\n    private _Cache_Texture2D: Object = {};\n    /**缓存 AudioClip */\n    private _Cache_AudioClip: Object = {};\n    /**缓存 Material */\n    private _Cache_Material: Object = {};\n    /**缓存 Json */\n    private _Cache_Json: Object = {};\n    /**缓存 AnimationClip */\n    private _Cache_AnimationClip: Object = {};\n    /**缓存 Font */\n    private _Cache_Font: Object = {};\n\n    //--------------------------------------------------------------------------------------------\n\n    private GameData: Interface_GameData = {\n        /**游戏版本 */\n        Game_Versions: \"0.0.1\",\n\n        Game_Mode: \"Default\",\n\n        /**是否首次启动 */\n        Is_FirstStartUp: true,\n        /**是否新的一天 */\n        Is_NewDay: true,\n\n        /**登录时间 */\n        Login_Time: 0,\n        /**登录天数 */\n        Login_Days: 0,\n        /**连续登录天数 */\n        Login_ConsecutiveDays: 0,\n\n        /**总共游戏时长 */\n        GameTime_Total: 0,\n        /**今日游戏时长 */\n        GameTime_Today: 0,\n\n        /**存档槽 */\n        Save_Slot: 0,\n        /**存档时间 */\n        Save_Time: 0,\n        /**存档数据 */\n        Save_Data: [\n            {\n                关卡进度: 0,\n                关卡分数: [],\n                关卡时间: [],\n                关卡星级: [],\n            }\n        ],\n    }\n\n    //--------------------------------------------------------------------------------------------\n\n    /**震动开关 */\n    private Vibration_Switch: boolean = true;\n\n    /**声音开关 */\n    private Sound_Switch: boolean = true;\n    /**声音音量 */\n    private Sound_Volume: number = 1;\n    /**声音音频组件 */\n    private Sound_AudioSource: AudioSource = null;\n\n    /**音乐开关 */\n    private Music_Switch: boolean = true;\n    /**音乐音量 */\n    private Music_Volume: number = 1;\n    /**音乐音频组件 */\n    private Music_AudioSource: AudioSource = null;\n\n    /**长音效音频组件(可以手动停止的音效) */\n    private Sound_Long_AudioSource: AudioSource[] = [];\n\n    //--------------------------------------------------------------------------------------------\n\n    /**场景名字_当前 */\n    @property({ tooltip: \"场景名字_当前\" })\n    public Scene_Name_Current: string = \"Main\";\n\n    /**场景名字_下个 */\n    @property({ tooltip: \"场景名字_下个\" })\n    public Scene_Name_Next: string = \"Game\";\n\n\n\n    /**@param {CCBoolean} 是否竖屏*/\n    @property(CCBoolean)\n    public Is_Vertical_Screen: boolean = true;\n\n    //--------------------------------------------------------------------------------------------\n\n\n    //--------------------------------------------------------------------------------------------\n\n    private FrameRate: number = 0;\n    private LastTime: number = 0;\n    private FrameRate_Schedule: Function = null;\n\n    constructor() {\n        super();\n        this.FrameRate_Schedule = () => {\n            const Time_Current = performance.now();\n            const Time_Elapsed = (Time_Current - this.LastTime) / 1000;\n            const currentFrameRate = this.FrameRate / Time_Elapsed;\n            console.debug(`帧率: ${currentFrameRate.toFixed(0)}`);\n            this.FrameRate = 0;\n            this.LastTime = Time_Current;\n        };\n    }\n\n\n    /**查看帧率 */\n    Check_FrameRate() {\n        this.unschedule(this.FrameRate_Schedule);\n        this.FrameRate = 0;\n        this.LastTime = performance.now();\n        this.schedule(this.FrameRate_Schedule, 1);\n    }\n    update(Dt: number): void {\n        this.FrameRate++;\n    }\n    onEnable() {\n        console.debug(\"组件被启用\");\n    }\n    onDisable() {\n        console.debug(\"组件被禁用或节点变为无效\");\n    }\n    onDestroy() {\n        console.debug(\"组件被销毁\");\n    }\n\n    onLoad() {\n        console.log(\"onLoad\");\n\n        this.Director_AddPersistRootNode(this.node);\n        this.Game_FrameRate_Set(120);\n        this.Director_Scheduler_TimeScale_Set(1);\n        // this.Check_FrameRate();\n\n\n        // 启用物理系统\n        // PhysicsSystem2D.instance.enable = true;\n\n        // PhysicsSystem2D.instance.debugDrawFlags =\n        //   EPhysics2DDrawFlags.Shape\n        // | EPhysics2DDrawFlags.Joint\n        // | EPhysics2DDrawFlags.Aabb\n        // | EPhysics2DDrawFlags.Pair\n        // | EPhysics2DDrawFlags.CenterOfMass\n\n\n\n        // 监听浏览器窗口大小变化事件\n        window.addEventListener('resize', (Event) => {\n            Screen_Update();\n        });\n        // 监听浏览器横屏竖屏变化事件\n        window.addEventListener(\"orientationchange\", (Event) => {\n            console.debug(Event);\n            Screen_Update();\n        });\n\n        // 更新屏幕尺寸\n        function Screen_Update() {\n\n            // 浏览器窗口可见区域尺寸\n            let Screen_Width = window.innerWidth;\n            let Screen_Height = window.innerHeight;\n            console.debug(`当前可见区域尺寸: ${Screen_Width} x ${Screen_Height}`);\n\n            // 浏览器窗口设计分辨率尺寸\n            // let Width_Design = view.getDesignResolutionSize().width;\n            // let Height_Design = view.getDesignResolutionSize().height;\n            // console.debug(`当前设计分辨率: ${Width_Design} x ${Height_Design}`);\n\n            // 可见区域尺寸\n            let Visible_Size = view.getVisibleSize();\n            let Visible_Width = Visible_Size.width;\n            let Visible_Height = Visible_Size.height;\n            console.debug(`当前可见分辨率: ${Visible_Width} x ${Visible_Height}`);\n\n            if (Visible_Width >= Visible_Height) {\n                console.error('当前为横屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Horizontal\");\n            } else {\n                console.error('当前为竖屏');\n                Tool_Event.instance.Event_Dispatch(\"Screen_Update\", \"Vertical\");\n            }\n\n        }\n\n\n        game.on(Game.EVENT_HIDE, () => {\n            // 游戏窗口被隐藏时的处理逻辑\n            console.debug('Game window is hidden', \"游戏窗口被隐藏时的处理逻辑\",);\n        });\n        game.on(Game.EVENT_SHOW, () => {\n            // 游戏窗口被显示时的处理逻辑\n            console.debug('Game window is shown', \"游戏窗口被显示时的处理逻辑\");\n        });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'visible') {\n                // 屏幕解锁时的处理逻辑\n                console.debug('Screen is unlocked', \"屏幕解锁时的处理逻辑\");\n            } else {\n                // 屏幕锁定时的处理逻辑\n                console.debug('Screen is locked', \"屏幕锁定时的处理逻辑\");\n            }\n        });\n\n\n\n\n        this.Music_AudioSource = new Node(\"Music\").addComponent(AudioSource);\n        this.Sound_AudioSource = new Node(\"Sound\").addComponent(AudioSource);\n        this.Music_AudioSource.node.parent = this.node;\n        this.Sound_AudioSource.node.parent = this.node;\n\n    }\n\n    async start() {\n        \n        PlatformApi.instance.onLoad();\n\n        this.Is_First_StartUp();\n        this.Information_Printing();\n        this.Bundles = await this.Load_Bundle(\"Load\");\n\n        // this.Music_Play(\"Audio/BGM1\");\n\n        //加载资源\n\n        await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxC\")\n        await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxN\")\n        await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxE\")\n        await this.Load_SpriteFrame(\"SpriteFrame/Panel/PanelMathMatch/BoxU\")\n        await this.Load_Json(\"Json/mathmatch\");\n        await this.Load_Prefab(\"Prefab/PanelMathMatch/Icon\");\n\n    }\n\n\n\n\n\n    /**是否首次启动 */\n    Is_First_StartUp() {\n        let First_Start = this.Data_Get(\"First_Start\");\n        console.debug(First_Start);\n        if (!Tool_Other.instance.Get_Type_Is_Abnormal(First_Start)) {\n            this.GameData.Is_FirstStartUp = true;\n            First_Start = this.GameData.Is_FirstStartUp;\n            this.Data_Set(\"First_Start\", First_Start);\n        }\n        if (First_Start) {\n            console.debug(\"第一次开始\");\n            // First_Start = false;\n            // this.Data_Set(\"First_Start\", First_Start);\n        } else {\n            console.debug(\"不是第一次开始\");\n        }\n    }\n\n\n    /**请求数据 */\n    async Fetch_Data(Url: string) {\n        if (Tool_UI.instance.isWechatPlatform()) {\n            return this.Fetch_DataWX(Url);\n        } else {\n            try {\n                const Response = await fetch(Url);\n                console.log(\"请求回复:\", Response);\n                const Data = await Response.json();\n                console.debug(\"获取到的数据:\", Data);\n                return Data;\n            } catch (error) {\n                console.error(\"获取数据失败:\", error);\n            }\n        }\n    }\n\n    /**更新数据 (PUT请求) */\n    async Update_Data(Url: string, Data: any) {\n        if (Tool_UI.instance.isWechatPlatform()) {\n            return this.Update_DataWX(Url, Data);\n        } else {\n            try {\n                const Response = await fetch(Url, {\n                    method: 'PUT', // 或 'PATCH' 如果API支持部分更新\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(Data)\n                });\n                if (!Response.ok) {\n                    throw new Error(`HTTP错误! 状态: ${Response.status}`);\n                }\n                console.debug(\"更新数据成功\");\n                return await Response.json();\n            } catch (error) {\n                console.error(\"更新请求失败:\", error);\n                throw error;\n            }\n        }\n    }\n\n    /** \n     * 微信小游戏环境下的数据请求方法\n     * @param Url 请求地址\n     * @returns 返回解析后的数据\n     */\n    async Fetch_DataWX(Url: string) {\n        try {\n            const res = await new Promise<any>((resolve, reject) => {\n                wx.request({\n                    url: Url,\n                    method: 'GET',\n                    success: (res) => {\n                        console.log(\"请求成功:\", res);\n                        resolve(res.data); // 微信返回的数据在res.data中\n                    },\n                    fail: (err) => {\n                        console.error(\"请求失败:\", err);\n                        reject(err);\n                    }\n                });\n            });\n            console.debug(\"获取到的数据:\", res);\n            return res;\n        } catch (error) {\n            console.error(\"获取数据失败:\", error);\n            throw error;\n        }\n    }\n\n    /** \n     * 微信小游戏环境下的数据更新方法 (PUT请求)\n     * @param url 请求地址\n     * @param data 要更新的数据\n     * @returns 返回更新后的数据\n     */\n    async Update_DataWX(url: string, data: any) {\n        try {\n            const res = await new Promise<any>((resolve, reject) => {\n                wx.request({\n                    url: url,\n                    method: 'PUT',\n                    data: data, // 微信会自动序列化对象\n                    header: {\n                        'Content-Type': 'application/json'\n                    },\n                    success: (res) => {\n                        // 微信使用statusCode而不是status\n                        if (res.statusCode >= 200 && res.statusCode < 300) {\n                            console.debug(\"更新数据成功\");\n                            resolve(res.data);\n                        } else {\n                            reject(new Error(`HTTP错误! 状态: ${res.statusCode}`));\n                        }\n                    },\n                    fail: (err) => {\n                        reject(err);\n                    }\n                });\n            });\n            return res;\n        } catch (error) {\n            console.error(\"更新请求失败:\", error);\n            throw error;\n        }\n    }\n\n\n    /**\n    *数据保存本地\n    *@Data_Name 待保存数据的名字\n    *@Data_Name 待保存的数据\n    */\n    // Data_Set(Data_Name: string, Data: any) {\n    //     sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n    // }\n    /**\n     *读取本地数据\n     *@Data_Name 待读取数据的名字\n     */\n    // Data_Get(Data_Name: string) {\n    //     let Data = sys.localStorage.getItem(Data_Name);\n    //     return JSON.parse(Data);\n    // }\n\n    /**\n     * 安全保存数据到本地\n     * @param Data_Name 数据键名\n     * @param Data 要保存的数据（会自动JSON序列化）\n     */\n    Data_Set(Data_Name: string, Data: any): void {\n        try {\n            sys.localStorage.setItem(Data_Name, JSON.stringify(Data));\n        } catch (e) {\n            console.error(`[Storage] 保存 ${Data_Name} 失败:`, e);\n        }\n    }\n\n    /**\n     * 安全读取本地数据\n     * @param Data_Name 数据键名\n     * @param Default_Value 当数据不存在时的默认值\n     */\n    Data_Get(Data_Name: string, Default_Value: any = null): any {\n        try {\n            let Data_Value;\n            const Data_Raw = sys.localStorage.getItem(Data_Name);\n            Data_Value = Data_Raw ? JSON.parse(Data_Raw) : null;\n            // 返回数据或默认值\n            return Data_Value !== undefined ? Data_Value : Default_Value;\n        } catch (e) {\n            console.error(`[Storage] 读取 ${Data_Name} 失败:`, e);\n            return Default_Value;\n        }\n    }\n\n    /**\n     * @param Data_Name 待删除数据的名字\n     */\n    Data_Delete(Data_Name: string) {\n        sys.localStorage.removeItem(Data_Name);\n    }\n    /**\n     * @param Data_Name 待检查数据的名字\n     * @returns 是否存在该数据\n     */\n    Data_Is_Exist(Data_Name: string): boolean {\n        return sys.localStorage.getItem(Data_Name) !== null;\n    }\n    /**\n     * @param Data_Name 待更新数据的名字\n     * @param New_Data 新的数据\n     */\n    Data_Update(Data_Name: string, New_Data: any) {\n        if (this.Data_Is_Exist(Data_Name)) {\n            let Existing_Data = this.Data_Get(Data_Name);\n            // 根据需要合并或更新数据\n            let Updated_Data = { ...Existing_Data, ...New_Data };\n            this.Data_Set(Data_Name, Updated_Data);\n        } else {\n            console.error(`Data with name ${Data_Name} does not exist.`);\n        }\n    }\n    /**\n     * 获取所有本地存储数据的键\n     * @returns 所有键的数组\n     */\n    Data_Get_All_Keys(): string[] {\n        return Object.keys(sys.localStorage);\n    }\n    /**\n     * 获取所有本地存储的数据\n     * @returns 所有数据的对象\n     */\n    Data_Get_All(): object {\n        const Keys = this.Data_Get_All_Keys();\n        let All_Data = {};\n        Keys.forEach(Key => {\n            All_Data[Key] = this.Data_Get(Key);\n        });\n        return All_Data;\n    }\n    /**\n     * 清空所有本地存储数据\n     */\n    Clear_All_Data() {\n        sys.localStorage.clear();\n    }\n\n    /**\n     * 深拷贝\n     * @param Obj 需要拷贝的对象\n     * @param Cache 缓存已拷贝的对象（用于处理循环引用）\n     * @returns 拷贝后的对象\n     */\n    Copy_Deep<T>(Obj: T, Cache = new WeakMap()): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Cache.has(Obj)) {\n            return Cache.get(Obj);\n        }\n        if (Obj instanceof Date) {\n            return new Date(Obj) as T;\n        }\n        if (Obj instanceof RegExp) {\n            return new RegExp(Obj) as T;\n        }\n        if (Obj instanceof Map) {\n            const Copied_Map = new Map();\n            Cache.set(Obj, Copied_Map);\n            Obj.forEach((Value, Key) => {\n                Copied_Map.set(Key, this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Map as T;\n        }\n        if (Obj instanceof Set) {\n            const Copied_Set = new Set();\n            Cache.set(Obj, Copied_Set);\n            Obj.forEach((Value) => {\n                Copied_Set.add(this.Copy_Deep(Value, Cache));\n            });\n            return Copied_Set as T;\n        }\n        if (Array.isArray(Obj)) {\n            const Copied_Array = Obj.map((Item) => this.Copy_Deep(Item, Cache));\n            Cache.set(Obj, Copied_Array);\n            return Copied_Array as T;\n        }\n        const Copied_Obj: Partial<T> = {};\n        Cache.set(Obj, Copied_Obj);\n        for (const Key in Obj) {\n            if (Object.prototype.hasOwnProperty.call(Obj, Key)) {\n                Copied_Obj[Key] = this.Copy_Deep(Obj[Key], Cache);\n            }\n        }\n        return Copied_Obj as T;\n    }\n    /**\n     * 浅拷贝\n     * @param Obj 需要拷贝的对象\n     * @returns 拷贝后的对象\n     */\n    Copy_Shallow<T>(Obj: T): T {\n        if (typeof Obj !== 'object' || Obj === null) {\n            return Obj;\n        }\n        if (Array.isArray(Obj)) {\n            return Obj.slice() as T;\n        }\n        return { ...Obj };\n    }\n    /**震动开关设置 */\n    Vibration_Switch_Set(Switch: boolean = false) {\n        this.Vibration_Switch = Switch;\n        this.Data_Set(\"Vibration_Switch\", this.Vibration_Switch);\n    }\n    /**震动开关获取 */\n    Vibration_Switch_Get() {\n        this.Vibration_Switch = this.Data_Get(\"Vibration_Switch\");\n        if (this.Vibration_Switch === null || this.Vibration_Switch === undefined) {\n            this.Vibration_Switch = true;\n        }\n        return this.Vibration_Switch;\n    }\n    /**声音开关设置 */\n    Sound_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch = Switch;\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = this.Sound_Volume;\n            });\n        } else {\n            this.Sound_Long_AudioSource.forEach(element => {\n                element.volume = 0;\n            });\n        }\n        this.Data_Set(\"Sound_Switch\", this.Sound_Switch);\n    }\n    /**声音开关获取 */\n    Sound_Switch_Get() {\n        this.Sound_Switch = this.Data_Get(\"Sound_Switch\");\n        if (this.Sound_Switch === null || this.Sound_Switch === undefined) {\n            this.Sound_Switch = true;\n        }\n        return this.Sound_Switch;\n    }\n    /**声音音量设置 */\n    Sound_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume = Volume;\n        this.Sound_Long_AudioSource.forEach(element => {\n            element.volume = this.Sound_Volume;\n        });\n    }\n    /**音乐开关设置 */\n    Music_Switch_Set(Switch: boolean = false) {\n        this.Music_Switch = Switch;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n        this.Data_Set(\"Music_Switch\", this.Music_Switch);\n    }\n    /**音乐开关获取 */\n    Music_Switch_Get() {\n        this.Music_Switch = this.Data_Get(\"Music_Switch\");\n        if (this.Music_Switch === null || this.Music_Switch === undefined) {\n            this.Music_Switch = true;\n        }\n        return this.Music_Switch;\n    }\n    /**音乐音量设置 */\n    Music_Volume_Set(Volume: number = 0) {\n        this.Music_Volume = Volume;\n        this.Music_AudioSource.volume = this.Music_Volume;\n    }\n    /**音频开关设置 */\n    Audio_Switch_Set(Switch: boolean = false) {\n        this.Sound_Switch_Set(Switch);\n        this.Music_Switch_Set(Switch);\n    }\n    /**音频声音设置 */\n    Audio_Volume_Set(Volume: number = 0) {\n        this.Sound_Volume_Set(Volume);\n        this.Music_Volume_Set(Volume);\n    }\n    /**音效播放 */\n    async Sound_Play(Path: string) {\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        if (this.Sound_Switch) {\n            this.Sound_AudioSource.volume = this.Sound_Volume;\n        } else {\n            this.Sound_AudioSource.volume = 0;\n        }\n        this.Sound_AudioSource.loop = false;\n        this.Sound_AudioSource.playOneShot(Res, this.Sound_Volume);\n    }\n    /**音乐播放 */\n    async Music_Play(Path: string, Call = () => { }) {\n        console.warn(Path);\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return;\n        Call && Call()\n        this.Music_AudioSource.enabled = true;\n        this.Music_AudioSource.stop();\n        this.Music_AudioSource.clip = Res;\n        if (this.Music_Switch) {\n            this.Music_AudioSource.volume = this.Music_Volume;\n        } else {\n            this.Music_AudioSource.volume = 0;\n        }\n        this.Music_AudioSource.loop = true;\n        this.Music_AudioSource.play();\n    }\n    /**长音效播放 */\n    async Sound_Long_play(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) {\n            this.Sound_Long_AudioSource[Path].enabled = true;\n            this.Sound_Long_AudioSource[Path].stop();\n            if (this.Sound_Switch) {\n                this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n            } else {\n                this.Sound_Long_AudioSource[Path].volume = 0;\n            }\n            this.Sound_Long_AudioSource[Path].loop = true;\n            this.Sound_Long_AudioSource[Path].play();\n            return\n        }\n        let Res = await this.Load_AudioClip(Path);\n        if (!isValid(this.node)) return//防止音乐还没加载完 场景就被销毁了\n        this.Sound_Long_AudioSource[Path] = new Node(Path).addComponent(AudioSource);\n        this.Sound_Long_AudioSource[Path].node.parent = this.node;\n        this.Sound_Long_AudioSource[Path].clip = Res;\n        this.Sound_Long_AudioSource[Path].enabled = true;\n        this.Sound_Long_AudioSource[Path].stop();\n        if (this.Sound_Switch) {\n            this.Sound_Long_AudioSource[Path].volume = this.Sound_Volume;\n        } else {\n            this.Sound_Long_AudioSource[Path].volume = 0;\n        }\n        this.Sound_Long_AudioSource[Path].loop = true;\n        this.Sound_Long_AudioSource[Path].play();\n    }\n    /**音乐暂停 */\n    Music_Pause() {\n        this.Music_AudioSource.pause();\n    }\n    /**音乐恢复 */\n    Music_Resume() {\n        this.Music_AudioSource.play();\n    }\n    /**音乐停止 */\n    Music_Stop() {\n        this.Music_AudioSource.stop();\n    }\n    /**长音效暂停 */\n    Sound_Long_Pause(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].pause();\n    }\n    /**长音效恢复 */\n    Sound_Long_Resume(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].play();\n    }\n    /**长音效停止 */\n    Sound_Long_Stop(Path: string) {\n        if (this.Sound_Long_AudioSource[Path]) this.Sound_Long_AudioSource[Path].stop();\n    }\n    /**长音效停止所有 */\n    Sound_Long_Stop_All() {\n        if (this.Sound_AudioSource) this.Sound_AudioSource.stop();\n        for (let i = 0; i < this.Sound_Long_AudioSource.length; i++) {\n            this.Sound_Long_AudioSource[i].stop();\n        }\n    }\n\n    /**加载远程图片资源无后缀名\n     * @Path 远程路径\n     */\n    async Load_Remote_ImageAsset(Path: string): Promise<SpriteFrame> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, { ext: '.png' }, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程图片资源有后缀名\n    * @Path 远程/本地路径\n    */\n    async Load_Remote_ImageAsset_(Path: string): Promise<SpriteFrame> {\n\n        // try {\n        //     return new Promise((resolve, reject) => {\n        //         assetManager.loadRemote<ImageAsset>(Path, (err, imageAsset) => {\n        //             if (err) {\n        //                 console.error('加载远程图片失败:', err);\n        //                 return;\n        //             }\n        //             // 创建纹理\n        //             const texture = new Texture2D();\n        //             texture.image = imageAsset;\n        //             // 创建精灵帧\n        //             const spriteFrame = new SpriteFrame();\n        //             spriteFrame.texture = texture;\n        //             resolve(spriteFrame);\n        //         });\n        //     });\n        // } catch (Error) {\n        //     console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n        //     throw Error;\n        // }\n\n        // return\n\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote<ImageAsset>(Path, (Err, Res: ImageAsset) => {\n                    if (Err) {\n                        console.error(\"加载 ImageAsset 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 ImageAsset ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    const Texture = new Texture2D();\n                    Texture.image = Res;\n                    const Sprite_Frame = new SpriteFrame();\n                    Sprite_Frame.texture = Texture;\n                    resolve(Sprite_Frame);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 ImageAsset ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载远程音频资源\n     * @Path 远程路径\n     */\n    async Load_Remote_audio(Path: string): Promise<AudioClip> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadRemote(Path, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 AudioClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AudioClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AudioClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Bundle(Bundle_Name: string): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                assetManager.loadBundle(Bundle_Name, (Err, Res) => {\n                    if (Err) {\n                        console.error(`加载 Bundle ${Bundle_Name} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Bundle ${Bundle_Name} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Bundle ${Bundle_Name} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    /**加载文件夹 */\n    async Load_Dir(Path: string, Type: any): Promise<any> {\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadDir(Path, Type, (finished, total, item) => {\n                    const onProgress: string = (finished / total).toFixed(2);\n                    console.debug(onProgress);\n                }, (Err, Res: any) => {\n                    if (Err) {\n                        console.error(\"加载 Dir 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Dir ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(Res);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Dir ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Scene(Path: string, Progress_Mask: Node, Progress_Bar: Node, Value_Label: Label = null, Mode: \"Horizontal\" | \"Vertical\" | (string & {}) = \"Vertical\"): Promise<Scene> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Scene[Path]) {\n            console.debug(`Scene ${Path} 资源存在`);\n            return this._Cache_Scene[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            let W_PM = Progress_Mask.getComponent(UITransform).width;\n            let H_PM = Progress_Mask.getComponent(UITransform).height;\n            let W_PB = Progress_Bar.getComponent(UITransform).width;\n            let H_PB = Progress_Bar.getComponent(UITransform).height;\n            if (Mode == \"Vertical\") {\n                Progress_Mask.position = v3(0, Math.floor(-H_PM * 1), 0);\n                Progress_Bar.position = v3(0, Math.floor(H_PB * 1), 0);\n            } else {\n                Progress_Mask.position = v3(Math.floor(-W_PM * 1), 0, 0);\n                Progress_Bar.position = v3(Math.floor(W_PB * 1), 0, 0);\n            }\n\n            Progress_Mask.position = v3(Math.floor(-W_PM), Math.floor(-H_PM), 0);\n            Progress_Bar.position = v3(Math.floor(-W_PB), Math.floor(H_PB), 0);\n\n            return new Promise((resolve, reject) => {\n                this.Bundles.loadScene(Path, null, (Finished, Total, Item) => {\n                    let Schedule: number = Number((Finished / Total).toFixed(2));\n                    if (Mode == \"Vertical\") {\n                        Progress_Mask.position = v3(0, Math.floor(-H_PM * (1 - Schedule)), 0);\n                        Progress_Bar.position = v3(0, Math.floor(H_PB * (1 - Schedule)), 0);\n                    } else {\n                        Progress_Mask.position = v3(Math.floor(-W_PM * (1 - Schedule)), 0, 0);\n                        Progress_Bar.position = v3(Math.floor(W_PB * (1 - Schedule)), 0, 0);\n                    }\n                    // Progress_Bar.progress = Schedule;\n                    let Value: number = Math.floor(Schedule * 100);\n                    if (Value_Label != null) {\n                        Value_Label.string = Value + \"%\"\n                    }\n                    // console.debug(`加载 Scene 进度: ${Finished}/${Total} (${Value}%)`);\n                }, (Err, Res: SceneAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Scene 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Scene[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Scene ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    this.Scene_Name_Current = Path;\n                    resolve(this._Cache_Scene[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Scene ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    async Load_Prefab(Path: string): Promise<Prefab> {\n        if (this.Bundles == null) {\n            this.Bundles = await this.Load_Bundle(\"Load\");\n        }\n        if (this._Cache_Prefab[Path]) {\n            console.debug(`Prefab ${Path} 资源存在`);\n            return this._Cache_Prefab[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Prefab, (Err, Res: Prefab) => {\n                    if (Err) {\n                        console.error(`加载 Prefab ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Prefab[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Prefab ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Prefab[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Prefab ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_SpriteFrame(Path: string): Promise<SpriteFrame> {\n        Path = Path + \"/spriteFrame\";\n        if (this._Cache_SpriteFrame[Path]) {\n            // console.debug(`SpriteFrame ${Path} 资源存在`);\n            return this._Cache_SpriteFrame[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, SpriteFrame, (Err, Res: SpriteFrame) => {\n                    if (Err) {\n                        console.error(`加载 SpriteFrame ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_SpriteFrame[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 SpriteFrame ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_SpriteFrame[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 SpriteFrame ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Texture(Path: string): Promise<Texture2D> {\n        if (this._Cache_Texture2D[Path]) {\n            console.debug(`Texture ${Path} 资源存在`);\n            return this._Cache_Texture2D[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Texture2D, (Err, Res: Texture2D) => {\n                    if (Err) {\n                        console.error(`加载 Texture ${Path} 失败: ${Err}`);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Texture2D[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Texture ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Texture2D[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Texture ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AudioClip(Path: string): Promise<AudioClip> {\n        if (this._Cache_AudioClip[Path]) {\n            console.debug(`Audio ${Path} 资源存在`);\n            return this._Cache_AudioClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AudioClip, (Err, Res: AudioClip) => {\n                    if (Err) {\n                        console.error(\"加载 Audio 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AudioClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Audio ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AudioClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Audio ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Material(Path: string): Promise<Material> {\n        if (this._Cache_Material[Path]) {\n            console.debug(`Material ${Path} 资源存在`);\n            return this._Cache_Material[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Material, (Err, Res: Material) => {\n                    if (Err) {\n                        console.error(\"加载 Material 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Material[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Material ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Material[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Material ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Json(Path: string): Promise<JsonAsset> {\n        if (this._Cache_Json[Path]) {\n            console.debug(`Json ${Path} 资源存在`);\n            return this._Cache_Json[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, JsonAsset, (Err, Res: JsonAsset) => {\n                    if (Err) {\n                        console.error(\"加载 Json 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Json[Path] = Res.json!;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Json ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Json[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Json ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_AnimationClip(Path: string): Promise<AnimationClip> {\n        if (this._Cache_AnimationClip[Path]) {\n            console.debug(`AnimationClip ${Path} 资源存在`);\n            return this._Cache_AnimationClip[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, AnimationClip, (Err, Res: AnimationClip) => {\n                    if (Err) {\n                        console.error(\"加载 AnimationClip 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_AnimationClip[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 AnimationClip ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_AnimationClip[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 AnimationClip ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n    async Load_Font(Path: string): Promise<Font> {\n        if (this._Cache_Font[Path]) {\n            console.debug(`Font ${Path} 资源存在`);\n            return this._Cache_Font[Path];\n        }\n        const Time_Start = Date.now();\n        try {\n            return new Promise((resolve, reject) => {\n                this.Bundles.load(Path, Font, (Err, Res: Font) => {\n                    if (Err) {\n                        console.error(\"加载 Font 失败:\", Err);\n                        reject(Err);\n                        return;\n                    }\n                    this._Cache_Font[Path] = Res;\n                    const Time_Finish = Date.now();\n                    const Time_Total = Time_Finish - Time_Start;\n                    console.debug(`加载 Font ${Path} 成功: 总用时长: ${Time_Total} ms`);\n                    resolve(this._Cache_Font[Path]);\n                    return;\n                });\n            });\n        } catch (Error) {\n            console.error(`加载 Font ${Path} 错误: ${Error}`);\n            throw Error;\n        }\n    }\n\n    /**释放资源 */\n    async Release_Resource(Path: string): Promise<void> {\n        if (this._Cache_Scene[Path]) {\n            delete this._Cache_Scene[Path];\n            console.debug(`释放 Scene ${Path} 资源`);\n        }\n        if (this._Cache_Prefab[Path]) {\n            delete this._Cache_Prefab[Path];\n            console.debug(`释放 Prefab ${Path} 资源`);\n        }\n        if (this._Cache_SpriteFrame[Path]) {\n            delete this._Cache_SpriteFrame[Path];\n            console.debug(`释放 SpriteFrame ${Path} 资源`);\n        }\n        if (this._Cache_Texture2D[Path]) {\n            delete this._Cache_Texture2D[Path];\n            console.debug(`释放 Texture ${Path} 资源`);\n        }\n        if (this._Cache_AudioClip[Path]) {\n            delete this._Cache_AudioClip[Path];\n            console.debug(`释放 Audio ${Path} 资源`);\n        }\n        if (this._Cache_Material[Path]) {\n            delete this._Cache_Material[Path];\n            console.debug(`释放 Material ${Path} 资源`);\n        }\n        if (this._Cache_Json[Path]) {\n            delete this._Cache_Json[Path];\n            console.debug(`释放 JSON ${Path} 资源`);\n        }\n        if (this._Cache_AnimationClip[Path]) {\n            delete this._Cache_AnimationClip[Path];\n            console.debug(`释放 AnimationClip ${Path} 资源`);\n        }\n        if (this._Cache_Font[Path]) {\n            delete this._Cache_Font[Path];\n            console.debug(`释放 Font ${Path} 资源`);\n        }\n    }\n    /**释放所有资源 */\n    async Release_Resource_All(): Promise<void> {\n        this._Cache_Scene = {};\n        this._Cache_Prefab = {};\n        this._Cache_SpriteFrame = {};\n        this._Cache_Texture2D = {};\n        this._Cache_AudioClip = {};\n        this._Cache_Material = {};\n        this._Cache_Json = {};\n        this._Cache_AnimationClip = {};\n        this._Cache_Font = {};\n        console.debug(`已释放所有资源`);\n    }\n\n    /** 游戏切换全屏模式 */\n    Game_Toggle_Fullscreen() {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen();\n            console.debug(`进入全屏`);\n        } else {\n            document.exitFullscreen();\n            console.debug(`退出全屏`);\n        }\n    }\n\n    /** 游戏界面缩放设置 */\n    Game_UIScale_Set(scale: number = 1) {\n        document.body.style.transform = `scale(${scale})`;\n    }\n\n    /**游戏重启$ */\n    Game_Restart() {\n        game.restart();\n    }\n    /**游戏恢复 */\n    Game_Resume() {\n        game.resume();\n    }\n    /**游戏暂停 */\n    Game_Pause() {\n        game.pause();\n    }\n    /**游戏停止 */\n    Game_End() {\n        game.end();\n    }\n    /**游戏帧率设置 */\n    Game_FrameRate_Set(FrameRate: number = 59) {\n        game.frameRate = FrameRate;\n    }\n\n\n    /**场景运行$ */\n    Director_Run(SceneAsset: Scene) {\n        director.runSceneImmediate(SceneAsset);\n    }\n    /**场景恢复$ */\n    Director_Resume() {\n        director.resume();\n    }\n    /**场景暂停$ */\n    Director_Pause() {\n        director.pause();\n    }\n    /**场景停止 */\n    Director_End() {\n        // director.end();\n    }\n    /**注册常驻根节点 */\n    Director_AddPersistRootNode(Node_Set: Node) {\n        director.addPersistRootNode(Node_Set);\n    }\n    /**注销常驻根节点 */\n    Director_RemovePersistRootNode(Node_Set: Node) {\n        director.removePersistRootNode(Node_Set);\n    }\n    /**场景调度间隔缩放设置 */\n    Director_Scheduler_TimeScale_Set(Scale: number = 1) {\n        director.getScheduler().setTimeScale(Scale);\n    }\n    /**场景调度间隔缩放获取 */\n    Director_Scheduler_TimeScale_Get(): number {\n        return director.getScheduler().getTimeScale();\n    }\n\n    /**信息打印 */\n    Information_Printing() {\n        console.debug(`当前平台是否是原生平台${sys.isNative}`);\n        console.debug(`当前平台是否是浏览器${sys.isBrowser}`);\n        console.debug(`当前运行平台是否是移动端平台${sys.isMobile}`);\n        console.debug(`当前平台字节顺序是否是小端序${sys.isLittleEndian}`);\n        console.debug(`当前运行平台是否是XR平台${sys.isXR}`);\n        this.Get_Current_Full_Time();\n    }\n\n\n    /**获取当前时间戳 */\n    Get_Timestamp(): number {\n        return Date.now();\n    }\n    /** 获取当前时间的 Unix 时间戳（秒） */\n    Get_Unix_Timestamp(): number {\n        return Math.floor(Date.now() / 1000); // 返回自1970年1月1日以来的秒数\n    }\n    /** 获取指定日期的时间戳 */\n    Get_Timestamp_From_Date(year, month, day): number {\n        const date = new Date(year, month - 1, day); // 注意月份从0开始\n        return date.getTime(); // 返回指定日期的时间戳\n    }\n    /** 获取两个时间戳之间的差值（毫秒） */\n    Get_Time_Difference(Start_Timestamp: number, Fnish_Timestamp: number): number {\n        return Fnish_Timestamp - Start_Timestamp; // 返回时间差\n    }\n    /** 获取当前年份 */\n    Get_Current_Year(): number {\n        return new Date().getFullYear(); // 返回当前年份\n    }\n    /** 获取当前月份 */\n    Get_Current_Month(): number {\n        return new Date().getMonth() + 1; // 返回当前月份\n    }\n    /** 获取当前日期 */\n    Get_Current_Date(): number {\n        return new Date().getDate();\n    }\n    /** 获取当前小时 */\n    Get_Current_Hour(): number {\n        return new Date().getHours();\n    }\n    /** 获取当前分钟 */\n    Get_Current_Minute(): number {\n        return new Date().getMinutes();\n    }\n    /** 获取当前秒 */\n    Get_Current_Second(): number {\n        return new Date().getSeconds();\n    }\n    /** 获取当前毫秒 */\n    Get_Current_Millisecond(): number {\n        return new Date().getMilliseconds();\n    }\n    /** 获取当前星期（0-6，0表示星期天） */\n    Get_Current_Day(): number {\n        if (new Date().getDay() == 0) return 7;\n        return new Date().getDay();\n    }\n    /** 获取完整的当前时间（包括年月日时分秒毫秒） */\n    Get_Current_Full_Time(): {\n        Year: number;\n        Month: number;\n        Date: number;\n        Hour: number;\n        Minute: number;\n        Second: number;\n        MilliSecond: number;\n        Day: number;\n    } {\n        const Current_Time = {\n            Year: this.Get_Current_Year(),\n            Month: this.Get_Current_Month(),\n            Date: this.Get_Current_Date(),\n            Hour: this.Get_Current_Hour(),\n            Minute: this.Get_Current_Minute(),\n            Second: this.Get_Current_Second(),\n            MilliSecond: this.Get_Current_Millisecond(),\n            Day: this.Get_Current_Day()\n        };\n        console.debug(`${Current_Time.Year}年${Current_Time.Month}月${Current_Time.Date}日 / 星期${Current_Time.Day} / ${Current_Time.Hour}时${Current_Time.Minute}分${Current_Time.Second}秒${Current_Time.MilliSecond}`);\n        return Current_Time;\n    }\n\n\n\n}\n\n\n"]}