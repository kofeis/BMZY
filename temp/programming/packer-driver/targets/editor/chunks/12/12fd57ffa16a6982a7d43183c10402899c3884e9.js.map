{"version":3,"sources":["file:///Users/jingfaxie/Documents/UGit/minigame3/Aby/assets/scripts/game/layer/SettingLayer.ts"],"names":["_decorator","Node","find","BaseLayer","audioManager","constants","msgcmd","gameModel","layerManager","ccclass","property","SettingLayer","_musicNode","_effectNode","onLoad","getNodeByPath","on","EventType","TOUCH_END","switchMusicState","switchEffectState","onEnable","addEventArr","mapLeave","initUI","musicVol","getMusiceVolume","active","effectVol","getEffectVolume","layerData","isOpenFromMap","onState","setMusicVolume","onRestartBtnClick","playEffect","audioNames","btnClick","closeLayer","openLayer","layers","GameLayer","onBackBtnClick","onCloseBtnClick","mapLeaveEventCb"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, find } from 'cc';\nimport { BaseLayer } from '../../framework/common/BaseLayer';\nimport { audioManager } from '../../framework/manager/AudioManager';\nimport { constants } from '../data/Constants';\nimport { msgcmd } from '../data/MsgCmd';\nimport { gameModel } from '../model/GameModel';\nimport { layerManager } from '../../framework/manager/LayerManager';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SettingLayer')\nexport class SettingLayer extends BaseLayer {\n    \n    // 音乐\n    private _musicNode: Node;\n    // 音效\n    private _effectNode: Node;\n\n    onLoad() {\n        super.onLoad()\n\n        this._musicNode = this.getNodeByPath(\"UI/Music\");\n        this._effectNode = this.getNodeByPath(\"UI/Effect\");\n\n        this._musicNode.on(Node.EventType.TOUCH_END, this.switchMusicState, this);\n        this._effectNode.on(Node.EventType.TOUCH_END, this.switchEffectState, this);\n    }\n\n    onEnable() {\n        super.onEnable();\n\n        this.addEventArr([\n            msgcmd.mapLeave,\n        ]);\n    }\n\n    initUI() {\n        let musicVol = audioManager.getMusiceVolume()\n        find(\"ON\", this._musicNode).active = musicVol > 0;\n        find(\"OFF\", this._musicNode).active = musicVol == 0;\n\n        let effectVol = audioManager.getEffectVolume()\n        find(\"ON\", this._effectNode).active = effectVol > 0;\n        find(\"OFF\", this._effectNode).active = effectVol == 0;\n\n        this.getNodeByPath(\"UI/BackBtn\").active = this.layerData.isOpenFromMap;\n        this.getNodeByPath(\"UI/RestartBtn\").active = this.layerData.isOpenFromMap;\n    }\n\n    switchMusicState() {\n        let musicVol = audioManager.getMusiceVolume();\n        let onState = musicVol > 0;\n        find(\"ON\", this._musicNode).active = !onState;\n        find(\"OFF\", this._musicNode).active = onState;\n        audioManager.setMusicVolume(onState ? 0 : 1);\n    }\n\n    switchEffectState() {\n        let effectVol = audioManager.getEffectVolume()\n        let onState = effectVol > 0;\n        find(\"ON\", this._effectNode).active = !onState;\n        find(\"OFF\", this._effectNode).active = onState;\n        audioManager.setMusicVolume(onState ? 0 : 1);\n    }\n\n    // 重新开始\n    onRestartBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        super.closeLayer();\n        layerManager.openLayer(constants.layers.GameLayer);\n    }\n\n    // 返回主页\n    onBackBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        if (!this.layerData.isOpenFromMap) {\n            super.closeLayer();\n        } else {\n            // 通知GameLayer返回HomeLayer\n            gameModel.mapLeave({});\n        }\n    }\n\n    onCloseBtnClick() {\n        audioManager.playEffect(constants.audioNames.btnClick);\n        super.closeLayer();\n    }\n\n    mapLeaveEventCb() {\n        this.closeLayer();\n    }\n}\n\n"]}