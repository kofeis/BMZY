{"version":3,"sources":["file:///D:/Cocos/XHAT/BMZY/assets/Script/Game/GameMode/PanelDish.ts"],"names":[],"mappingssourcesContent":["// import { _decorator, color, Component, find, Label, Layout, Node, RichText, Sprite, tween, UIOpacity, v3, Animation } from 'cc';\r\n// import { PanelTemplate } from './PanelTemplate';\r\n// import { PlatformApi } from '../../Other/SDK/PlatformApi';\r\n// import { Tool_Animation } from '../../Tool/Tool_Animation';\r\n// import { Tool_Event } from '../../Tool/Tool_Event';\r\n// import { Tool_Other } from '../../Tool/Tool_Other';\r\n// import { Tool_UI } from '../../Tool/Tool_UI';\r\n// import { Game_Mode } from '../../Tool/Resoure_Data';\r\n// const { ccclass, property } = _decorator;\r\n\r\n// @ccclass('PanelDish')\r\n// export class PanelDish extends PanelTemplate {\r\n\r\n//     /**主要面板 */\r\n//     PanelPlay: Node = null;\r\n//     /**地区文本 */\r\n//     LabelRegion: Label = null;\r\n//     /**目标文本 */\r\n//     LabelTarget: Label = null;\r\n//     /**分数文本 */\r\n//     LabelScore: RichText = null;\r\n//     /**菜品图片 */\r\n//     ImgDish: Node = null;\r\n//     /**正确图片 */\r\n//     ImgCorrect: Node = null;\r\n//     /**错误图片 */\r\n//     ImgWrong: Node = null;\r\n//     /**选项A */\r\n//     OptionA: Node = null;\r\n//     /**选项A文本 */\r\n//     LabelOptionA: Label = null;\r\n//     /**选项B */\r\n//     OptionB: Node = null;\r\n//     /**选项B文本 */\r\n//     LabelOptionB: Label = null;\r\n//     /**选项C */\r\n//     OptionC: Node = null;\r\n//     /**选项C文本 */\r\n//     LabelOptionC: Label = null;\r\n\r\n//     /**提示按钮 */\r\n//     BtnTip: Node = null;\r\n//     /**设置按钮 */\r\n//     BtnSetting: Node = null;\r\n\r\n//     /**结算面板 */\r\n//     PanelSettle: Node = null;\r\n\r\n//     async onLoad() {\r\n//         super.onLoad();\r\n//     }\r\n\r\n//     async onEnable() {\r\n//         if (!this.IsInit) {\r\n//             await this.LoadPanel();\r\n//         }\r\n//         this.GameStart();\r\n//         this.Resoure_Data.Music_Play(\"Audio/BGMGame\");\r\n//     }\r\n\r\n//     async start() {\r\n\r\n//     }\r\n\r\n//     /**加载面板 */\r\n//     async LoadPanel(): Promise<void> {\r\n//         return new Promise(async (resolve, reject) => {\r\n//             /**绑定关键节点 */\r\n//             this.BtnSetting = find(\"PanelUI/BtnSetting\", this.node);\r\n//             this.BtnTip = find(\"PanelUI/BtnTip\", this.node);\r\n\r\n//             this.PanelPlay = find(\"PanelPlay\", this.node);\r\n//             this.OptionA = find(\"OptionA\", this.PanelPlay);\r\n//             this.LabelOptionA = find(\"OptionA/Label\", this.PanelPlay).getComponent(Label);\r\n//             this.OptionB = find(\"OptionB\", this.PanelPlay);\r\n//             this.LabelOptionB = find(\"OptionB/Label\", this.PanelPlay).getComponent(Label);\r\n//             this.OptionC = find(\"OptionC\", this.PanelPlay);\r\n//             this.LabelOptionC = find(\"OptionC/Label\", this.PanelPlay).getComponent(Label);\r\n\r\n//             this.LabelRegion = find(\"Title/LabelRegion\", this.node).getComponent(Label);\r\n//             this.LabelTarget = find(\"Layout/LabelTarget\", this.PanelPlay).getComponent(Label);\r\n//             this.LabelScore = find(\"Layout/LabelScore\", this.PanelPlay).getComponent(RichText);\r\n//             this.ImgDish = find(\"ImgDish\", this.PanelPlay);\r\n//             this.ImgCorrect = find(\"ImgCorrect\", this.PanelPlay);\r\n//             this.ImgWrong = find(\"ImgWrong\", this.PanelPlay);\r\n\r\n//             this.PanelVictory = find(\"PanelVictory\", this.node);\r\n//             this.PanelFail = find(\"PanelFail\", this.node);\r\n//             this.PanelSettle = find(\"PanelSettle\", this.node);\r\n//             /**注册按钮事件 */\r\n//             await this.OnBtn(this.Game_Script.AnimSwitch);\r\n//             this.IsInit = true;\r\n//             resolve();\r\n//         });\r\n//     }\r\n\r\n//     /**注册按钮 */\r\n//     async OnBtn(AnimSwitch: boolean = false) {\r\n\r\n//         /**设置按钮 */\r\n//         const FunPGBtnSetting = () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             this.Game_Script.UpdatePanelSetting(true);\r\n//         }\r\n\r\n//         /**选项A按钮  */\r\n//         const FunPGOptionA = () => {\r\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\r\n//                 return;\r\n//             }\r\n//             if (this.LabelOptionA.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                 this.GameVictory();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionA, color(0, 255, 0, 255));\r\n//             } else {\r\n//                 this.GameFailed();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionA, color(255, 0, 0, 255));\r\n//             }\r\n//         }\r\n//         /**选项B按钮  */\r\n//         const FunPGOptionB = () => {\r\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\r\n//                 return;\r\n//             }\r\n//             if (this.LabelOptionB.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                 this.GameVictory();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionB, color(0, 255, 0, 255));\r\n//             } else {\r\n//                 this.GameFailed();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionB, color(255, 0, 0, 255));\r\n//             }\r\n//         }\r\n//         /**选项C按钮  */\r\n//         const FunPGOptionC = () => {\r\n//             if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\r\n//                 return;\r\n//             }\r\n//             if (this.LabelOptionC.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                 this.GameVictory();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionC, color(0, 255, 0, 255));\r\n//             } else {\r\n//                 this.GameFailed();\r\n//                 Tool_UI.instance.Set_Color_Sprite(this.OptionC, color(255, 0, 0, 255));\r\n//             }\r\n//         }\r\n\r\n\r\n//         /**提示按钮 */\r\n//         const FunPGBtnTip = () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             if (this.Game_Script.PropNum > 0) {\r\n//                 if (this.OptionA.active && this.OptionB.active && this.OptionC.active) {\r\n//                     if (this.Resoure_Data.Game_Mode == Game_Mode.Endless) {\r\n//                         if (this.Game_Script.PropNumUse == this.Game_Script.PropNumUseMax) {\r\n//                             this.Game_Script.OnMessage(\"道具使用上限\");\r\n//                             return;\r\n//                         } else {\r\n//                             this.Game_Script.PropNumUse++;\r\n//                         }\r\n//                     }\r\n//                     this.Game_Script.IsHint = true;\r\n//                     this.Game_Script.PropNum--;\r\n//                     this.BtnTip.active = false;\r\n//                     this.Game_Script.DataSet();\r\n//                     this.UpdatePropUI();\r\n//                     if (this.LabelOptionA.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                         this.OptionA.active = true;\r\n//                     } else {\r\n//                         this.OptionA.active = false;\r\n//                     }\r\n//                     if (this.LabelOptionB.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                         this.OptionB.active = true;\r\n//                     } else {\r\n//                         this.OptionB.active = false;\r\n//                     }\r\n//                     if (this.LabelOptionC.string == this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName) {\r\n//                         this.OptionC.active = true;\r\n//                     } else {\r\n//                         this.OptionC.active = false;\r\n//                     }\r\n//                 }\r\n//             } else {\r\n//                 PlatformApi.instance.showVideoAd(() => {\r\n//                     this.Game_Script.PropNum += 3;\r\n//                     this.UpdatePropUI();\r\n//                     this.Game_Script.DataSet();\r\n//                 }, () => {\r\n//                     this.Game_Script.PropNum += 0;\r\n//                     this.UpdatePropUI();\r\n//                     this.Game_Script.DataSet();\r\n//                 });\r\n//             }\r\n\r\n//         }\r\n\r\n//         /**分享按钮 */\r\n//         const FunPGShare = async () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             // if (this.ShareTime == -1) {\r\n//             this.Game_Script.ShareTime = this.Resoure_Data.Get_Timestamp();\r\n//             var e = new Date().getTime();\r\n//             console.log(\"当前邀请时间\", this.Game_Script.ShareTime, \"当前时间\", e);\r\n//             console.log(\"剩余有效时间\", this.Game_Script.ShareTime + 2592e5 - e);\r\n//             this.Game_Script.DataSet();\r\n//             // } else {\r\n\r\n//             // }\r\n//             PlatformApi.instance.shareAppMessage(() => {\r\n//                 this.Game_Script.GetProp(1, \"分享成功\");\r\n//                 console.log(\"分享成功\");\r\n//             }, () => {\r\n//                 console.log(\"分享失败\");\r\n//             });\r\n//         }\r\n//         /**再生广告按钮 */\r\n//         const FunPGResurAd = () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             PlatformApi.instance.showVideoAd(async () => {\r\n//                 console.log(\"复活成功\");\r\n//                 this.Game_Script.IsContinue = true;\r\n//                 Tool_Other.instance.Sort_Random(this.Game_Script.TopicData);\r\n//                 if (this.Resoure_Data.Game_Mode == Game_Mode.Endless) {\r\n//                     this.Game_Script.PropNumUse++;\r\n//                     console.log(\"复活次数\", this.Game_Script.PropNumUse);\r\n//                 }\r\n//                 await this.GameStart();\r\n//             }, () => {\r\n//                 console.log(\"复活失败\");\r\n//                 return;\r\n//             });\r\n//         }\r\n//         /**返回按钮 */\r\n//         const FunBack = async () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             this.Game_Script.PanelGameHide();\r\n//             this.Game_Script.ViewHide();\r\n//             switch (this.Resoure_Data.Game_Mode) {\r\n//                 case Game_Mode.Endless:\r\n//                     this.Game_Script.ViewNormal.active = false;\r\n//                     this.Game_Script.ViewMain.active = true;\r\n//                     if (this.Game_Script.TopicIndex >= 1) {//this.TopicIndexMin\r\n//                         let Index = this.Game_Script.PlaceBarId - 1;\r\n//                         console.log(`参与盖楼,地区是${this.Game_Script.ConfigRegionDish[Index].City}`);\r\n//                         let DataRegionalRanking = await this.Resoure_Data.Fetch_Data(this.Game_Script.UrlRegionRanking);\r\n//                         console.log(DataRegionalRanking.RegionalRanking);\r\n//                         console.log(\"修改前的Score:\", DataRegionalRanking.RegionalRanking[Index].Score);\r\n//                         DataRegionalRanking.RegionalRanking[Index].Score += this.Game_Script.TopicIndex;\r\n//                         console.log(\"修改后的Score:\", DataRegionalRanking.RegionalRanking[Index].Score);\r\n//                         await this.Resoure_Data.Update_Data(this.Game_Script.UrlRegionRanking, DataRegionalRanking);\r\n//                     }\r\n//                     break;\r\n//                 case Game_Mode.Normal:\r\n//                     this.Game_Script.ViewMain.active = false;\r\n//                     this.Game_Script.ViewNormal.active = true;\r\n//                     break;\r\n//                 default:\r\n//                     break;\r\n//             }\r\n//         }\r\n\r\n//         /**继续游戏按钮回调 */\r\n//         const BtnNextCall = async () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             this.Game_Script.PanelGameHide();\r\n//             this.Game_Script.ViewHide();\r\n//             this.Game_Script.ViewMain.active = false;\r\n//             this.Game_Script.ViewNormal.active = true;\r\n//         }\r\n\r\n//         /**返回首页按钮回调 */\r\n//         const BtnBreakCall = async () => {\r\n//             this.Resoure_Data.Sound_Play(\"Audio/SoundBtn\");\r\n//             this.Game_Script.PanelGameHide();\r\n//             this.Game_Script.ViewHide();\r\n//             this.Game_Script.ViewNormal.active = false;\r\n//             this.Game_Script.ViewMain.active = true;\r\n//             this.Resoure_Data.Game_Mode = Game_Mode.Tutorial;\r\n//         }\r\n\r\n//         /**设置按钮 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.BtnSetting.getChildByName(\"Icon\"), FunPGBtnSetting);\r\n//         /**提示按钮 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.BtnTip, FunPGBtnTip);\r\n\r\n//         /**选项按钮 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionA, FunPGOptionA);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionB, FunPGOptionB);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.OptionC, FunPGOptionC);\r\n\r\n//         /**胜利界面按钮 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnNext\"), BtnNextCall);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelVictory.getChildByName(\"BtnBreak\"), BtnBreakCall);\r\n//         /**失败界面按钮 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnShare\"), FunPGShare);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnResurAd\"), FunPGResurAd);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelFail.getChildByName(\"BtnBack\"), FunBack);\r\n//         /**结算面板 */\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnResurAd\"), FunPGResurAd);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnBack\"), FunBack);\r\n//         Tool_Event.instance.On_Event_TOUCH_END(this.PanelSettle.getChildByName(\"BtnClose\"), FunBack);\r\n\r\n//         /**设置按钮动画 */\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionA, AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionB, AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.OptionC, AnimSwitch);\r\n//         /**提示按钮 */\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.BtnTip, AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.BtnSetting.getChildByName(\"Icon\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnShare\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnResurAd\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelFail.getChildByName(\"BtnBack\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnResurAd\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnBack\"), AnimSwitch);\r\n//         Tool_Event.instance.Set_Btn_Event_Anim(this.PanelSettle.getChildByName(\"BtnClose\"), AnimSwitch);\r\n//     }\r\n\r\n//     /**游戏开始 */\r\n//     async GameStart() {\r\n//         if (this.Game_Script == null) {\r\n//             return;\r\n//         }\r\n\r\n\r\n//         this.ImgCorrect.active = false;\r\n//         this.ImgWrong.active = false;\r\n//         this.PanelVictory.active = false;\r\n//         this.PanelFail.active = false;\r\n//         this.PanelSettle.active = false;\r\n\r\n//         this.PanelPlay.active = true;\r\n\r\n//         this.BtnTip.active = true;\r\n//         this.OptionA.active = true;\r\n//         this.OptionB.active = true;\r\n//         this.OptionC.active = true;\r\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionA);\r\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionB);\r\n//         Tool_UI.instance.Set_Color_Sprite(this.OptionC);\r\n//         this.UpdatePropUI();\r\n//         /**更新提示 */\r\n//         switch (this.Resoure_Data.Game_Mode) {\r\n//             case Game_Mode.Endless:\r\n//                 this.LabelRegion.string = \"做个好菜·无尽模式\";\r\n//                 this.PanelPlay.getChildByName(\"Endless\").active = true;\r\n//                 /**最高记录 */\r\n//                 this.LabelTarget.string = `历史最高记录 `;\r\n//                 this.LabelScore.string = `第<size=60>${this.Game_Script.TopicIndex + 1}</size><size=50>/</size><size=60>${this.Game_Script.HighestRecordLast}</size>道`;\r\n//                 break;\r\n//             case Game_Mode.Normal:\r\n//                 let City = this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].City;\r\n//                 this.LabelRegion.string = `做个好菜·${City}省`;\r\n//                 this.PanelPlay.getChildByName(\"Endless\").active = false;\r\n//                 this.PanelPlay.getChildByName(\"Title\").getChildByName(\"Label\").getComponent(Label).string = `食在${City}`\r\n//                 this.LabelTarget.string = `猜出${this.Game_Script.TopicCount}道美食名称·`;\r\n//                 this.LabelScore.string = `第${(this.Game_Script.TopicIndex + 1)}道`;\r\n//                 break;\r\n//             case Game_Mode.Tutorial:\r\n//                 this.LabelRegion.string = \"猜一猜\";\r\n//                 this.LabelTarget.string = `猜出${this.Game_Script.TopicCount}道美食名称·`;\r\n\r\n//                 break;\r\n//             default:\r\n//                 break;\r\n//         }\r\n\r\n//         /**图片赋值 */\r\n//         let SpriteFrame = await this.Resoure_Data.Load_SpriteFrame(\"SpriteFrame/Dish/\" + this.Game_Script.TopicData[this.Game_Script.TopicIndex].Id);\r\n//         Tool_UI.instance.Set_SpriteFrame(this.ImgDish, SpriteFrame);\r\n//         /**文本赋值 */\r\n//         let Result = [];\r\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].CorrectName)\r\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].WrongName)\r\n//         Result.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex].WrongName)\r\n//         Tool_Other.instance.Sort_Random(Result);\r\n//         this.LabelOptionA.string = Result[0];\r\n//         this.LabelOptionB.string = Result[1];\r\n//         this.LabelOptionC.string = Result[2];\r\n//     }\r\n\r\n//     /**初始数据 */\r\n//     async InitData() {\r\n\r\n\r\n\r\n//     }\r\n\r\n//     /**游戏胜利 */\r\n//     async GameVictory() {\r\n//         this.Resoure_Data.Sound_Play(\"Audio/SoundCorrect\");\r\n//         this.ImgCorrect.active = true;\r\n//         this.Game_Script.DishDataTemp.push(this.Game_Script.TopicData[this.Game_Script.TopicIndex]);\r\n\r\n//         this.Game_Script.BlockInputEvents.active = true;\r\n//         await Tool_Animation.instance.Async_Wait(0.5);\r\n//         this.Game_Script.BlockInputEvents.active = false;\r\n\r\n//         this.Game_Script.TopicIndex++;\r\n\r\n//         /**游戏胜利 */\r\n//         if (this.Game_Script.TopicIndex == this.Game_Script.TopicCount) {\r\n//             /**胜利音效 */\r\n//             this.Resoure_Data.Sound_Play(\"Audio/Sound/Victory\");\r\n//             switch (this.Resoure_Data.Game_Mode) {\r\n//                 case Game_Mode.Endless:\r\n//                     /**最高记录 */\r\n//                     this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\r\n//                     /**无尽星星数 */\r\n//                     this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\r\n//                 case Game_Mode.Normal:\r\n//                     this.PanelPlay.active = false;\r\n\r\n//                     // let LineHint = find(\"Settle/Line2\", this.PanelVictory);\r\n//                     // let LineContinue = find(\"Settle/Line3\", this.PanelVictory);\r\n//                     // LineHint.getChildByName(\"Win\").active = !this.Game_Script.IsHint;\r\n//                     // LineHint.getChildByName(\"Lose\").active = this.Game_Script.IsHint;\r\n//                     // LineContinue.getChildByName(\"Win\").active = !this.Game_Script.IsContinue;\r\n//                     // LineContinue.getChildByName(\"Lose\").active = this.Game_Script.IsContinue;\r\n//                     // this.Resoure_Data.Sound_Play(\"Audio/SoundWin\");\r\n\r\n\r\n//                     this.PanelVictory.active = true;\r\n\r\n//                     this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Condition1\")\r\n//                     this.PanelVictory.getChildByName(\"WinBanner\").getChildByName(\"Condition1\")\r\n\r\n\r\n\r\n//                     find(\"WinBanner/Condition1/Correct\", this.PanelVictory).active = !this.Game_Script.IsHint\r\n//                     find(\"WinBanner/Condition1/Wrong\", this.PanelVictory).active = this.Game_Script.IsHint;\r\n\r\n//                     find(\"WinBanner/Condition2/Correct\", this.PanelVictory).active = !this.Game_Script.IsContinue\r\n//                     find(\"WinBanner/Condition2/Wrong\", this.PanelVictory).active = this.Game_Script.IsContinue;\r\n\r\n//                     find(\"WinBanner/Stars/StarC\", this.PanelVictory).getComponent(Sprite).grayscale = this.Game_Script.IsHint;\r\n//                     find(\"WinBanner/Stars/StarR\", this.PanelVictory).getComponent(Sprite).grayscale = this.Game_Script.IsContinue;\r\n//                     find(\"Light\", this.PanelVictory).getComponent(Animation).play();\r\n\r\n\r\n//                     //星星数\r\n//                     let StarsLevel: number = 1;\r\n//                     StarsLevel += this.Game_Script.IsHint ? 0 : 1;\r\n//                     StarsLevel += this.Game_Script.IsContinue ? 0 : 1;\r\n//                     this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].IsSuccess = true;\r\n//                     this.Game_Script.ConfigRegionDish[this.Game_Script.TopicDataId - 1].StarsLevel = StarsLevel;\r\n//                     //完美通关\r\n//                     if (!this.Game_Script.IsContinue && !this.Game_Script.IsHint) {//&& !this.IsHint\r\n//                         const KeyId = this.Game_Script.TopicDataId - 1;\r\n//                         const KeyDataV = `DishData${this.Game_Script.ConfigRegionDish[KeyId].NamePinYin}Victory`;\r\n//                         this[KeyDataV] = [...this[KeyDataV], ... this.Game_Script.DishDataTemp];\r\n//                         this.Game_Script.SetDishData();\r\n//                     }\r\n//                     /**保存数据 */\r\n//                     this.Game_Script.DataSet();\r\n//                     /**刷新场景 */\r\n//                     this.Game_Script.UpdateScene();\r\n//                     break;\r\n//                 case Game_Mode.Tutorial:\r\n//                     this.Game_Script.PanelGameHide();\r\n//                     this.Game_Script.ViewNormal.active = false;\r\n//                     this.Game_Script.ViewMain.active = true;\r\n//                     this.Resoure_Data.Data_Set(\"First_Start\", false);\r\n//                     break;\r\n//                 default:\r\n//                     break;\r\n//             }\r\n//         } else {\r\n//             switch (this.Resoure_Data.Game_Mode) {\r\n//                 case Game_Mode.Endless:\r\n//                     /**最高记录 */\r\n//                     this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\r\n//                     /**无尽星星数 */\r\n//                     this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\r\n//                     /**保存数据 */\r\n//                     this.Game_Script.DataSet();\r\n//                     break;\r\n//                 case Game_Mode.Normal:\r\n\r\n//                     break;\r\n//                 case Game_Mode.Tutorial:\r\n\r\n//                     break;\r\n//                 default:\r\n//                     break;\r\n//             }\r\n//             await this.GameStart();\r\n//         }\r\n\r\n//     }\r\n\r\n//     /**游戏失败 */\r\n//     async GameFailed() {\r\n//         this.Resoure_Data.Sound_Play(\"Audio/SoundWrong\");\r\n//         if (this.Resoure_Data.Vibration_Switch_Get()) {\r\n//             PlatformApi.instance.vibrateShort();\r\n//         }\r\n//         this.ImgWrong.active = true;\r\n//         this.Game_Script.BlockInputEvents.active = true;\r\n\r\n//         await Tool_Animation.instance.Async_Wait(0.5);\r\n//         this.Game_Script.BlockInputEvents.active = false;\r\n//         this.BtnTip.active = false;\r\n//         this.OptionA.active = false;\r\n//         this.OptionB.active = false;\r\n//         this.OptionC.active = false;\r\n//         this.PanelFail.active = true;\r\n//         switch (this.Resoure_Data.Game_Mode) {\r\n//             case Game_Mode.Endless:\r\n//                 /**最高记录 */\r\n//                 this.Game_Script.HighestRecord = Math.max(this.Game_Script.TopicIndex, this.Game_Script.HighestRecord);\r\n//                 /**无尽星星数 */\r\n//                 this.Game_Script.DishScoreEndless = Math.max(Math.floor(this.Game_Script.TopicIndex / 10), this.Game_Script.DishScoreEndless);\r\n//                 this.PanelSettle.active = true;\r\n//                 this.PanelFail.active = false;\r\n//                 this.PanelSettle.getChildByName(\"Window\").getChildByName(\"Title\").getComponent(Label).string = this.Game_Script.TopicIndexMin - this.Game_Script.TopicIndex <= 0 ? `进入首页房屋,答对题目${this.Game_Script.TopicIndex}` : `还需答对${this.Game_Script.TopicIndexMin - this.Game_Script.TopicIndex}题即可进入首页房屋`;\r\n//                 this.PanelSettle.getChildByName(\"Window\").getChildByName(\"Number\").getComponent(Label).string = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse + \"\"\r\n//                 this.PanelSettle.getChildByName(\"BtnResurAd\").active = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse == 0 ? false : true;\r\n//                 this.PanelSettle.getChildByName(\"BtnBack\").active = this.Game_Script.PropNumUseMax - this.Game_Script.PropNumUse == 0 ? true : false;\r\n//                 if (this.Game_Script.PropNumUse == this.Game_Script.PropNumUseMax) {\r\n//                     console.log(`闯关失败,答对题目${this.Game_Script.TopicIndex}`);\r\n//                 }\r\n//             case Game_Mode.Normal:\r\n//                 /**保存数据 */\r\n//                 this.Game_Script.DataSet();\r\n//                 /**刷新场景 */\r\n//                 this.Game_Script.UpdateScene();\r\n//                 break;\r\n//             case Game_Mode.Tutorial:\r\n\r\n//                 break;\r\n//             default:\r\n//                 break;\r\n//         }\r\n//     }\r\n\r\n\r\n//     /**刷新道具UI */\r\n//     UpdatePropUI() {\r\n//         const BtnTipLabel = this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"Label\").getComponent(Label);\r\n//         const BtnTipNull = this.BtnTip.getChildByName(\"PropNum\").getChildByName(\"PropNumNull\");\r\n//         BtnTipLabel.string = `${this.Game_Script.PropNum}`;\r\n//         if (this.Game_Script.PropNum > 0) {\r\n//             BtnTipNull.active = false;\r\n//         } else {\r\n//             BtnTipNull.active = true;\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n"]}